{"version":3,"sources":["app.js","controllers/appCtrl.js","controllers/controllers.js","filters/filters.js","services/services.js","directives/directives.js"],"names":[],"mappings":"AAAA;AACA,IAAI,MAAM,QAAQ,OAAO,WAAW;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AAGF,KAAK,SAAS,IAAI,SAAS,gBAAgB,CAAC,KAAK,SAAS,IAAI,SAAS,iBAAiB,CAAC,IAAI;EAC3F,IAAI,SAAS,WAAW;EACxB,IAAI,SAAS,WAAW;EACxB,IAAI,SAAS,UAAU;OAClB;EACL,IAAI,SAAS,UAAU;EACvB,IAAI,SAAS,WAAW;EACxB,IAAI,SAAS,WAAW;;;AAG1B,IAAI,OAAO,CAAC,oBAAoB,gBAAgB,oBAAoB,UAAU,kBAAkB,cAAc,kBAAkB;EAC9H,aAAa,aAAa;EAC1B,iBAAiB,iBAAiB;;;;AAIpC,IAAI,gFAAO,UAAU,eAAe,qBAAqB;EACvD,SAAS;EACT,kBAAkB,SAAS;EAC3B,oBAAoB,WAAW;EAC/B,oBAAoB,gBAAgB;;EAEpC,cAAc,aAAa,KAAK,CAAC,MAAM,aAAa;IAClD,SAAS,IAAI,WAAW,eAAe,YAAY,MAAM;MACvD,OAAO;QACL,WAAW,SAAS,QAAQ;UAC1B,OAAO,UAAU,OAAO,WAAW;UACnC,IAAI,cAAc,OAAO;YACvB,OAAO,QAAQ,gBAAgB,YAAY,cAAc;;UAE3D,OAAO;;QAET,YAAY,SAAS,UAAU;UAC7B,IAAI,IAAI,SAAS,QAAQ;UACzB,IAAI,GAAG;YACL,EAAE,QAAQ,WAAW;YACrB,cAAc,QAAQ;;;;UAIxB,OAAO;;QAET,iBAAiB,SAAS,UAAU;UAClC,IAAI,SAAS,WAAW,OAAO,SAAS,WAAW;YACjD,SAAS,WAAW,KAAK;YACzB,IAAI,SAAS,KAAK,SAAS,iBAAiB;cAC1C,OAAO,cAAc;cACrB,KAAK;cACL,UAAU,KAAK;mBACV,IAAI,SAAS,KAAK,SAAS,iBAAiB;cACjD,OAAO,cAAc;cACrB,KAAK;cACL,UAAU,KAAK;mBACV,IAAI,SAAS,KAAK,SAAS,qBAAqB;cACrD,OAAO,cAAc;cACrB,KAAK;cACL,UAAU,KAAK;mBACV,IAAI,SAAS,KAAK,SAAS,sBAAsB;cACtD,OAAO,cAAc;cACrB,KAAK;cACL,UAAU,KAAK;;;;;YAKjB,QAAQ,IAAI;;;UAGd,OAAO,GAAG,OAAO;;;;;;;AAO3B,IAAI,sEAAI,SAAS,sBAAsB,kBAAkB,mBAAmB;EAC1E,OAAO,iBAAiB,QAAQ,WAAW;IACzC,IAAI,UAAU,SAAS;KACtB;;;EAGH,CAAC,SAAS,GAAG,GAAG,GAAG;IACjB,IAAI,IAAI,MAAM,EAAE,qBAAqB,GAAG;IACxC,IAAI,EAAE,eAAe,KAAK,CAAC;IAC3B,KAAK,EAAE,cAAc,IAAI,GAAG,KAAK;IACjC,GAAG,MAAM;IACT,IAAI,WAAW,aAAa,IAAI;IAChC,UAAU,UAAU;;EAEtB,GAAG,SAAS,IAAI,SAAS,gBAAgB,CAAC,KAAK,SAAS,IAAI,SAAS,iBAAiB,CAAC,EAAE;IACvF,SAAS,iBAAiB,eAAe,YAAY;MACnD,kBAAkB,MAAM;MACxB,kBAAkB,SAAS;MAC3B,iBAAiB,iBAAiB;MAClC,qBAAqB;;OAEpB;;;;;AAKP,IAAI,gFAAO,SAAS,gBAAgB,oBAAoB;EACtD,SAAS;EACT;KACG,MAAM,OAAO;;MAEZ,UAAU;MACV,aAAa;OACZ,MAAM,WAAW;MAClB,UAAU;MACV,KAAK;MACL,aAAa;OACZ,MAAM,iBAAiB;MACxB,KAAK;MACL,aAAa;OACZ,MAAM,kBAAkB;MACzB,KAAK;MACL,YAAY;MACZ,aAAa;OACZ,MAAM,kBAAkB;MACzB,KAAK;MACL,YAAY;MACZ,UAAU;OACT,MAAM,mBAAmB;MAC1B,KAAK;MACL,aAAa;OACZ,MAAM,kBAAkB;MACzB,KAAK;MACL,aAAa;OACZ,MAAM,qBAAqB;MAC5B,UAAU;MACV,KAAK;MACL,aAAa;OACZ,MAAM,8BAA8B;MACrC,UAAU;MACV,KAAK;MACL,aAAa;OACZ,MAAM,mCAAmC;MAC1C,KAAK;MACL,aAAa;OACZ,MAAM,4CAA4C;MACnD,KAAK;MACL,aAAa;OACZ,MAAM,8BAA8B;MACrC,KAAK;MACL,aAAa;OACZ,MAAM,6BAA6B;MACpC,KAAK;MACL,aAAa;MACb,YAAY;MACZ,SAAS;QACP,qDAAe,SAAS,aAAa,cAAc,GAAG;UACpD,IAAI,IAAI,GAAG;UACX,YAAY,IAAI,SAAS,aAAa,SAAS,MAAM;YACnD,SAAS,GAAG;cACV,EAAE,QAAQ,EAAE;;UAEhB,OAAO,EAAE;;;OAGZ,MAAM,0BAA0B;MACjC,KAAK;MACL,aAAa;OACZ,MAAM,oCAAoC;MAC3C,KAAK;MACL,aAAa;OACZ,MAAM,mCAAmC;MAC1C,KAAK;MACL,SAAS;QACP,yCAAS,SAAS,cAAc,aAAa;UAC3C,OAAO,YAAY,IAAI,SAAS,aAAa,IAAI;;;MAGrD,OAAO;QACL,IAAI;UACF,aAAa;UACb,YAAY;;QAEd,oCAAoC;UAClC,aAAa;;;OAGhB,MAAM,8CAA8C;MACrD,KAAK;MACL,aAAa;OACZ,MAAM,6CAA6C;MACpD,KAAK;MACL,aAAa;OACZ,MAAM,wCAAwC;MAC/C,KAAK;MACL,aAAa;OACZ,MAAM,wCAAwC;MAC/C,KAAK;MACL,OAAO;QACL,sBAAsB;UACpB,aAAa;;;;;;EAMrB,mBAAmB,UAAU,UAAU;;EAEvC,KAAK,SAAS,IAAI,SAAS,gBAAgB,CAAC,KAAK,SAAS,IAAI,SAAS,iBAAiB,CAAC,IAAI;;SAEtF;IACL,kBAAkB,UAAU;MAC1B,SAAS;MACT,aAAa;;;;;;AAMnB,IAAI,8BAAO,SAAS,oBAAoB;EACtC,IAAI,iBAAiB,mBAAmB,cAAc,QAAQ;IAC5D,wBAAwB;IACxB,sBAAsB,CAAC;IACvB,uBAAuB,CAAC,OAAO;IAC/B,OAAO;IACP,MAAM;IACN,OAAO;IACP,OAAO;IACP,OAAO;;EAET,IAAI,gBAAgB,mBAAmB,cAAc,SAAS;;IAE5D,wBAAwB;IACxB,sBAAsB,CAAC,OAAO;IAC9B,uBAAuB,CAAC;IACxB,OAAO;IACP,MAAM;IACN,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;;;EAGT,mBAAmB,cAAc,WAAW;EAC5C,mBAAmB,cAAc,UAAU;;EAE3C,mBAAmB,MAAM;KACtB,eAAe,WAAW;MACzB,WAAW;MACX,SAAS;MACT,SAAS;MACT,SAAS;;KAEV,cAAc,UAAU;MACvB,WAAW;MACX,SAAS;MACT,SAAS;;KAEV,YAAY;;;AAGjB;ACpRA,IAAI,WAAW,2NAAW,SAAS,YAAY,QAAQ,YAAY;EACjE,WAAW,QAAQ,IAAI,YAAY,MAAM,IAAI,SAAS,SAAS,QAAQ,cAAc,sBAAsB,cAAc,UAAU;EACnI,OAAO,WAAW;EAClB,OAAO,OAAO,KAAK;EACnB,OAAO,gBAAgB;EACvB,OAAO,YAAY,aAAa,QAAQ;;;EAGxC,OAAO,KAAK;IACV,YAAY;IACZ,aAAa;IACb,WAAW,UAAU,OAAO;MAC1B,GAAG,UAAU,OAAO;QAClB,WAAW,OAAO;QAClB,WAAW,SAAS;WACjB;QACH,WAAW,OAAO;QAClB,WAAW,QAAQ;;;;IAIvB,iBAAiB,WAAW;MAC1B,OAAO,GAAG,aAAa,CAAC,OAAO,GAAG;;;;;;;;EAQtC,WAAW,yBAAyB,KAAK,SAAS,MAAM;IACtD,IAAI,IAAI,KAAK,KAAK;IAClB,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI;MACxB,KAAK,KAAK,GAAG,QAAQ,QAAQ,iBAAiB,KAAK,KAAK,GAAG;;IAE7D,OAAO,aAAa,KAAK;;;;EAI3B,IAAI;EACJ,OAAO,WAAW,SAAS,aAAa,IAAI;IAC1C,eAAe;IACf,YAAY;;;;EAId,OAAO,SAAS,WAAW;IACzB,KAAK;;;;;EAKP,OAAO,WAAW,SAAS,OAAO;IAChC,OAAO,GAAG;;;EAGZ,OAAO,OAAO,CAAC;IACb,MAAM;IACN,OAAO;IACP,OAAO;IACP,MAAM;IACN,WAAW;IACX,OAAO;;;EAGT,OAAO,WAAW,CAAC;IACjB,MAAM;IACN,OAAO;IACP,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;KACP;IACD,MAAM;IACN,OAAO;IACP,OAAO;IACP,MAAM;IACN,WAAW;IACX,OAAO;KACN;IACD,MAAM;IACN,OAAO;IACP,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;KACP;IACD,MAAM;IACN,OAAO;IACP,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;;;EAGV,OAAO,sBAAsB,SAAS,MAAM;;IAE1C,OAAO,KAAK;;;EAGd,OAAO,cAAc;IACnB,OAAO;IACP,QAAQ;;;EAGV,OAAO,aAAa,SAAS,OAAO;IAClC,IAAI,IAAI,GAAG;IACX,WAAW,OAAO,QAAQ;MACxB,GAAG;OACF,KAAK,SAAS,UAAU;MACzB,EAAE,QAAQ,SAAS,KAAK;;;OAGvB,WAAW;MACZ,EAAE;;;IAGJ,OAAO,EAAE;;;EAGX,OAAO,MAAM;IACX,eAAe;MACb,UAAU,qBAAqB;MAC/B,iBAAiB,qBAAqB;MACtC,SAAS,qBAAqB;;IAEhC,UAAU;MACR,eAAe,qBAAqB;;;;;;;AAO1C;ACtIA,IAAI,WAAW,eAAe,CAAC,QAAQ,UAAU,SAAS,MAAM,QAAQ;IACpE,KAAK,iBAAiB,KAAK,WAAW;QAClC,IAAI,KAAK,YAAY,kBAAkB,MAAM;YACzC,OAAO,GAAG;;;;;AAKtB,IAAI,WAAW;qHACX,SAAS,YAAY,aAAa,IAAI,QAAQ,QAAQ,cAAc;QAChE,WAAW,WAAW;;QAEtB,OAAO,QAAQ,YAAY;;QAE3B,IAAI,OAAO,QAAQ,QAAQ,0BAA0B;YACjD,OAAO,KAAK,SAAS;;YAErB,YAAY,IAAI,SAAS,aAAa,SAAS,MAAM;gBACjD,SAAS,GAAG;oBACR,OAAO,KAAK,QAAQ,CAAC,EAAE;oBACvB,OAAO,KAAK,SAAS;;;;;QAKjC,IAAI,OAAO,QAAQ,QAAQ,oCAAoC;YAC3D,YAAY,gBAAgB,aAAa;;YAEzC,OAAO,QAAQ,YAAY;;;;;AAKvC,IAAI,WAAW,aAAa,CAAC,UAAU,aAAa,MAAM,MAAM;IAC5D,QAAQ,MAAM;IACd,SAAS,QAAQ,WAAW,IAAI,IAAI,QAAQ,MAAM,IAAI,SAAS;;QAE3D,IAAI,KAAK,YAAY,kBAAkB,MAAM;YACzC,OAAO,GAAG;;;QAGd,OAAO,YAAY;;QAEnB,GAAG,eAAe,SAAS,GAAG;;YAE1B,IAAI,EAAE,WAAW,aAAa;;gBAE1B,GAAG,IAAI,OAAO,SAAS,GAAG;oBACtB,OAAO,eAAe;oBACtB,OAAO,UAAU,EAAE;oBACnB,OAAO,YAAY,iBAAiB,OAAO;;;mBAG5C;;gBAEH,OAAO,eAAe;gBACtB,OAAO,UAAU;gBACjB,OAAO,YAAY;;;;QAI3B,OAAO,UAAU,WAAW;YACxB,KAAK,WAAW,KAAK,WAAW;gBAC5B,OAAO,GAAG;eACX,SAAS,GAAG;gBACX,UAAU,MAAM,EAAE,KAAK;;;;QAI/B,OAAO,YAAY,WAAW;YAC1B,UAAU;;;QAGd,OAAO,gBAAgB,WAAW;YAC9B,UAAU,cAAc,OAAO;;;QAGnC,IAAI,UAAU,WAAW;YACrB,GAAG,IAAI,OAAO;gBACV,QAAQ;eACT;gBACC,SAAS,UAAU;oBACf,OAAO,aAAa,aAAa,SAAS;oBAC1C,QAAQ,IAAI;;;gBAGhB,SAAS,KAAK;oBACV,OAAO,aAAa;;;;QAIhC,OAAO,cAAc,WAAW;YAC5B,KAAK,OAAO,OAAO,cAAc,KAAK,SAAS,GAAG;;gBAE9C,OAAO,GAAG;;;eAGX,SAAS,KAAK;gBACb,UAAU,MAAM;;;;;;;AAOhC,IAAI,WAAW,cAAc,CAAC,UAAU,MAAM,QAAQ;IAClD,aAAa;IACb,SAAS,QAAQ,IAAI,MAAM,WAAW,WAAW,QAAQ;QACrD,IAAI;;QAEJ,OAAO,UAAU;QACjB,OAAO,WAAW,WAAW;YACzB,GAAG,QAAQ,KAAK,WAAW;gBACvB;;;;QAIR,UAAU,WAAW;YACjB,GAAG,IAAI,OAAO;gBACV,QAAQ;eACT;gBACC,SAAS,UAAU;oBACf,GAAG;;;;;;;gBAOP,SAAS,KAAK;oBACV,UAAU;wBACN,UAAU;yBACT,OAAO,QAAQ,QAAQ,SAAS,cAAc;yBAC9C,oBAAoB;yBACpB,MAAM;;yBAEN,UAAU;yBACV,GAAG;;;;;;;;QAQpB,OAAO,aAAa,WAAW;;;YAG3B,IAAI,OAAO,WAAW,QAAQ;gBAC1B,KAAK,OAAO,OAAO,SAAS;oBACxB,SAAS,GAAG;;wBAER,OAAO,GAAG;;;oBAGd,SAAS,GAAG;;;;;;;;;AAShC,IAAI,WAAW,cAAc,CAAC,UAAU,QAAQ,MAAM,SAAS,QAAQ,MAAM,IAAI;IAC7E,KAAK;;IAEL,QAAQ,IAAI;;;AAGhB,IAAI,WAAW,eAAe,CAAC,eAAe,UAAU;IACpD,UAAU;IACV,SAAS,aAAa,QAAQ,cAAc,QAAQ,MAAM;;QAEtD,OAAO,KAAK,KAAK;QACjB,IAAI,WAAW,YAAY,IAAI,SAAS,aAAa;QACrD,OAAO,OAAO;YACV,SAAS;YACT,YAAY;gBACR,OAAO;gBACP,QAAQ;;YAEZ,WAAW;gBACP,OAAO;gBACP,QAAQ;;YAEZ,MAAM;gBACF,OAAO;gBACP,QAAQ;;;;QAIhB,OAAO,kBAAkB,WAAW;YAChC,YAAY,IAAI,SAAS,aAAa,IAAI,IAAI;gBAC1C,SAAS;gBACT,cAAc;eACf,KAAK,SAAS,GAAG;gBAChB,OAAO,eAAe,EAAE;;;;QAIhC,OAAO,qBAAqB,WAAW;YACnC,OAAO,KAAK,WAAW,SAAS;YAChC,SAAS,IAAI,cAAc,UAAU,KAAK,SAAS,GAAG;gBAClD,OAAO,KAAK,WAAW,QAAQ,EAAE;gBACjC,OAAO,KAAK,WAAW,SAAS;;;;QAIxC,OAAO,oBAAoB,WAAW;YAClC,OAAO,KAAK,UAAU,SAAS;;YAE/B,SAAS,IAAI,aAAa,UAAU,KAAK,SAAS,GAAG;gBACjD,OAAO,KAAK,UAAU,QAAQ,EAAE;gBAChC,OAAO,KAAK,UAAU,SAAS;;;;;QAKvC,OAAO,eAAe,WAAW;YAC7B,OAAO,KAAK,KAAK,SAAS;;YAE1B,SAAS,IAAI,QAAQ,UAAU,KAAK,SAAS,GAAG;gBAC5C,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,OAAO,KAAK,KAAK,SAAS;;;;;QAKlC,OAAO,oBAAoB,WAAW;YAClC,YAAY,IAAI,MAAM,IAAI,WAAW,KAAK;gBACtC,SAAS,OAAO,aAAa;eAC9B,KAAK,SAAS,EAAE;gBACf,OAAO,aAAa,eAAe,EAAE;;;;QAI7C,OAAO,iBAAiB,WAAW;YAC/B,YAAY,IAAI,MAAM,IAAI,mBAAmB,KAAK;gBAC9C,SAAS,OAAO,aAAa;eAC9B,KAAK,UAAU,GAAG;gBACjB,OAAO,aAAa,eAAe,EAAE;;;;QAI7C,OAAO,WAAW,WAAW;YACzB,YAAY,IAAI,MAAM,IAAI,mBAAmB,OAAO,aAAa,IAAI,SAAS,KAAK,UAAU,GAAG;gBAC5F,OAAO,aAAa,eAAe;;;;QAI3C,IAAI,OAAO,WAAW;YAClB,OAAO;;YAEP,QAAQ,OAAO,QAAQ;gBACnB,KAAK;oBACD,OAAO;oBACP;gBACJ,KAAK;oBACD,OAAO;oBACP;gBACJ,KAAK;oBACD,OAAO;oBACP;gBACJ;oBACI,OAAO;;;;;QAKnB;;;;;AAKR,IAAI,WAAW,mBAAmB,CAAC,eAAe,UAAU;IACxD,UAAU,UAAU,QAAQ,aAAa;IACzC,SAAS,aAAa,QAAQ,cAAc,QAAQ,QAAQ;QACxD,WAAW,SAAS;;QAEpB,OAAO,iBAAiB;QACxB,YAAY,IAAI,MAAM,IAAI;YACtB,WAAW;WACZ;YACC,SAAS,GAAG;gBACR,OAAO,eAAe,EAAE;;;QAGhC,OAAO,OAAO,KAAK;;QAEnB,IAAI,EAAE,KAAK,YAAY,WAAW,aAAa,MAAM,KAAK,YAAY;gBAC9D,aAAa,KAAK;YACtB,QAAQ,IAAI;YACZ,OAAO,GAAG;;;QAGd,OAAO,oBAAoB,SAAS,OAAO;YACvC,QAAQ,IAAI;;;;QAIhB,OAAO,kBAAkB,SAAS,KAAK;YACnC,YAAY,IAAI,MAAM;gBAClB,WAAW,KAAK,KAAK,SAAS,GAAG;gBACjC,KAAK,YAAY,aAAa,IAAI;gBAClC,KAAK,YAAY,YAAY,IAAI;gBACjC,KAAK,YAAY,WAAW,IAAI;;gBAEhC,OAAO,kBAAkB;;;;QAIjC,OAAO,gBAAgB,SAAS,KAAK;YACjC,YAAY,IAAI,MAAM;gBAClB,WAAW;YACf,KAAK,YAAY,WAAW,IAAI;YAChC,IAAI,KAAK,YAAY,YAAY,MAAM;gBACnC,KAAK,YAAY,UAAU;;YAE/B,KAAK,YAAY,QAAQ,gBAAgB,IAAI;YAC7C,KAAK,YAAY,QAAQ,iBAAiB,IAAI;YAC9C,KAAK,YAAY,QAAQ,mBAAmB,IAAI;YAChD,KAAK,YAAY,QAAQ,eAAe,IAAI;;YAE5C,OAAO,mBAAmB;;;QAG9B,OAAO,eAAe,SAAS,MAAM;YACjC,OAAO,YAAY;;YAEnB,OAAO,OAAO;gBACV,KAAK,UAAU;gBACf,MAAM;oBACF,MAAM,OAAO,cAAc;;eAEhC,KAAK,SAAS,GAAG;gBAChB,KAAK,YAAY,SAAS,EAAE,KAAK;gBACjC,UAAU,MAAM;;eAEjB,WAAW;;gBAEV,UAAU,MAAM;eACjB,QAAQ,WAAW;gBAClB,OAAO,YAAY;gBACnB,OAAO,UAAU;;;;QAIzB,OAAO,SAAS,SAAS,SAAS;YAC9B,QAAQ,IAAI;YACZ,OAAO,OAAO;gBACV,KAAK;gBACL,MAAM;oBACF,MAAM,OAAO,cAAc;;eAEhC,KAAK,SAAS,UAAU;gBACvB,SAAS,WAAW;oBAChB,OAAO,SAAS,SAAS;;eAE9B,SAAS,UAAU;gBAClB,IAAI,SAAS,SAAS,GAAG,OAAO,WAAW,SAAS;oBAChD,OAAO,SAAS;eACrB,SAAS,KAAK;gBACb,OAAO,WAAW,SAAS,QAAQ,IAAI,SAAS,IAAI;;;;QAI5D,OAAO,iBAAiB,WAAW;YAC/B,IAAI,OAAO,SAAS;gBAChB,OAAO,SAAS,gBAAgB,OAAO,SAAS,gBAAgB,OAAO,SAAS,cAAc;gBAC9F,YAAY,IAAI,MAAM,KAAK;oBACvB,OAAO,UAAU,KAAK,SAAS,MAAM;oBACrC,IAAI,KAAK,UAAU,KAAK;wBACpB,UAAU,MAAM;;mBAErB,SAAS,MAAM;oBACd,UAAU,MAAM;;mBAEjB;gBACH,UAAU,MAAM;;;;;;;AAOhC,IAAI,WAAW,wGAAgB,SAAS,QAAQ,QAAQ,cAAc,aAAa,MAAM,QAAQ,gBAAgB;;IAE7G,OAAO,QAAQ,eAAe;;;;AAIlC,IAAI,WAAW,eAAe,CAAC,UAAU,cAAc,iBAAiB,eAAe,QAAQ,gBAAgB,UAAU,UAAU,wBAAwB,kBAAkB,SAAS,QAAQ,YAAY,eAAe,aAAa,MAAM,cAAc,QAAQ,QAAQ,sBAAsB,gBAAgB;IAC5S,OAAO,WAAW;IAClB,OAAO,eAAe;IACtB,OAAO,gBAAgB;IACvB,IAAI,eAAe;IACnB,IAAI,UAAU;;IAEd,IAAI,CAAC,aAAa,SAAS;QACvB,OAAO,GAAG;;;IAGd,IAAI,mBAAmB,SAAS,SAAS;QACrC,OAAO,SAAS,KAAK;;QAErB,IAAI,CAAC,OAAO,SAAS;YACjB,OAAO;;;QAGX,EAAE,uBAAuB,QAAQ;YAC7B,WAAW,EAAE,uBAAuB,GAAG,eAAe;WACvD;;QAEH,qBAAqB,mBAAmB;;;IAG5C,IAAI,yBAAyB,SAAS,SAAS;;QAE3C,UAAU,OAAO;;;IAGrB,IAAI,YAAY,SAAS,UAAU;QAC/B,IAAI,KAAK,eAAe,cAAc;;;QAGtC,YAAY,IAAI,MAAM,IAAI,YAAY,IAAI,aAAa,SAAS,IAAI;YAChE,OAAO;WACR;YACC,SAAS,GAAG;;gBAER,IAAI,QAAQ,EAAE,KAAK;gBACnB,IAAI,OAAO;oBACP,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;wBAC5B,OAAO,SAAS,KAAK,EAAE,KAAK;;oBAEhC,qBAAqB,mBAAmB;;;gBAG5C,EAAE,uBAAuB,QAAQ;oBAC7B,WAAW,EAAE,uBAAuB,GAAG,eAAe;mBACvD;;;YAGP,SAAS,GAAG;;;;;;IAMpB,YAAY,IAAI,MAAM,IAAI,YAAY,IAAI,aAAa,SAAS,UAAU;QACtE,SAAS,GAAG;;YAER,UAAU,EAAE,QAAQ;YACpB,cAAc,qBAAqB;YACnC,OAAO,WAAW,EAAE;YACpB,IAAI,EAAE,QAAQ;gBACV,qBAAqB,mBAAmB;;YAE5C,IAAI,KAAK,OAAO,OAAO,UAAU;;YAEjC,GAAG,KAAK,eAAe;YACvB,GAAG,KAAK,iCAAiC;;YAEzC,EAAE,uBAAuB,QAAQ;gBAC7B,WAAW,EAAE,uBAAuB,GAAG,eAAe;eACvD;;;QAGP,SAAS,GAAG;;;;IAIhB,OAAO,cAAc,WAAW;QAC5B,IAAI,OAAO,aAAa,QAAQ;YAC5B,YAAY,IAAI,SAAS,IAAI,aAAa,SAAS,IAAI,YAAY,KAAK;gBACpE,SAAS,OAAO;gBAChB,WAAW,OAAO,OAAO,WAAW;eACrC,KAAK,SAAS,GAAG;gBAChB,OAAO,SAAS,KAAK,EAAE;gBACvB,OAAO,eAAe;gBACtB,EAAE,uBAAuB,QAAQ;oBAC7B,WAAW,EAAE,uBAAuB,GAAG,eAAe;mBACvD;eACJ,SAAS,GAAG;;;eAGZ;;;;;;IAMX,WAAW,IAAI,qBAAqB,SAAS,OAAO,SAAS,UAAU,WAAW,YAAY;QAC1F,OAAO,OAAO,YAAY;;;;;AAKlC,IAAI,WAAW;2KACX,SAAS,QAAQ,WAAW,aAAa,QAAQ,YAAY,aAAa,UAAU,IAAI;QACpF,SAAS,UAAU,WAAW,iBAAiB,IAAI;QACnD,OAAO,qBAAqB;QAC5B,OAAO,QAAQ;QACf,OAAO,UAAU;YACb,UAAU;;;QAGd,SAAS,WAAW;YAChB,eAAe,EAAE,mBAAmB,aAAa;gBAC7C,UAAU;gBACV,iBAAiB;gBACjB,WAAW;gBACX,aAAa;gBACb,WAAW;gBACX,YAAY;gBACZ,iBAAiB;;;YAGrB,OAAO,eAAe,aAAa,GAAG;;WAEvC;;QAEH,SAAS,WAAW;YAChB,QAAQ,QAAQ,SAAS,cAAc,yBAAyB;gBAC5D;gBACA,WAAW;oBACP,OAAO,gBAAgB;oBACvB,IAAI,CAAC,OAAO,SAAS;wBACjB,OAAO;;;WAGpB;;QAEH,WAAW,gBAAgB,KAAK,SAAS,MAAM;YAC3C,OAAO,aAAa,KAAK;;YAEzB,IAAI,SAAS,OAAO,WAAW;;YAE/B,KAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK;gBAC7B,IAAI,OAAO,WAAW,GAAG,QAAQ,WAAW;oBACxC,OAAO,mBAAmB,KAAK,OAAO,WAAW;oBACjD;;;;;QAKZ,OAAO,iBAAiB,WAAW;;YAE/B,OAAO,qBAAqB,CAAC,OAAO;;;QAGxC,OAAO,YAAY,SAAS,UAAU;YAClC,IAAI,MAAM,OAAO,mBAAmB,QAAQ;YAC5C,IAAI,MAAM,CAAC,GAAG,OAAO,mBAAmB,OAAO,KAAK;iBAC/C,OAAO,mBAAmB,KAAK;;;QAGxC,OAAO,aAAa,SAAS,UAAU;YACnC,IAAI,SAAS,QAAQ,aAAa,OAAO,WAAW,WAAW,GAAG;gBAC9D,OAAO;mBACJ;gBACH,OAAO,OAAO,mBAAmB,QAAQ,YAAY,CAAC;;;;;QAK9D,IAAI,mBAAmB,WAAW;YAC9B,WAAW;;YAEX,QAAQ,QAAQ,OAAO,OAAO,SAAS,MAAM,KAAK;gBAC9C,IAAI,KAAK,aAAa,MAAM;oBACxB,WAAW;;;;YAInB,OAAO;;;QAGX,OAAO,gBAAgB,SAAS,GAAG;;YAE/B,OAAO,MAAM,OAAO,GAAG;;;QAG3B,IAAI,eAAe,SAAS,OAAO;YAC/B,IAAI,IAAI,GAAG;YACX,IAAI,WAAW;;YAEf,OAAO,QAAQ;;YAEf,IAAI,WAAW,SAAS,MAAM;gBAC1B,KAAK,OAAO;gBACZ,KAAK,SAAS,OAAO,OAAO;oBACxB,KAAK,UAAU;oBACf,MAAM;wBACF,MAAM;;;;gBAId,KAAK,OAAO,KAAK,SAAS,UAAU;oBAChC,KAAK,WAAW;oBAChB,KAAK,SAAS,SAAS;;oBAEvB,SAAS,KAAK,SAAS,KAAK;;oBAE5B,IAAI,MAAM,UAAU,SAAS,QAAQ;wBACjC,EAAE,QAAQ;;mBAEf,SAAS,UAAU;oBAClB,KAAK,SAAS;oBACd,IAAI,MAAM,UAAU,SAAS,QAAQ;wBACjC,EAAE,QAAQ;;mBAEf,SAAS,KAAK;oBACb,KAAK,WAAW,KAAK,IAAI,KAAK,SAAS;wBACnC,IAAI,SAAS,IAAI;;;;YAI7B,IAAI,SAAS,MAAM,QAAQ;gBACvB,QAAQ,QAAQ,OAAO,SAAS,MAAM;oBAClC,SAAS;;;;;YAKjB,OAAO,EAAE;;;;QAIb,OAAO,cAAc,SAAS,IAAI;YAC9B,IAAI,OAAO,QAAQ,SAAS;gBACxB,UAAU,MAAM;gBAChB;;;;;;;YAOJ,IAAI,OAAO,OAAO,aAAa;YAC/B,IAAI,YAAY,OAAO;;YAEvB,IAAI,CAAC,MAAM;gBACP,OAAO;;;YAGX,IAAI,OAAO,cAAc,aAAa;;gBAElC,YAAY;mBACT,IAAI,UAAU,eAAe,SAAS,cAAc,OAAO;;gBAE9D,YAAY;mBACT;;gBAEH,YAAY;;;YAGhB,IAAI,aAAa,SAAS,GAAG;;gBAEzB,OAAO,QAAQ,WAAW;;gBAE1B,IAAI,OAAO;gBACX,IAAI,QAAQ,OAAO,mBAAmB;gBACtC,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;oBAC5B,KAAK,KAAK,OAAO,mBAAmB,GAAG;;;;gBAI3C,YAAY,IAAI,SAAS,KAAK;oBAC1B,MAAM,EAAE;oBACR,WAAW,EAAE;oBACb,YAAY;oBACZ,QAAQ,EAAE;oBACV,WAAW,OAAO,OAAO,WAAW;mBACrC,KAAK,SAAS,GAAG;oBAChB,OAAO,QAAQ,WAAW;;oBAE1B,IAAI,EAAE,WAAW,KAAK;wBAClB,YAAY,OAAO,KAAK,QAAQ,EAAE;;;;oBAItC,OAAO,aAAa,QAAQ;oBAC5B,OAAO,OAAO;oBACd,OAAO,gBAAgB;oBACvB,OAAO,QAAQ;mBAChB,SAAS,GAAG;oBACX,OAAO,QAAQ,WAAW;;;;YAIlC,IAAI,OAAO,MAAM,QAAQ;gBACrB,aAAa,OAAO,OAAO;oBACvB,SAAS,QAAQ;;wBAEb,WAAW;4BACP,GAAG,KAAK;4BACR,GAAG;4BACH,GAAG;;;mBAGZ;gBACH,IAAI,KAAK,QAAQ;oBACb,WAAW;wBACP,GAAG,KAAK;wBACR,GAAG;wBACH,GAAG;;uBAEJ;oBACH,UAAU,MAAM;;;;;;;AAOpC,IAAI,WAAW,kGAA2B,SAAS,QAAQ,aAAa,sBAAsB,mBAAmB;IAC7G,IAAI,QAAQ;QACR,aAAa;QACb,YAAY;QACZ,aAAa;QACb,iBAAiB;QACjB,gBAAgB;;;IAGpB,YAAY,IAAI,MAAM,IAAI,mBAAmB,QAAQ;QACjD,SAAS;OACV,KAAK,SAAS,GAAG;QAChB,OAAO,kBAAkB,EAAE;;IAE/B,YAAY,IAAI,MAAM,IAAI,iBAAiB,QAAQ;QAC/C,YAAY;OACb,KAAK,SAAS,GAAG;;QAEhB,OAAO,gBAAgB;;QAEvB,SAAS,EAAE;;QAEX,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;YACpC,SAAS;gBACL,SAAS,MAAM,OAAO,GAAG;gBACzB,MAAM,OAAO,GAAG;;;YAGpB,OAAO,cAAc,KAAK;;;;IAIlC,OAAO,gBAAgB,SAAS,QAAQ,aAAa,OAAO;QACxD,kBAAkB,cAAc,QAAQ,KAAK,SAAS,KAAK;YACvD,OAAO,gBAAgB,OAAO,OAAO;;;IAG7C,OAAO,qBAAqB,SAAS,QAAQ,aAAa,OAAO;QAC7D,kBAAkB,mBAAmB,QAAQ,KAAK,SAAS,KAAK;YAC5D,OAAO,gBAAgB,OAAO,OAAO;;;;;;AAMjD,IAAI,WAAW,oBAAoB,CAAC,UAAU,aAAa,SAAS;IAChE,WAAW;IACX,OAAO,OAAO,WAAW;QACrB,UAAU;;IAEd,OAAO,SAAS,WAAW;QACvB,UAAU;;IAEd,OAAO,SAAS,SAAS,QAAQ;QAC7B,UAAU,KAAK;;;;AAIvB,IAAI,WAAW,6BAA6B,CAAC,UAAU;IACnD,cAAc;IACd,SAAS,QAAQ,WAAW,YAAY,oBAAoB;;QAExD,WAAW,gBAAgB,KAAK,SAAS,KAAK;YAC1C,OAAO,aAAa,IAAI;YACxB,QAAQ,IAAI,OAAO;;QAEvB,OAAO,OAAO,WAAW;YACrB,UAAU;;QAEd,OAAO,SAAS,WAAW;YACvB,UAAU;;QAEd,OAAO,aAAa,SAAS,IAAI;YAC7B,QAAQ,IAAI,OAAO;;YAEnB,UAAU,KAAK;;;;AAI3B;AC5xBA,IAAI,OAAO,iBAAiB,WAAW;IACnC,OAAO,SAAS,KAAK;QACjB,MAAM;QACN,IAAI,KAAK;YACL,IAAI,OAAO,OAAO,MAAM,QAAQ;gBAC5B,MAAM,KAAK,MAAM,MAAM,OAAO,KAAK;mBAChC,IAAI,OAAO,UAAU,MAAM,WAAW;gBACzC,MAAM,KAAK,MAAM,MAAM,UAAU,KAAK;mBACnC,IAAI,OAAO,WAAW;gBACzB,MAAM,KAAK,MAAM,MAAM,aAAa,KAAK;;;QAGjD,OAAO;;;AAGf;ACfA,IAAI,QAAQ,aAAa,CAAC,WAAW;IACjC,IAAI,UAAU,SAAS,IAAI,QAAQ,eAAe,CAAC,KAAK,SAAS,IAAI,QAAQ,gBAAgB,CAAC;IAC9F,OAAO;;;AAGX,IAAI,QAAQ,kCAAgB,SAAS,eAAe;;IAEhD,SAAS,gBAAgB,KAAK;QAC1B,IAAI,SAAS,IAAI,QAAQ,KAAK,KAAK,QAAQ,KAAK;QAChD,QAAQ,OAAO,SAAS;YACpB,KAAK;gBACD;YACJ,KAAK;gBACD,UAAU;gBACV;YACJ,KAAK;gBACD,UAAU;gBACV;YACJ;gBACI,MAAM;;QAEd,OAAO,OAAO,KAAK;;;IAGvB,IAAI,qBAAqB,WAAW;QAChC,IAAI,QAAQ,cAAc;QAC1B,IAAI,SAAS;;;QAGb,IAAI,OAAO,UAAU,aAAa;YAC9B,IAAI,UAAU,MAAM,MAAM,KAAK;YAC/B,SAAS,KAAK,MAAM,gBAAgB;;;QAGxC,OAAO;;;IAGX,IAAI,WAAW,WAAW;QACtB,OAAO,cAAc;;;IAGzB,OAAO;QACH,OAAO;QACP,UAAU;;;;AAIlB,IAAI,QAAQ,cAAc,CAAC,eAAe,QAAQ,MAAM,MAAM,YAAY,SAAS;IAC/E,MAAM,IAAI,IAAI,UAAU;;IAExB,IAAI,oBAAoB;IACxB,IAAI,wBAAwB;;IAE5B,KAAK,iBAAiB,KAAK,SAAS,GAAG;;;;;;IAMvC,IAAI,SAAS,YAAY,QAAQ;;IAEjC,IAAI,gBAAgB,WAAW;QAC3B,IAAI,IAAI,GAAG;;QAEX,IAAI,kBAAkB,WAAW,GAAG;YAChC,EAAE,QAAQ;eACP;YACH,CAAC,SAAS,WAAW;gBACjB,YAAY,IAAI,cAAc,UAAU,KAAK,SAAS,GAAG;oBACrD,oBAAoB;oBACpB,EAAE,QAAQ;mBACX,WAAW;oBACV,SAAS,WAAW;wBAChB;uBACD;;;;;QAKf,OAAO,EAAE;;;IAGb,IAAI,yBAAyB,WAAW;QACpC,IAAI,IAAI,GAAG;;QAEX,IAAI,sBAAsB,WAAW,GAAG;YACpC,EAAE,QAAQ;eACP;YACH,CAAC,SAAS,WAAW;gBACjB,YAAY,IAAI,cAAc,QAAQ;oBAClC,OAAO;mBACR,KAAK,SAAS,GAAG;oBAChB,wBAAwB;oBACxB,EAAE,QAAQ;mBACX,WAAW;oBACV,SAAS,WAAW;wBAChB;uBACD;;;;;QAKf,OAAO,EAAE;;;;IAIb,OAAO;QACH,KAAK;QACL,QAAQ;QACR,eAAe;QACf,wBAAwB;;;;;AAKhC,IAAI,QAAQ,UAAU,CAAC,gBAAgB,aAAa,WAAW,SAAS,cAAc,WAAW,SAAS;;IAEtG,OAAO,MAAM,SAAS,SAAS;QAC3B,IAAI,OAAO,WAAW,OAAO,QAAQ,KAAK;YACtC,OAAO,QAAQ,IAAI;;;;IAI3B,IAAI,SAAS,IAAI,OAAO,wBAAwB;QAC5C,WAAW;QACX,cAAc,UAAU;QACxB,MAAM;YACF,SAAS;gBACL,iBAAiB,YAAY,aAAa;;;;;IAKtD,IAAI,0BAA0B,WAAW;QACrC,OAAO,OAAO,KAAK,QAAQ,gBAAgB,YAAY,aAAa;;;IAGxE,OAAO;QACH,QAAQ;QACR,yBAAyB;;;;AAIjC,IAAI,QAAQ,4CAAM,SAAS,WAAW,SAAS,WAAW;;IAEtD,IAAI,WAAW;QACX,IAAI,QAAQ,uBAAuB;YAC/B,OAAO,QAAQ;eACZ;YACH,OAAO;;WAER;QACH,OAAO;;;;AAIf,IAAI,QAAQ,aAAa,CAAC,aAAa,YAAY,QAAQ,MAAM;IAC7D,SAAS,WAAW,UAAU,MAAM,IAAI,WAAW;;QAE/C,IAAI,cAAc,SAAS,IAAI;YAC3B,IAAI,IAAI,GAAG;YACX,UAAU,KAAK;oBACP,YAAY;oBACZ,aAAa;oBACb,QAAQ,SAAS,uBAAuB;oBACxC,aAAa;oBACb,qBAAqB;;iBAExB,KAAK,SAAS,KAAK;oBAChB,EAAE,QAAQ;mBACX,WAAW;oBACV,EAAE;;;YAGV,OAAO,EAAE;;;QAGb,IAAI,QAAQ,SAAS,IAAI,MAAM;;;;YAI3B,UAAU;gBACN,UAAU;iBACT,OAAO,QAAQ,QAAQ,SAAS,cAAc;iBAC9C,oBAAoB;iBACpB,MAAM;;iBAEN,UAAU;iBACV,GAAG;iBACH,YAAY;;;;QAIrB,IAAI,QAAQ,SAAS,MAAM;YACvB,SAAS;gBACL,SAAS;iBACR,QAAQ;iBACR,SAAS;iBACT,OAAO,UAAU,GAAG,cAAc;iBAClC,UAAU;;;;;QAKnB,IAAI,YAAY,WAAW;YACvB,KAAK,WAAW,KAAK,WAAW;gBAC5B,UAAU,KAAK;eAChB,WAAW;gBACV,IAAI;;;;QAIZ,IAAI,gBAAgB,SAAS,cAAc;YACvC,KAAK,OAAO,cAAc,KAAK,SAAS,GAAG;gBACvC,UAAU,KAAK;eAChB,SAAS,KAAK;gBACb,QAAQ,IAAI;;;;;;;QAOpB,OAAO;;YAEH,aAAa;YACb,OAAO;YACP,OAAO;YACP,WAAW;YACX,eAAe;;;;;;AAM3B,IAAI,QAAQ;0HACR,SAAS,eAAe,aAAa,IAAI,QAAQ,IAAI,WAAW,sBAAsB,cAAc,QAAQ;QACxG,IAAI,OAAO;YACP,eAAe;YACf,IAAI;YACJ,SAAS;YACT,MAAM;YACN,WAAW;YACX,UAAU;YACV,KAAK;YACL,UAAU;YACV,OAAO;YACP,QAAQ;YACR,SAAS;;;QAGb,YAAY,gBAAgB;;QAE5B,IAAI,iBAAiB,WAAW;;YAE5B,IAAI,IAAI,GAAG;YACX,IAAI,aAAa,QAAQ,WAAW,aAAa,QAAQ,MAAM;iBAC1D,QAAQ,MAAM;;gBAEf,YAAY,IAAI,SAAS,aAAa,QAAQ,SAAS,IAAI;oBACvD,SAAS;mBACV;oBACC,SAAS,GAAG;wBACR,iBAAiB,EAAE;wBACnB,OAAO;;wBAEP,qBAAqB;;wBAErB,EAAE,QAAQ;;oBAEd,SAAS,GAAG;wBACR,IAAI,EAAE,UAAU,KAAK;4BACjB;;4BAEA;;wBAEJ,EAAE,QAAQ;;;mBAGf;;;;gBAIH;;;YAGJ,OAAO,EAAE;;;QAGb,IAAI,mBAAmB,SAAS,GAAG;;YAE/B,KAAK,gBAAgB;YACrB,KAAK,KAAK,EAAE;YACZ,KAAK,UAAU,EAAE;YACjB,KAAK,OAAO,EAAE,aAAa,MAAM,EAAE;YACnC,KAAK,YAAY,EAAE;YACnB,KAAK,WAAW,EAAE;YAClB,KAAK,WAAW,EAAE;YAClB,KAAK,WAAW,EAAE;YAClB,KAAK,QAAQ,EAAE;YACf,KAAK,SAAS,EAAE;YAChB,KAAK,UAAU,EAAE;;;QAGrB,IAAI,YAAY,SAAS,OAAO;;YAE5B,cAAc,QAAQ;YACtB,KAAK,QAAQ;;;QAGjB,IAAI,SAAS,SAAS,SAAS;YAC3B,IAAI,IAAI,GAAG;;YAEX,YAAY,QAAQ,UAAU,KAAK,SAAS,KAAK,SAAS,GAAG;;gBAEzD,UAAU,EAAE,KAAK;gBACjB;;gBAEA,OAAO,GAAG;gBACV,EAAE,QAAQ,EAAE,KAAK;eAClB,WAAW;gBACV,EAAE;;;YAGN,OAAO,EAAE;;;QAGb,IAAI,SAAS,SAAS,GAAG;YACrB,IAAI,IAAI,GAAG;;YAEX,YAAY,QAAQ,gBAAgB,KAAK,GAAG,KAAK,SAAS,GAAG;;gBAEzD,UAAU,EAAE,KAAK;gBACjB;;gBAEA,OAAO,GAAG;gBACV,EAAE,QAAQ,EAAE,KAAK;eAClB,WAAW;gBACV,EAAE;;;YAGN,OAAO,EAAE;;;QAGb,IAAI,WAAW,WAAW;;YAEtB,IAAI,IAAI,GAAG;;YAEX,IAAI,YAAY,SAAS,aAAa;;gBAElC,IAAI,IAAI,GAAG;gBACX,IAAI;gBACJ,IAAI,EAAE,WAAW,aAAa;oBAC1B,OAAO;wBACH,mBAAmB,EAAE,aAAa;;oBAEtC,YAAY,QAAQ,YAAY,KAAK,MAAM,KAAK,SAAS,GAAG;wBACxD,UAAU,EAAE,KAAK;wBACjB;;wBAEA,EAAE,QAAQ;uBACX,SAAS,GAAG;wBACX,EAAE,OAAO;;uBAEV;;oBAEH,EAAE;;;gBAGN,OAAO,EAAE;;;YAGb,GAAG,MAAM,CAAC,kBAAkB,UAAU,KAAK,SAAS,GAAG;;gBAEnD,UAAU,GAAG,KAAK,WAAW;oBACzB,EAAE;mBACH,SAAS,GAAG;oBACX,EAAE,OAAO;;eAEd,WAAW;gBACV,EAAE;;;YAGN,OAAO,EAAE;;;QAGb,IAAI,SAAS,WAAW;YACpB,qBAAqB;YACrB,cAAc;YACd,OAAO,cAAc;YACrB;YACA,OAAO,GAAG;;;QAGd,IAAI,eAAe,WAAW;YAC1B,KAAK,gBAAgB;YACrB,KAAK,KAAK;YACV,KAAK,UAAU;YACf,KAAK,OAAO;YACZ,KAAK,YAAY;YACjB,KAAK,WAAW;YAChB,KAAK,MAAM;YACX,KAAK,WAAW;YAChB,KAAK,QAAQ;YACb,KAAK,SAAS;;;QAGlB,OAAO;YACH,QAAQ;YACR,QAAQ;YACR,UAAU;YACV,QAAQ;YACR,gBAAgB;YAChB,cAAc;YACd,aAAa;;;;;AAKzB,IAAI,QAAQ,MAAM,CAAC,QAAQ,eAAe,MAAM,gBAAgB,SAAS,MAAM,aAAa,IAAI,cAAc;;IAE1G,IAAI,MAAM,aAAa,QAAQ;;;IAG/B,IAAI,KAAK,YAAY,IAAI,SAAS;;IAElC,IAAI,WAAW,SAAS,GAAG;QACvB,OAAO,YAAY,IAAI,SAAS,KAAK;YACjC,QAAQ,EAAE;YACV,aAAa,EAAE;YACf,cAAc,EAAE;YAChB,UAAU,EAAE;;;;IAIpB,OAAO;QACH,IAAI;QACJ,IAAI;QACJ,eAAe,KAAK,YAAY;QAChC,WAAW,GAAG,IAAI;QAClB,SAAS,KAAK;QACd,UAAU;;;;;AAKlB,IAAI,QAAQ,sFAAe,SAAS,aAAa,WAAW,QAAQ,IAAI,UAAU,YAAY;;IAE1F,IAAI,iBAAiB;QACjB,MAAM;QACN,QAAQ;;;IAGZ,IAAI,WAAW;QACX,MAAM;QACN,QAAQ;;;IAGZ,IAAI,OAAO;QACP,MAAM;QACN,QAAQ;;;IAGZ,IAAI,YAAY,WAAW;QACvB,eAAe,SAAS;QACxB,YAAY,IAAI,SAAS,UAAU,KAAK,SAAS,GAAG;YAChD,eAAe,OAAO,EAAE;YACxB,eAAe,SAAS;WACzB,SAAS,KAAK;YACb,eAAe,SAAS;YACxB,UAAU,MAAM;;;;IAIxB,IAAI,YAAY,WAAW;QACvB,IAAI,eAAe,KAAK,SAAS,GAAG;YAChC,eAAe,SAAS;YACxB,QAAQ,eAAe,KAAK,GAAG;YAC/B,YAAY,IAAI,SAAS,QAAQ;gBAC7B,OAAO;eACR,KAAK,SAAS,GAAG;gBAChB,QAAQ,EAAE;gBACV,KAAK,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;oBACnC,eAAe,KAAK,QAAQ,MAAM;;gBAEtC,eAAe,SAAS;;eAEzB;YACH;;;;IAIR,IAAI,kBAAkB,SAAS,UAAU;QACrC,IAAI,QAAQ;;QAEZ,IAAI,UAAU;YACV,KAAK;gBACD,UAAU;;eAEX;YACH,KAAK;;;QAGT,SAAS,KAAK,OAAO;YACjB,SAAS,SAAS;;YAElB,YAAY,IAAI,SAAS,QAAQ,OAAO,KAAK,SAAS,GAAG;gBACrD,SAAS,OAAO,EAAE;gBAClB,SAAS,SAAS;eACnB,SAAS,KAAK;gBACb,SAAS,SAAS;gBAClB,UAAU,MAAM;;;;;IAK5B;;IAEA,UAAU,OAAO,OAAO,UAAU;IAClC,QAAQ,KAAK,YAAY,SAAS,MAAM;QACpC,eAAe,KAAK,QAAQ;QAC5B,IAAI,CAAC,WAAW,SAAS;YACrB,WAAW;;;IAGnB,QAAQ,KAAK,iCAAiC,WAAW;QACrD;;;IAGJ,OAAO;QACH,QAAQ;QACR,aAAa;QACb,iBAAiB;;;;;AAKzB,IAAI,QAAQ,uFAAkB,SAAS,YAAY,MAAM,aAAa,WAAW,IAAI,UAAU;IAC3F,IAAI,WAAW;QACX,MAAM;QACN,QAAQ;;;IAGZ,IAAI,eAAe,CAAC,WAAW;QAC3B,SAAS,SAAS;;QAElB,YAAY,IAAI,MAAM,IAAI,YAAY,UAAU;YAC5C,SAAS,GAAG;gBACR,IAAI,QAAQ,EAAE;;gBAEd,IAAI,uBAAuB,SAAS,MAAM;oBACtC,IAAI,QAAQ,KAAK;;oBAEjB,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;wBAC5B,IAAI,KAAK,GAAG,WAAW,KAAK,YAAY,IAAI;4BACxC,OAAO,KAAK,GAAG;;;;;gBAK3B,IAAI,QAAQ,EAAE,KAAK;gBACnB,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;oBAC5B,MAAM,GAAG,YAAY,qBAAqB,EAAE,KAAK,GAAG;;;gBAGxD,SAAS,OAAO,EAAE;gBAClB,SAAS,SAAS;;;YAGtB,SAAS,KAAK;gBACV,SAAS,SAAS;;gBAElB,SAAS,WAAW;oBAChB;mBACD;;;;IAIf,OAAO;QACH,UAAU;;;;AAIlB,IAAI,QAAQ,kBAAkB,CAAC,eAAe,MAAM,SAAS,aAAa,IAAI;;IAE1E,IAAI,QAAQ,YAAY,IAAI;;IAE5B,IAAI,UAAU,SAAS,IAAI;QACvB,OAAO,YAAY,IAAI,YAAY;;;IAGvC,OAAO;QACH,SAAS;;;;;AAKjB,IAAI,QAAQ,iBAAiB,CAAC,MAAM,QAAQ,SAAS,IAAI,MAAM;;;IAG3D,OAAO;;;;;AAKX,IAAI,QAAQ,wCAAa,SAAS,cAAc,QAAQ;;IAEpD,IAAI,gBAAgB,OAAO,OAAO,UAAU,2BAA2B,aAAa,QAAQ;;IAE5F,IAAI,0BAA0B,WAAW;;;QAGrC,cAAc,UAAU,2BAA2B,aAAa,QAAQ;;;IAG5E,IAAI,gBAAgB,OAAO,OAAO,UAAU,2BAA2B,aAAa,QAAQ;;IAE5F,OAAO;QACH,eAAe;QACf,yBAAyB;QACzB,2BAA2B,WAAW;YAClC,OAAO,OAAO,OAAO,YAAY,2BAA2B,aAAa,QAAQ;;;;;AAK7F,IAAI,QAAQ,0GAAwB,SAAS,cAAc,QAAQ,QAAQ,cAAc,YAAY,aAAa;;IAE9G,IAAI,YAAY;;IAEhB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,aAAa;;IAEjB,IAAI,eAAe,SAAS,KAAK,KAAK;QAClC,IAAI,QAAQ,IAAI;QAChB,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;YAC5B,IAAI,IAAI,GAAG,MAAM,IAAI,IAAI;gBACrB,OAAO;;;QAGf,OAAO,CAAC;;;IAGZ,IAAI,qBAAqB,SAAS,MAAM;QACpC,IAAI,OAAO,QAAQ,QAAQ,6BAA6B;YACpD,IAAI,QAAQ,KAAK,MAAM;;YAEvB,KAAK,IAAI,GAAG,IAAI,OAAO,KAAK;gBACxB,IAAI,KAAK,MAAM,GAAG,WAAW,aAAa,WAAW,KAAK,MAAM,GAAG,YAAY,aAAa,SAAS;oBACjG,OAAO;;;YAGf,OAAO;;;;IAIf,IAAI,aAAa,WAAW;QACxB,IAAI,CAAC,aAAa,QAAQ;YACtB;;QAEJ,IAAI,IAAI,OAAO,OAAO,UAAU,2BAA2B,aAAa,QAAQ;QAChF,YAAY;QACZ,EAAE,KAAK,eAAe,SAAS,MAAM;YACjC,IAAI,CAAC,mBAAmB,OAAO;gBAC3B,IAAI,MAAM,aAAa,SAAS;gBAChC,IAAI,OAAO,CAAC,GAAG;oBACX,QAAQ,KAAK;oBACb,IAAI,CAAC,WAAW,SAAS;wBACrB,WAAW;;;;;;QAM3B,EAAE,KAAK,iCAAiC,SAAS,QAAQ;YACrD,YAAY,IAAI,MAAM,IAAI,YAAY,IAAI,UAAU,UAAU;gBAC1D,SAAS,GAAG;oBACR,IAAI,QAAQ,EAAE,KAAK;oBACnB,QAAQ,OAAO,GAAG,EAAE,KAAK;oBACzB,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;;;;wBAI5B,QAAQ,KAAK,EAAE,KAAK;;;;oBAIxB,IAAI,CAAC,WAAW,SAAS;wBACrB,WAAW;;;;;YAKvB,YAAY,IAAI,MAAM,IAAI,iBAAiB,UAAU;gBACjD,SAAS,GAAG;oBACR,IAAI,QAAQ,EAAE,KAAK;oBACnB,OAAO,OAAO,GAAG,EAAE,KAAK;oBACxB,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;wBAC5B,OAAO,KAAK,EAAE,KAAK;;;oBAGvB,IAAI,CAAC,WAAW,SAAS;wBACrB,WAAW;;;;;YAKvB,YAAY,IAAI,MAAM,IAAI,mBAAmB,UAAU;gBACnD,SAAS,GAAG;oBACR,IAAI,QAAQ,EAAE,KAAK;oBACnB,WAAW,OAAO,GAAG,EAAE,KAAK;oBAC5B,KAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK;wBAC5B,WAAW,KAAK,EAAE,KAAK;;;oBAG3B,IAAI,CAAC,WAAW,SAAS;wBACrB,WAAW;;;;;;;QAO3B,EAAE,KAAK,6BAA6B,SAAS,QAAQ;YACjD,IAAI,UAAU,OAAO,UAAU,KAAK;;;;;;IAM5C,IAAI,qBAAqB,SAAS,SAAS;;QAEvC,YAAY,IAAI,MAAM,IAAI,YAAY,SAAS,IAAI,QAAQ;;QAE3D,IAAI,MAAM,aAAa,SAAS;QAChC,IAAI,OAAO,GAAG;YACV,QAAQ,OAAO,KAAK;;;;IAI5B,IAAI,cAAc,WAAW;QACzB,UAAU,YAAY,2BAA2B,aAAa,QAAQ;;;IAG1E;;IAEA,OAAO;QACH,sBAAsB;QACtB,eAAe;QACf,4BAA4B;QAC5B,oBAAoB;QACpB,aAAa;QACb,cAAc;;;;AAItB,IAAI,QAAQ,kBAAkB,WAAW;;IAErC,IAAI,gBAAgB,SAAS,KAAK;QAC9B,IAAI,QAAQ,IAAI;QAChB,IAAI,CAAC,OAAO;YACR,OAAO;;;QAGX,OAAO,IAAI,QAAQ,GAAG;;;;IAI1B,IAAI,uBAAuB,SAAS,KAAK;QACrC,IAAI,QAAQ,IAAI;QAChB,OAAO,IAAI,QAAQ,GAAG;;;IAG1B,OAAO;QACH,eAAe;QACf,sBAAsB;;;;AAI9B,IAAI,QAAQ,qCAAqB,SAAS,aAAa;;IAEnD,IAAI,gBAAgB,SAAS,QAAQ;QACjC,OAAO,YAAY,IAAI,MAAM,IAAI,mBAAmB,KAAK;YACrD,SAAS;;;;IAIjB,IAAI,qBAAqB,SAAS,QAAQ;QACtC,OAAO,YAAY,IAAI,MAAM,IAAI,mBAAmB,QAAQ;;;;IAIhE,OAAO;QACH,eAAe;QACf,oBAAoB;;;;AAI5B,IAAI,QAAQ,mBAAmB,WAAW;IACtC,IAAI,WAAW,OAAO;;IAEtB,SAAS,YAAY;IACrB,SAAS,UAAU;IACnB,SAAS,QAAQ;;IAEjB,OAAO;QACH,UAAU;;;AAGlB;AC1yBA,CAAC,UAAU;IACP;;IAEA,IAAI,UAAU,eAAe,CAAC,WAAW;;QAErC,OAAO;YACH,UAAU;YACV,YAAY;YACZ,SAAS;YACT,aAAa;;;;IAIrB,IAAI,UAAU,gBAAgB,CAAC,WAAW;QACtC,OAAO;YACH,UAAU;YACV,YAAY;YACZ,SAAS;YACT,aAAa;;;;IAIrB,IAAI,UAAU,aAAa,CAAC,WAAW;QACnC,OAAO;YACH,UAAU;YACV,YAAY;YACZ,SAAS;YACT,aAAa;;;;IAIrB,IAAI,UAAU,cAAc,CAAC,WAAW;QACpC,OAAO;YACH,UAAU;YACV,YAAY;YACZ,SAAS;YACT,aAAa;;;;IAIrB,IAAI,UAAU,qBAAqB,CAAC,WAAW;QAC3C,OAAO;YACH,UAAU;YACV,YAAY;YACZ,SAAS;YACT,aAAa;;;;IAIrB,IAAI,UAAU,gBAAgB,CAAC,eAAe,SAAS,aAAa;QAChE,OAAO;YACH,UAAU;YACV,YAAY;YACZ,SAAS;YACT,aAAa;YACb,OAAO;gBACH,OAAO;gBACP,QAAQ;;YAEZ,uBAAY,SAAS,QAAQ;gBACzB,KAAK,cAAc,SAAS,SAAS;oBACjC,YAAY,IAAI,SAAS,SAAS,SAAS,KAAK,SAAS,GAAG;wBACxD,IAAI,IAAI,OAAO,MAAM,IAAI,SAAS,GAAG;gCAC7B,OAAO,EAAE;;6BAEZ,QAAQ;wBACb,OAAO,MAAM,OAAO,GAAG;;;gBAG/B,OAAO,UAAU;;;;;IAK7B,IAAI,UAAU,qJAAe,SAAS,aAAa,gBAAgB,MAAM,WAAW,IAAI,kBAAkB,QAAQ,SAAS,iBAAiB,WAAW;QACnJ,OAAO;YACH,UAAU;YACV,SAAS;YACT,OAAO;gBACH,MAAM;;YAEV,aAAa;YACb,MAAM,SAAS,OAAO,SAAS,OAAO,iBAAiB;gBACnD,MAAM,OAAO,KAAK;gBAClB,MAAM,aAAa;oBACf,SAAS;oBACT,aAAa;;;gBAGjB,IAAI,UAAU;oBACV,YAAY,CAAC,eAAe;oBAC5B,iBAAiB,CAAC,aAAa;oBAC/B,aAAa,CAAC,aAAa;oBAC3B,gBAAgB,CAAC,aAAa;oBAC9B,aAAa,CAAC,UAAU;;;gBAG5B,IAAI,MAAM,KAAK,qBAAqB;oBAChC,IAAI,MAAM,KAAK,oBAAoB,SAAS,GAAG;wBAC3C,iBAAiB;wBACjB,IAAI;wBACJ,IAAI;wBACJ,IAAI,iBAAiB,MAAM,KAAK;wBAChC,IAAI,MAAM,KAAK,oBAAoB;;wBAEnC,IAAI,KAAK,GAAG;4BACR,MAAM,eAAe,GAAG;4BACxB,kBAAkB;gCACd,QAAQ,KAAK;gCACb,MAAM,QAAQ,KAAK;+BACpB,IAAI,KAAK,GAAG;;4BAEf,KAAK,UAAU,gBAAgB;gCAC3B;gCACA,MAAM,eAAe,QAAQ;;gCAE7B,IAAI,KAAK,IAAI,GAAG;oCACZ,kBAAkB,MAAM,QAAQ,KAAK;;;gCAGzC,IAAI,KAAK,GAAG;oCACR,kBAAkB,UAAU,QAAQ,KAAK,KAAK,MAAM,QAAQ,KAAK;;;+BAGtE,IAAI,IAAI,GAAG;4BACd,KAAK,UAAU,gBAAgB;gCAC3B;gCACA,MAAM,eAAe,QAAQ;gCAC7B,IAAI,KAAK,KAAK,IAAI,IAAI;oCAClB,kBAAkB,MAAM,QAAQ,KAAK;uCAClC,IAAI,KAAK,IAAI,GAAG;oCACnB,kBAAkB,OAAO,QAAQ,KAAK;uCACnC,IAAI,KAAK,KAAK,IAAI,GAAG;oCACxB,kBAAkB,UAAU,QAAQ,KAAK,KAAK,MAAM,QAAQ,KAAK;;;;;wBAK7E,MAAM,iBAAiB;;;;;gBAK/B,MAAM,WAAW;gBACjB,IAAI,MAAM;gBACV,IAAI,iBAAiB,MAAM,KAAK,KAAK,MAAM,KAAK;gBAChD,OAAO,gBAAgB,SAAS,iBAAiB,MAAM,KAAK;gBAC5D,GAAG,iBAAiB,GAAG;kBACrB,IAAI,YAAY,MAAM,KAAK,KAAK,MAAM;kBACtC,OAAO,UAAU,MAAM,GAAG,IAAI,KAAK,OAAO;kBAC1C,OAAO,gBAAgB,SAAS,iBAAiB;kBACjD,MAAM,gBAAgB;kBACtB,MAAM,gBAAgB;qBACnB;kBACH,MAAM,gBAAgB;;;gBAGxB,MAAM,aAAa,YAAY;kBAC7B,GAAG,MAAM,SAAS;oBAChB,MAAM,gBAAgB;uBACnB;oBACH,MAAM,gBAAgB;;kBAExB,MAAM,WAAW,CAAC,MAAM;;;;gBAI1B,IAAI;gBACJ,MAAM,WAAW,SAAS,aAAa,IAAI;oBACvC,eAAe;oBACf,YAAY;;;gBAGhB,GAAG,MAAM,KAAK,OAAO;kBACnB,MAAM,cAAc,QAAQ,iBAAiB,MAAM,KAAK;;gBAE1D,MAAM,aAAa,QAAQ,iBAAiB,MAAM,KAAK;gBACvD,MAAM,iBAAiB,QAAQ,iBAAiB,MAAM,KAAK;;gBAE3D,MAAM,iBAAiB;gBACvB,MAAM,iBAAiB,WAAW;;oBAE9B,MAAM,WAAW,UAAU;oBAC3B,MAAM,WAAW,cAAc;oBAC/B,YAAY,IAAI,SAAS,MAAM,KAAK,IAAI,QAAQ,YAAY,KAAK,SAAS,GAAG;;wBAEzE,MAAM,KAAK,WAAW,EAAE;wBACxB,MAAM,WAAW,UAAU;uBAC5B,SAAS,GAAG;wBACX,MAAM,WAAW,cAAc;wBAC/B,MAAM,WAAW,UAAU;;;oBAG/B,MAAM,iBAAiB;;;gBAG3B,MAAM,aAAa,SAAS,IAAI;oBAC5B,IAAI,gBAAgB,WAAW;;wBAE3B,IAAI,MAAM,YAAY;4BAClB,YAAY,IAAI,SAAS,MAAM,KAAK,IAAI,KAAK,YAAY;gCACrD,MAAM,MAAM;+BACb,KAAK,SAAS,GAAG;gCAChB,MAAM,KAAK;gCACX,MAAM,iBAAiB,QAAQ,iBAAiB,MAAM,KAAK;gCAC3D,MAAM,KAAK,SAAS,QAAQ,EAAE;gCAC9B,MAAM,aAAa;+BACpB,SAAS,EAAE;gCACV,UAAU,MAAM;;;;oBAI5B,IAAI,KAAK,YAAY,eAAe;wBAChC;2BACG;wBACH,UAAU,YAAY,IAAI,KAAK,WAAW;4BACtC;2BACD,WAAW;4BACV,UAAU,MAAM;;;;;gBAK5B,MAAM,gBAAgB,SAAS,YAAY;oBACvC,IAAI,UAAU,eAAe,QAAQ;oBACrC,QAAQ,SAAS,KAAK,SAAS,GAAG;;wBAE9B,IAAI,IAAI,MAAM,KAAK,SAAS,IAAI,SAAS,GAAG;gCACpC,OAAO,EAAE;;6BAEZ,QAAQ;;;wBAGb,MAAM,KAAK,SAAS,OAAO,GAAG;wBAC9B,MAAM,KAAK;wBACX,MAAM,iBAAiB,QAAQ,iBAAiB,MAAM,KAAK;;;;;;;gBAOnE,MAAM,iBAAiB,SAAS,IAAI;;oBAEhC,IAAI,aAAa,WAAW;wBACxB,IAAI,MAAM,KAAK,WAAW;4BACtB,MAAM,KAAK,YAAY;4BACvB,MAAM,KAAK;4BACX,YAAY,IAAI,SAAS,MAAM,KAAK,IAAI,IAAI,aAAa,SAAS,KAAK,SAAS,GAAG;;gCAE/E,MAAM,KAAK,YAAY,EAAE,KAAK;gCAC9B,MAAM,KAAK,kBAAkB,EAAE,KAAK;;+BAErC;4BACH,MAAM,KAAK,YAAY;4BACvB,MAAM,KAAK;4BACX,YAAY,IAAI,SAAS,MAAM,KAAK,IAAI,IAAI,aAAa,OAAO,KAAK,SAAS,GAAG;;gCAE7E,MAAM,KAAK,YAAY,EAAE,KAAK;gCAC9B,MAAM,KAAK,kBAAkB,EAAE,KAAK;;;;oBAIhD,IAAI,KAAK,YAAY,eAAe;wBAChC;2BACG;wBACH,UAAU,YAAY,IAAI,KAAK,WAAW;4BACtC;;;;;;;gBAOZ,MAAM,YAAY,SAAS,IAAI;;oBAE3B,IAAI,QAAQ,WAAW;wBACnB,IAAI,MAAM,KAAK,aAAa;4BACxB,MAAM,KAAK,cAAc;4BACzB,MAAM,KAAK;4BACX,YAAY,IAAI,SAAS,MAAM,KAAK,IAAI,IAAI,QAAQ,SAAS,KAAK,SAAS,GAAG;;gCAE1E,MAAM,KAAK,cAAc,EAAE,KAAK;gCAChC,MAAM,KAAK,aAAa,EAAE,KAAK;gCAC/B,MAAM,aAAa,QAAQ,iBAAiB,MAAM,KAAK;;+BAExD;4BACH,MAAM,KAAK,cAAc;4BACzB,MAAM,KAAK;4BACX,YAAY,IAAI,SAAS,MAAM,KAAK,IAAI,IAAI,QAAQ,OAAO,KAAK,SAAS,GAAG;;gCAExE,MAAM,KAAK,cAAc,EAAE,KAAK;gCAChC,MAAM,KAAK,aAAa,EAAE,KAAK;gCAC/B,MAAM,aAAa,QAAQ,iBAAiB,MAAM,KAAK;;;;;oBAKnE,IAAI,KAAK,YAAY,eAAe;wBAChC;2BACG;wBACH,UAAU,YAAY,IAAI,KAAK,WAAW;4BACtC;;;;;;gBAMZ,MAAM,UAAU,SAAS,IAAI;oBACzB,IAAI,YAAY,WAAW;;wBAEvB,GAAG,MAAM,KAAK,SAAS,KAAK;4BACxB,UAAU,MAAM;4BAChB;;;wBAGJ,MAAM,KAAK,OAAO;wBAClB,MAAM,KAAK;wBACX,YAAY,IAAI,SAAS,MAAM,KAAK,IAAI,IAAI,SAAS,OAAO,KAAK,SAAS,GAAG;4BACzE,MAAM,KAAK,OAAO,EAAE,KAAK;4BACzB,MAAM,KAAK,cAAc,EAAE,KAAK;4BAChC,MAAM,cAAc,QAAQ,iBAAiB,MAAM,KAAK;;;;oBAIhE,IAAI,KAAK,YAAY,eAAe;wBAChC;2BACG;wBACH,UAAU,YAAY,IAAI,KAAK,WAAW;4BACtC;;;;;;gBAMZ,MAAM,YAAY,WAAW;kBAC3B,IAAI,UAAU;oBACZ,QAAQ;oBACR,MAAM;oBACN,SAAS,SAAS;oBAClB,MAAM;oBACN,SAAS;oBACT,aAAa,MAAM,KAAK,OAAO;;kBAEjC,GAAG,UAAU;oBACX,iBAAiB,WAAW;uBACzB,KAAK,SAAS,SAAS;;yBAErB,UAAU,OAAO;uBACnB;oBACH,GAAG,GAAG,SAAS,SAAS,UAAU;;;;;gBAKtC,MAAM,aAAa,WAAW;;oBAE1B,gBAAgB,YAAY,MAAM,KAAK;;;;;;;IAOvD,IAAI,UAAU,UAAU,CAAC,YAAY,SAAS,UAAU;QACpD,OAAO;YACH,UAAU;YACV,OAAO;gBACH,MAAM;;YAEV,SAAS;YACT,MAAM,SAAS,OAAO,GAAG,OAAO;;;YAGhC,UAAU;;;;IAIlB,IAAI,UAAU,gCAAmB,SAAS,UAAU;QAChD,OAAO;YACH,UAAU;YACV,aAAa;YACb,MAAM,SAAS,OAAO,MAAM,OAAO;;;;;;;;AAQ/C","file":"../js/app.js","sourcesContent":["// \"use strict\";\nvar app = angular.module('testify', [\n  'ngMaterial',\n  'chieffancypants.loadingBar',\n  'ngAnimate',\n  'ngMessages',\n  'angularMoment',\n  'ui.router',\n  'ngStorage',\n  'restangular',\n  'ngFacebook',\n  'ngFileUpload',\n  'ngImgCrop',\n  'ngTextTruncate',\n  'ngSanitize',\n  'ngCordova'\n]);\n\nif ( document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1 ) {\n  app.constant('apiBase', \"https://testify-staging.herokuapp.com/api/v1\");\n  app.constant('appBase', \"/\");\n  app.constant('appUrl', \"https://testify-staging.herokuapp.com\");\n} else {\n  app.constant('appUrl', \"https://testify-staging.herokuapp.com\");\n  app.constant('appBase', \"/\");\n  app.constant('apiBase', \"api/v1\");\n}\n\napp.config(['$compileProvider', '$logProvider', '$animateProvider', function ($compileProvider, $logProvider, $animateProvider) {\n  $logProvider.debugEnabled(false);\n  $compileProvider.debugInfoEnabled(false);\n  //$animateProvider.classNameFilter( /\\banimated\\b/ );\n}]);\n\napp.config(function( $httpProvider, RestangularProvider, $facebookProvider,\n  apiBase) {\n  $facebookProvider.setAppId(180042792329807);\n  RestangularProvider.setBaseUrl(apiBase);\n  RestangularProvider.setFullResponse(true);\n\n  $httpProvider.interceptors.push(['$q', '$location', '$localStorage',\n    function($q, $location, $localStorage, $rootScope, Auth) {\n      return {\n        'request': function(config) {\n          config.headers = config.headers || {};\n          if ($localStorage.token) {\n            config.headers.Authorization = 'Bearer ' + $localStorage.token;\n          }\n          return config;\n        },\n        'response': function(response) {\n          var t = response.headers('Authorization');\n          if (t) {\n            t.replace('Bearer ', '');\n            $localStorage.token = t;\n            //console.log(t);\n          }\n\n          return response;\n        },\n        'responseError': function(response) {\n          if (response.status === 401 || response.status === 400 ||\n            response.status === 403) {\n            if (response.data.error == 'token_expired') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            } else if (response.data.error == 'token_invalid') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            } else if (response.data.error == 'Bad Authorization') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            } else if (response.data.error == 'token_not_provided') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            }\n\n\n\n            console.log(\"Unauthorized or forbidden\");\n\n          }\n          return $q.reject(response);\n        }\n      };\n    }\n  ]);\n});\n\napp.run(function($cordovaSplashscreen, $cordovaKeyboard, $cordovaStatusbar) {\n  window.addEventListener('load', function() {\n    new FastClick(document.body);\n  }, false);\n\n  // Load the facebook SDK asynchronously\n  (function(d, s, id){\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) {return;}\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n  }(document, 'script', 'facebook-jssdk'));\n\n  if(document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1){\n    document.addEventListener(\"deviceready\", function () {\n      $cordovaStatusbar.style(1);\n      $cordovaStatusbar.styleHex('#819CAD');\n      $cordovaKeyboard.hideAccessoryBar(true);\n      $cordovaSplashscreen.hide();\n\n    }, false);\n  }\n\n});\n\napp.config(function($stateProvider, $urlRouterProvider, $locationProvider,\n  appBase) {\n  $stateProvider\n    .state('web', {\n      //url: appBase,\n      abstract: true,\n      templateUrl: 'views/web.html'\n    }).state('web.app', {\n      abstract: true,\n      url: appBase,\n      templateUrl: 'views/web.app.html'\n    }).state('web.app.login', {\n      url: 'login',\n      templateUrl: 'views/web.app.login.html',\n    }).state('web.app.signup', {\n      url: 'signup',\n      controller: 'LoginCtrl',\n      templateUrl: 'views/web.app.signup.html'\n    }).state('web.app.logout', {\n      url: 'logout',\n      controller: 'LogoutCtrl',\n      template: \" \"\n    }).state('web.app.landing', {\n      url: '',\n      templateUrl: 'views/web.app.landing.html',\n    }).state('web.app.forgot', {\n      url: 'forgot',\n      templateUrl: 'views/web.app.forgot-password.html',\n    }).state('web.app.dashboard', {\n      abstract: true,\n      url: '',\n      templateUrl: 'views/web.app.dashboard.html',\n    }).state('web.app.dashboard.centered', {\n      abstract: true,\n      url: '',\n      templateUrl: 'views/web.app.dashboard.centered.html',\n    }).state('web.app.dashboard.centered.home', {\n      url: 'home',\n      templateUrl: 'views/web.app.dashboard.centered.home.html'\n    }).state('web.app.dashboard.centered.notifications', {\n      url: 'notifications',\n      templateUrl: 'views/web.app.dashboard.notifications.html'\n    }).state('web.app.dashboard.messages', {\n      url: 'messages',\n      templateUrl: 'views/web.app.dashboard.messages.html'\n    }).state('web.app.dashboard.message', {\n      url: 'messages/:user_id',\n      templateUrl: 'views/web.app.dashboard.message.html',\n      controller: 'MessageCtrl',\n      resolve: {\n        messagingUser: function(Restangular, $stateParams, $q){\n          var d = $q.defer();\n          Restangular.one('users', $stateParams.user_id).get().then(\n            function(r) {\n              d.resolve(r.data);\n            });\n          return d.promise;\n        }\n      }\n    }).state('web.app.dashboard.post', {\n      url: 'posts/:hash_id',\n      templateUrl: 'views/web.app.dashboard.post.html'\n    }).state('web.app.dashboard.centered.posts', {\n      url: 'posts?cat',\n      templateUrl: 'views/web.app.dashboard.centered.home.html'\n    }).state('web.app.dashboard.centered.user', {\n      url: 'user/:id',\n      resolve: {\n        profile: function($stateParams, Restangular) {\n          return Restangular.one('users', $stateParams.id).get();\n        }\n      },\n      views: {\n        '': {\n          templateUrl: \"views/web.app.dashboard.centered.profile.html\",\n          controller: 'ProfileCtrl',\n        },\n        '@web.app.dashboard.centered.user': {\n          templateUrl: 'views/web.app.dashboard.profile.activities.html',\n        }\n      }\n    }).state('web.app.dashboard.centered.user.activities', {\n      url: '/activities',\n      templateUrl: 'views/web.app.dashboard.profile.activities.html',\n    }).state('web.app.dashboard.centered.user.favorites', {\n      url: '/favorites',\n      templateUrl: 'views/web.app.dashboard.profile.favorites.html',\n    }).state('web.app.dashboard.centered.user.taps', {\n      url: '/taps',\n      templateUrl: 'views/web.app.dashboard.profile.taps.html',\n    }).state('web.app.dashboard.centered.user.edit', {\n      url: '/edit',\n      views: {\n        '@web.app.dashboard': {\n          templateUrl: 'views/web.app.dashboard.profile.edit.html'\n\n        }\n      }\n    });\n\n  $urlRouterProvider.otherwise(appBase + \"home\");\n\n  if ( document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1 ) {\n\n  } else {\n    $locationProvider.html5Mode({\n      enabled: true,\n      requireBase: false\n    });\n  }\n\n});\n\napp.config(function($mdThemingProvider) {\n  var primaryPalette = $mdThemingProvider.extendPalette('blue', {\n    'contrastDefaultColor': 'light',\n    'contrastDarkColors': ['300'],\n    'contrastLightColors': ['100', '500'],\n    '500': '6AA3C8',\n    '50': '1C3456',\n    '100': '5DADE0',\n    '300': 'FAFAFA',\n    '400': 'F4F4F4'\n  });\n  var accentPalette = $mdThemingProvider.extendPalette('green', {\n\n    'contrastDefaultColor': 'light',\n    'contrastDarkColors': ['200', '300'],\n    'contrastLightColors': ['500'],\n    '500': '97B6CA',\n    '50': '1C3456',\n    '100': '5DADE0',\n    '200': 'e74c3c',\n    '300': 'FFFFFF',\n    '400': 'F4F4F4',\n    '600': '27ae60',\n    '700': '77777E'\n  });\n\n  $mdThemingProvider.definePalette('primary', primaryPalette);\n  $mdThemingProvider.definePalette('accent', accentPalette);\n  //console.log($mdThemingProvider.theme('default'));\n  $mdThemingProvider.theme('default')\n    .primaryPalette('primary', {\n      'default': '500',\n      'hue-1': '50',\n      'hue-2': '100',\n      'hue-3': '300'\n    })\n    .accentPalette('accent', {\n      'default': '200',\n      'hue-1': '600',\n      'hue-2': '700'\n    })\n    .warnPalette('red');\n\n});\n","app.controller('AppCtrl', function($rootScope, $scope, $mdSidenav, $mdMedia,\n  $location, $state, $q, AppService, Auth, Me, appBase, $filter, Pusher, $stateParams, NotificationsService, TokenService, $timeout) {\n  $scope.location = $location;\n  $scope.user = Auth.userProfile;\n  $scope.composingPost = false;\n  $scope.tokHashId = TokenService.token().hash_id;\n  //$state.go('web.app.login');\n\n  $scope.ui = {\n    showSearch: false,\n    showSideNav: $state,\n    toggleNav: function (which) {\n      if(which === 'left'){\n        $mdSidenav(which).toggle();\n        $mdSidenav('right').close();\n      }else{\n        $mdSidenav(which).toggle();\n        $mdSidenav('left').close();\n      }\n      //console.log(which);\n    },\n    toggleSearchBox: function() {\n      $scope.ui.showSearch = !$scope.ui.showSearch;\n    }\n  };\n  //console.log($state);\n  //$scope.ui.showSideNav = $state.current.data.showSideNav;\n  //console.log($scope.tokHashId);\n\n\n  AppService.getCategoriesWithCount().then(function(cats) {\n    var l = cats.data.length;\n    for(var i = 0; i < l; i++){\n      cats.data[i].count = $filter('socialCounter')(cats.data[i].count);\n    }\n    $scope.categories = cats.data;\n  });\n\n\n  var originatorEv;\n  $scope.openMenu = function($mdOpenMenu, ev) {\n    originatorEv = ev;\n    $mdOpenMenu(ev);\n    //console.log(ev)\n  };\n\n  $scope.logout = function() {\n    Auth.logout();\n    //Me.callInit();\n    //console.log($scope.user);\n  };\n\n  $scope.redirect = function(state) {\n    $state.go(state);\n  };\n\n  $scope.menu = [{\n    link: '',\n    state: 'web.app.dashboard.centered.home',\n    title: 'Feeds',\n    icon: 'home',\n    condition: true,\n    click: ''\n  }];\n\n  $scope.menuAuth = [{\n    link: 'profile',\n    state: \"web.app.dashboard.centered.user({id: user.username || user.hash_id})\",\n    title: 'Profile',\n    icon: 'account',\n    condition: 'user.authenticated',\n    action: null\n  }, {\n    link: '',\n    state: 'web.app.dashboard.messages',\n    title: 'Messages',\n    icon: 'message-text-outline',\n    condition: 'user.authenticated',\n    click: ''\n  }, {\n    link: '',\n    state: \"web.app.dashboard.centered.user.favorites({id: user.username || user.hash_id})\",\n    title: 'Favourites',\n    icon: 'star',\n    condition: 'user.authenticated',\n    action: null\n  }, {\n    link: '',\n    state: \"web.app.dashboard.centered.user.edit({id: user.username || user.hash_id})\",\n    title: 'Preferences',\n    icon: 'settings',\n    condition: 'user.authenticated',\n    action: null\n  }];\n\n  $scope.getSearchResultIcon = function(type) {\n    //console.log(icon[type]);\n    return icon[type];\n  };\n\n  $scope.searchIcons = {\n    \"tag\": \"pound\",\n    \"user\": \"at\"\n  };\n\n  $scope.searchRepo = function(query) {\n    var d = $q.defer();\n    AppService.search.getList({\n      q: query\n    }).then(function(response) {\n      d.resolve(response.data.plain());\n      //console.log(response.data.plain());\n      //return result;\n    }, function() {\n      d.reject();\n    });\n\n    return d.promise;\n  };\n\n  $scope.app = {\n    notifications: {\n      messages: NotificationsService.MessageNotifications,\n      friend_requests: NotificationsService.FriendRequestNotifications,\n      general: NotificationsService.Notifications\n    },\n    messages: {\n      notifications: NotificationsService.MessageNotifications\n    }\n  };\n\n\n\n});\n","app.controller('LandingCtrl', ['Auth', '$state', function(Auth, $state) {\n    Auth.refreshProfile().then(function() {\n        if (Auth.userProfile.authenticated === true) {\n            $state.go('web.app.dashboard.centered.home');\n        }\n    });\n}]);\n\napp.controller('PostsCtrl',\n    function(AppService, PostService, Me, $scope, $state, $stateParams, Restangular,\n        UXService, $document) {\n\n        $scope.posts = PostService.stream;\n\n        if ($state.current.name == \"web.app.dashboard.post\") {\n            $scope.home.status = 1;\n\n            Restangular.one('posts', $stateParams.hash_id).get().then(\n                function(r) {\n                    $scope.home.posts = [r.data];\n                    $scope.home.status = 0;\n                }\n            );\n        }\n\n        if ($state.current.name == \"web.app.dashboard.centered.posts\") {\n            PostService.loadCategorized($stateParams.cat);\n\n            $scope.posts = PostService.categorized;\n        }\n\n    });\n\napp.controller('LoginCtrl', ['$scope', 'UXService', 'FB', '$q', '$state',\n    'Auth', 'Me', 'appBase',\n    function($scope, UXService, FB, $q, $state, Auth, Me, appBase) {\n\n        if (Auth.userProfile.authenticated === true) {\n            $state.go('web.app.dashboard.centered.home');\n        }\n\n        $scope.fb_button = \"Login with Facebook\";\n\n        FB.getLoginStatus(function(r) {\n            //console.log(r);\n            if (r.status === 'connected') {\n                //console.log(r);\n                FB.api('/me', function(r) {\n                    $scope.fb_logged_in = true;\n                    $scope.fb_name = r.name;\n                    $scope.fb_button = \"Continue as \" + $scope.fb_name;\n                });\n                //console.log(r);\n            } else {\n                //console.log(\"false;\");\n                $scope.fb_logged_in = false;\n                $scope.fb_name = \"null\";\n                $scope.fb_button = \"Login with Facebook\";\n            }\n        });\n\n        $scope.loginFB = function() {\n            Auth.signinFB().then(function() {\n                $state.go('web.app.dashboard.centered.home');\n            }, function(r) {\n                UXService.toast(r.data.error);\n            });\n        };\n\n        $scope.UXLoginFB = function() {\n            UXService.UXLoginFB();\n        };\n\n        $scope.UXSubmitLogin = function() {\n            UXService.UXSubmitLogin($scope.loginDetails);\n        };\n\n        var refresh = function() {\n            FB.api(\"/me\", {\n                fields: 'id,name,email,access_token'\n            }).then(\n                function(response) {\n                    $scope.welcomeMsg = \"Welcome \" + response.name;\n                    console.log(response);\n                    //console.log(JSON.stringify(response));\n                },\n                function(err) {\n                    $scope.welcomeMsg = \"Please log in\";\n                });\n        };\n\n        $scope.submitLogin = function() {\n            Auth.signin($scope.loginDetails).then(function(r) {\n                //console.log($scope.user);\n                $state.go('web.app.dashboard.centered.home');\n                //Me.callInit();\n                //Success Login\n            }, function(err) {\n                UXService.toast('Wrong username or password');\n            });\n        };\n\n    }\n]);\n\napp.controller('SignupCtrl', ['$scope', 'FB', 'Auth', '$location',\n    '$mdDialog', '$state',\n    function($scope, FB, Auth, $location, $mdDialog, $state) {\n        var refresh;\n\n        $scope.newUser = {};\n        $scope.signupFb = function() {\n            FB.login().then(function() {\n                refresh();\n            });\n        };\n\n        refresh = function() {\n            FB.api(\"/me\", {\n                fields: 'id,first_name,last_name,email'\n            }).then(\n                function(response) {\n                    FB.logout();\n                    //$scope.welcomeMsg = \"Welcome \" + response.name;\n                    //console.log(response);\n                    //console.log(JSON.stringify(response));\n                    //Auth.BuildSession(name, id, lastname for appctrl scope);\n                    //$location.path('/');\n                },\n                function(err) {\n                    $mdDialog.show(\n                        $mdDialog.alert()\n                        .parent(angular.element(document.querySelector('body')))\n                        .clickOutsideToClose(true)\n                        .title('Login failed!')\n                        //.content('Login failed')\n                        .ariaLabel('Failed login')\n                        .ok('close')\n                        //.targetEvent(ev)\n                    );\n\n                    //$scope.welcomeMsg = \"Please log in\";\n                });\n        };\n\n        $scope.submitForm = function() {\n            //console.log($scope.newUser);\n            //console.log($scope.signupForm.$valid);\n            if ($scope.signupForm.$valid) {\n                Auth.signup($scope.newUser).then(\n                    function(r) {\n\n                        $state.go('web.app.dashboard.centered.home');\n                        //console.log(r);\n                    },\n                    function(r) {\n                        //console.log(r);\n                    });\n            }\n        };\n\n    }\n]);\n\napp.controller('LogoutCtrl', ['$scope', 'Auth', 'Me', function($scope, Auth, Me) {\n    Auth.logout();\n    //$scope.logout();\n    console.log(\"mayama\");\n}]);\n\napp.controller('ProfileCtrl', ['Restangular', '$scope', '$stateParams',\n    '$state', 'Auth',\n    function(Restangular, $scope, $stateParams, $state, Auth) {\n        //console.log(profile);\n        $scope.me = Auth.userProfile;\n        var user_ref = Restangular.one('users', $stateParams.id);\n        $scope.user = {\n            profile: {},\n            activities: {\n                posts: [],\n                status: 0\n            },\n            favorites: {\n                posts: [],\n                status: 0\n            },\n            taps: {\n                posts: [],\n                status: 0\n            }\n        };\n\n        $scope.loadUserProfile = function() {\n            Restangular.one('users', $stateParams.id).get({\n                profile: true,\n                relationship: true\n            }).then(function(r) {\n                $scope.user_profile = r.data;\n            });\n        };\n\n        $scope.loadUserActivities = function() {\n            $scope.user.activities.status = 1;\n            user_ref.all('activities').getList().then(function(r) {\n                $scope.user.activities.posts = r.data;\n                $scope.user.activities.status = 0;\n            });\n        };\n\n        $scope.loadUserFavorites = function() {\n            $scope.user.favorites.status = 1;\n\n            user_ref.all('favorites').getList().then(function(r) {\n                $scope.user.favorites.posts = r.data;\n                $scope.user.favorites.status = 0;\n\n            });\n        };\n\n        $scope.loadUserTaps = function() {\n            $scope.user.taps.status = 1;\n\n            user_ref.all('taps').getList().then(function(r) {\n                $scope.user.taps.posts = r.data;\n                $scope.user.taps.status = 0;\n\n            });\n        };\n\n        $scope.sendFriendRequest = function() {\n            Restangular.one('me').all('friends').post({\n                user_id: $scope.user_profile.id\n            }).then(function(r){\n                $scope.user_profile.relationship = r.data;\n            });\n        };\n\n        $scope.confirmRequest = function() {\n            Restangular.one('me').all('friend_requests').post({\n                user_id: $scope.user_profile.id\n            }).then(function (r) {\n                $scope.user_profile.relationship = r.data;\n            });\n        };\n\n        $scope.unfriend = function() {\n            Restangular.one('me').one('friend_requests', $scope.user_profile.id).remove().then(function (r) {\n                $scope.user_profile.relationship = null;\n            });\n        };\n\n        var load = function() {\n            $scope.loadUserProfile();\n\n            switch ($state.current.name) {\n                case 'web.app.dashboard.user.favorites':\n                    $scope.loadUserFavorites();\n                    break;\n                case 'web.app.dashboard.user.taps':\n                    $scope.loadUserTaps();\n                    break;\n                case 'web.app.dashboard.user.activities':\n                    $scope.loadUserActivities();\n                    break;\n                default:\n                    $scope.loadUserActivities();\n            }\n\n        };\n\n        load();\n\n    }\n]);\n\napp.controller('ProfileEditCtrl', ['Restangular', '$scope', '$stateParams',\n    '$state', 'Upload', 'Auth', 'UXService', 'apiBase',\n    function(Restangular, $scope, $stateParams, $state, Upload, Auth,\n        UXService, apiBase) {\n        //console.log(profile);\n        $scope.allowMessaging = true;\n        Restangular.one('me').get({\n            'profile': true\n        }).then(\n            function(r) {\n                $scope.user_profile = r.data;\n            }\n        );\n        $scope.user = Auth.userProfile;\n\n        if (!(Auth.userProfile.hash_id == $stateParams.id || Auth.userProfile.username ==\n                $stateParams.id)) {\n            console.log($stateParams);\n            $state.go('web.app.dashboard.centered.home');\n        }\n\n        $scope.onMessagingChange = function(state) {\n            console.log(state);\n            // Setup rest call to disable or enable...\n        };\n\n        $scope.saveAccountInfo = function(obj) {\n            Restangular.one('me').post(\n                'profile', obj).then(function(r) {\n                Auth.userProfile.first_name = obj.first_name;\n                Auth.userProfile.last_name = obj.last_name;\n                Auth.userProfile.username = obj.username;\n\n                $scope.section_account = false;\n            });\n        };\n\n        $scope.saveAboutInfo = function(obj) {\n            Restangular.one('me').post(\n                'profile', obj);\n            Auth.userProfile.location = obj.location;\n            if (Auth.userProfile.profile === null) {\n                Auth.userProfile.profile = {};\n            }\n            Auth.userProfile.profile.favorite_book = obj.favorite_book;\n            Auth.userProfile.profile.favorite_verse = obj.favorite_verse;\n            Auth.userProfile.profile.favorite_parable = obj.favorite_parable;\n            Auth.userProfile.profile.denomination = obj.denomination;\n\n            $scope.section_about_me = false;\n        };\n\n        $scope.uploadAvatar = function(file) {\n            $scope.uploading = true;\n\n            Upload.upload({\n                url: apiBase + '/me/profile/avatar',\n                data: {\n                    file: Upload.dataUrltoBlob(file)\n                }\n            }).then(function(r) {\n                Auth.userProfile.avatar = r.data.url;\n                UXService.toast('Successfully updated your display picture');\n\n            }, function() {\n                //console.log(file);\n                UXService.toast('Changing display picture wasn\\'t successful');\n            }).finally(function() {\n                $scope.uploading = false;\n                $scope.picFile = '';\n            });\n        };\n\n        $scope.upload = function(dataUrl) {\n            console.log(9);\n            Upload.upload({\n                url: 'https://angular-file-upload-cors-srv.appspot.com/upload',\n                data: {\n                    file: Upload.dataUrltoBlob(dataUrl)\n                },\n            }).then(function(response) {\n                $timeout(function() {\n                    $scope.result = response.data;\n                });\n            }, function(response) {\n                if (response.status > 0) $scope.errorMsg = response.status +\n                    ': ' + response.data;\n            }, function(evt) {\n                $scope.progress = parseInt(100.0 * evt.loaded / evt.total);\n            });\n        };\n\n        $scope.changePassword = function() {\n            if ($scope.password.newPassword &&\n                $scope.password.newPassword1 && $scope.password.newPassword === $scope.password.newPassword1) {\n                Restangular.one('me').post('password',\n                    $scope.password).then(function(resp) {\n                    if (resp.status == 202) {\n                        UXService.toast('Successfully changed password');\n                    }\n                }, function(resp) {\n                    UXService.toast('Something\\'s wrong');\n                });\n            } else {\n                UXService.toast('Please repeat the password');\n            }\n        };\n\n    }\n]);\n\napp.controller('MessagesCtrl', function($scope, $state, $stateParams, Restangular, Auth, Pusher, MessageService) {\n\n    $scope.chats = MessageService.messages;\n\n});\n\napp.controller('MessageCtrl', ['$scope', '$rootScope', 'messagingUser', 'Restangular', 'Auth', '$stateParams', '$state', 'Pusher', 'NotificationsService', 'UtilityService', function($scope, $rootScope, messagingUser, Restangular, Auth, $stateParams, $state, Pusher, NotificationsService, UtilityService) {\n    $scope.messages = [];\n    $scope.inputMessage = '';\n    $scope.messagingUser = messagingUser;\n    var chat_channel = \"\";\n    var chat_id = null; //will be set after call to server in restangular promise\n\n    if (!$stateParams.user_id) {\n        $state.go('web.app.dashboard.centered.home');\n    }\n\n    var push_new_message = function(message) {\n        $scope.messages.push(message);\n\n        if (!$scope.$$phase) {\n            $scope.$digest();\n        }\n\n        $(\"#messages-container\").animate({\n            scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n        }, 500);\n\n        NotificationsService.clearNotifications(chat_id); //TO-DO::: MAKE THIS A SERVER CALL TO CLEAR NOTIFICATION ON SERVER SIDE\n    };\n\n    var subscription_succeeded = function(message) {\n        //$scope.messages.push(message);\n        smartLoad($scope.messages);\n    };\n\n    var smartLoad = function(messages) {\n        var id = UtilityService.findHighestID(messages);\n        //console.log(id);\n\n        Restangular.all('me').all('messages').one($stateParams.user_id).get({\n            after: id\n        }).then(\n            function(r) {\n                //console.log($stateParams.user_id);\n                var count = r.data.length;\n                if (count) {\n                    for (var i = 0; i < count; i++) {\n                        $scope.messages.push(r.data[i]);\n                    }\n                    NotificationsService.clearNotifications(chat_id);\n                }\n\n                $(\"#messages-container\").animate({\n                    scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n                }, 1);\n\n            },\n            function(r) {\n\n            });\n\n    };\n\n    Restangular.all('me').all('messages').one($stateParams.user_id).getList().then(\n        function(r) {\n            //console.log(r.headers('X-CHAT-ID'));\n            chat_id = r.headers('X-CHAT-ID');\n            chatChannel = 'private-message-' + chat_id;\n            $scope.messages = r.data;\n            if (r.length) {\n                NotificationsService.clearNotifications(chat_id);\n            }\n            var pm = Pusher.pusher.subscribe(chatChannel);\n\n            pm.bind('new_message', push_new_message);\n            pm.bind('pusher:subscription_succeeded', subscription_succeeded);\n\n            $(\"#messages-container\").animate({\n                scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n            }, 1);\n\n        },\n        function(r) {\n\n        });\n\n    $scope.sendMessage = function() {\n        if ($scope.inputMessage.trim()) {\n            Restangular.all('users').one($stateParams.user_id).all('messages').post({\n                message: $scope.inputMessage,\n                socket_id: Pusher.pusher.connection.socket_id\n            }).then(function(r) {\n                $scope.messages.push(r.data);\n                $scope.inputMessage = '';\n                $(\"#messages-container\").animate({\n                    scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n                }, 1);\n            }, function(r) {\n\n            });\n        } else {\n            //Do nothing!!!;\n        }\n\n    };\n\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n        Pusher.pusher.unsubscribe(chatChannel);\n    });\n\n}]);\n\napp.controller('TComposerCtrl',\n    function($scope, UXService, Restangular, Pusher, AppService, PostService, $mdToast, Me, Upload,\n        apiBase, $timeout, $document, EmojioneService, $q) {\n        $scope.selectedCategories = [];\n        $scope.files = [];\n        $scope.newPost = {\n            creating: false\n        };\n\n        $timeout(function() {\n            emojionearea = $('#tComposerInput').emojioneArea({\n                template: \"<editor/><filters/><tabs/>\",\n                autoHideFilters: true,\n                useSprite: true,\n                placeholder: \"Share your testimony...\",\n                container: null,\n                hideSource: true,\n                emojioneVersion: \"2.1.1\"\n\n            });\n            $scope.emojionearea = emojionearea[0].emojioneArea;\n            //console.log($scope.emojionearea);\n        }, 1);\n\n        $timeout(function() {\n            angular.element(document.querySelector('.emojionearea-editor')).on(\n                'focus',\n                function() {\n                    $scope.composingPost = true;\n                    if (!$scope.$$phase) {\n                        $scope.$apply();\n                    }\n                });\n        }, 1050);\n\n        AppService.getCategories().then(function(cats) {\n            $scope.categories = cats.data;\n\n            var length = $scope.categories.length;\n\n            for (var i = 0; i < length; i++) {\n                if ($scope.categories[i].name == 'General') {\n                    $scope.selectedCategories.push($scope.categories[i]);\n                    break;\n                }\n            }\n        });\n\n        $scope.toggleCatPopup = function() {\n\n            $scope.showSelectCatPopup = !$scope.showSelectCatPopup;\n        };\n\n        $scope.catsClick = function(category) {\n            var idx = $scope.selectedCategories.indexOf(category);\n            if (idx > -1) $scope.selectedCategories.splice(idx, 1);\n            else $scope.selectedCategories.push(category);\n        };\n\n        $scope.catsExists = function(category) {\n            if (category.name == 'General' && $scope.categories.length === 0) {\n                return true;\n            } else {\n                return $scope.selectedCategories.indexOf(category) > -1;\n\n            }\n        };\n\n        var isUploadFinished = function() {\n            finished = true;\n\n            angular.forEach($scope.files, function(file, key) {\n                if (file.complete !== true) {\n                    finished = false;\n                }\n\n            });\n            return finished;\n        };\n\n        $scope.removePicture = function(i) {\n\n            $scope.files.splice(i, 1);\n        };\n\n        var uploadImages = function(files) {\n            var d = $q.defer();\n            var finished = [];\n\n            $scope.files = files;\n\n            var doUpload = function(file) {\n                file.file = file;\n                file.upload = Upload.upload({\n                    url: apiBase + '/images',\n                    data: {\n                        file: file\n                    }\n                });\n\n                file.upload.then(function(response) {\n                    file.complete = true;\n                    file.result = response.data;\n                    //console.log(response);\n                    finished.push(response.data.image_id);\n\n                    if (files.length == finished.length) {\n                        d.resolve(finished);\n                    }\n                }, function(response) {\n                    file.failed = true;\n                    if (files.length == finished.length) {\n                        d.resolve(finished);\n                    }\n                }, function(evt) {\n                    file.progress = Math.min(100, parseInt(100.0 *\n                        evt.loaded / evt.total));\n                });\n            };\n\n            if (files && files.length) {\n                angular.forEach(files, function(file) {\n                    doUpload(file);\n                });\n\n\n            }\n            return d.promise;\n\n        };\n\n        $scope.composePost = function(ev) {\n            if ($scope.newPost.creating){\n                UXService.toast('Submitting your post already');\n                return ;\n            }\n\n            //post = \"\";\n            //console.log($scope);\n            //post = EmojioneService.emojione.toShort($scope.post);\n            //Convert ::toShort on the server\n            var post = $scope.emojionearea.getText();\n            var anonymous = $scope.anonymous;\n\n            if (!post) {\n                post = \" \";\n            }\n\n            if (typeof anonymous === \"undefined\") {\n\n                anonymous = 0;\n            } else if (anonymous.$viewValue === false || anonymous === false) {\n\n                anonymous = 0;\n            } else {\n\n                anonymous = 1;\n            }\n\n            var createPost = function(o) {\n                //console.log(Me.sendPost);\n                $scope.newPost.creating = true;\n\n                var cats = [];\n                var count = $scope.selectedCategories.length;\n                for (var i = 0; i < count; i++) {\n                    cats.push($scope.selectedCategories[i].id);\n                }\n\n\n                Restangular.all('posts').post({\n                    post: o.p,\n                    anonymous: o.a,\n                    categories: cats,\n                    images: o.i,\n                    socket_id: Pusher.pusher.connection.socket_id\n                }).then(function(r) {\n                    $scope.newPost.creating = false;\n\n                    if (r.status === 201) {\n                        PostService.stream.data.unshift(r.data);\n                        //console.log(r.data);\n                    }\n\n                    $scope.emojionearea.setText(\"\");\n                    $scope.post = \"\";\n                    $scope.composingPost = false;\n                    $scope.files = [];\n                }, function(r) {\n                    $scope.newPost.creating = false;\n                });\n            };\n\n            if ($scope.files.length) {\n                uploadImages($scope.files).then(\n                    function(id_arr) {\n                        //console.log(id_arr);\n                        createPost({\n                            p: post.trim(),\n                            a: anonymous,\n                            i: id_arr\n                        });\n                    });\n            } else {\n                if (post.trim()) {\n                    createPost({\n                        p: post.trim(),\n                        a: anonymous,\n                        i: []\n                    });\n                } else {\n                    UXService.toast(\"Your post has no content!\");\n                }\n\n            }\n        };\n});\n\napp.controller('NotificationsController', function($scope, Restangular, NotificationsService, FriendshipService) {\n    var types = {\n        'App\\\\Post': 'posted a testimony',\n        'App\\\\Tap': 'tapped on a post',\n        'App\\\\Amen': 'said amen to a post',\n        'App\\\\Favorite': 'favorited a post',\n        'App\\\\Comment': 'commented on a post',\n    };\n\n    Restangular.one('me').all('friend_requests').getList({\n        profile: true\n    }).then(function(r) {\n        $scope.friend_requests = r.data;\n    });\n    Restangular.one('me').all('notifications').getList({\n        \"profiles\": true\n    }).then(function(r) {\n        //$scope.notifications = r.data;\n        $scope.notifications = [];\n\n        notifs = r.data;\n\n        for (var i = 0; i < notifs.length; i++) {\n            aNotif = {\n                content: types[notifs[i].action_type],\n                user: notifs[i].user\n            };\n\n            $scope.notifications.push(aNotif);\n        }\n    });\n\n    $scope.acceptRequest = function(userId, friendReqId, index) {\n        FriendshipService.acceptRequest(userId).then(function(res) {\n            $scope.friend_requests.splice(index, 1);\n        });\n    };\n    $scope.deleteRelationship = function(userId, friendReqId, index) {\n        FriendshipService.deleteRelationship(userId).then(function(res) {\n            $scope.friend_requests.splice(index, 1);\n        });\n    };\n\n});\n\napp.controller('UXModalLoginCtrl', ['$scope', '$mdDialog', function($scope,\n    $mdDialog) {\n    $scope.hide = function() {\n        $mdDialog.hide();\n    };\n    $scope.cancel = function() {\n        $mdDialog.cancel();\n    };\n    $scope.answer = function(answer) {\n        $mdDialog.hide(answer);\n    };\n}]);\n\napp.controller('UXModalPostCategorizeCtrl', ['$scope', '$mdDialog',\n    'AppService', 'selectedCategories',\n    function($scope, $mdDialog, AppService, selectedCategories) {\n\n        AppService.getCategories().then(function(res) {\n            $scope.categories = res.data;\n            console.log($scope.actives);\n        });\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.filePostIn = function(id) {\n            console.log($scope.selectedCategories);\n\n            $mdDialog.hide(id);\n        };\n    }\n]);\n","app.filter('socialCounter', function() {\n    return function(num) {\n        out = num;\n        if (num) {\n            if (num >= 999 && num < 999999) {\n                out = Math.round(num / 100) / 10 + \"K\";\n            } else if (num >= 999999 && num < 999999999) {\n                out = Math.round(num / 100000) / 10 + \"M\";\n            } else if (num >= 999999999) {\n                out = Math.round(num / 100000000) / 10 + \"B\";\n            }\n        }\n        return out;\n    };\n});\n","app.factory('isCordova', [function() {\n    var cordova = document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n    return cordova;\n}]);\n\napp.factory('TokenService', function($localStorage) {\n\n    function urlBase64Decode(str) {\n        var output = str.replace('-', '+').replace('_', '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw 'Illegal base64url string!';\n        }\n        return window.atob(output);\n    }\n\n    var getClaimsFromToken = function() {\n        var token = $localStorage.token;\n        var claims = {};\n\n        //console.log(token);\n        if (typeof token !== 'undefined') {\n            var encoded = token.split('.')[1];\n            claims = JSON.parse(urlBase64Decode(encoded));\n        }\n\n        return claims;\n    };\n\n    var rawToken = function() {\n        return $localStorage.token;\n    };\n\n    return {\n        token: getClaimsFromToken,\n        rawToken: rawToken\n    };\n});\n\napp.factory('AppService', ['Restangular', 'Auth', 'Me', '$q', '$timeout', function(Restangular,\n    Auth, Me, $q, $timeout) {\n\n    var testifyCategories = [];\n    var testifyCategoriesWCnt = [];\n\n    Auth.refreshProfile().then(function(r) {\n        //Me.callInit();\n        //console.log(\"letsee\");\n    });\n    //console.log(\"appService\");\n\n    var search = Restangular.service('search');\n\n    var getCategories = function() {\n        var d = $q.defer();\n\n        if (testifyCategories.length !== 0) {\n            d.resolve(testifyCategories);\n        } else {\n            (function makeCall() {\n                Restangular.all('categories').getList().then(function(r) {\n                    testifyCategories = r;\n                    d.resolve(r);\n                }, function() {\n                    $timeout(function() {\n                        makeCall();\n                    }, 10000);\n                });\n            })();\n        }\n\n        return d.promise;\n    };\n\n    var getCategoriesWithCount = function() {\n        var d = $q.defer();\n\n        if (testifyCategoriesWCnt.length !== 0) {\n            d.resolve(testifyCategoriesWCnt);\n        } else {\n            (function makeCall() {\n                Restangular.all('categories').getList({\n                    count: true\n                }).then(function(r) {\n                    testifyCategoriesWCnt = r;\n                    d.resolve(r);\n                }, function() {\n                    $timeout(function() {\n                        makeCall();\n                    }, 10000);\n                });\n            })();\n        }\n\n        return d.promise;\n    };\n\n\n    return {\n        app: app,\n        search: search,\n        getCategories: getCategories,\n        getCategoriesWithCount: getCategoriesWithCount\n\n    };\n}]);\n\napp.factory('Pusher', ['TokenService', 'isCordova', 'apiBase', function(TokenService, isCordova, apiBase) {\n\n    Pusher.log = function(message) {\n        if (window.console && window.console.log) {\n            window.console.log(message);\n        }\n    };\n\n    var pusher = new Pusher('b5fa9d11972af2e0b8d1', {\n        encrypted: true,\n        authEndpoint: apiBase + '/pusher/auth',\n        auth: {\n            headers: {\n                'Authorization': 'Bearer ' + TokenService.rawToken()\n            }\n        }\n    });\n\n    var headerAuthBearerRefresh = function() {\n        pusher.config.auth.headers.Authorization = 'Bearer ' + TokenService.rawToken();\n    };\n\n    return {\n        pusher: pusher,\n        headerAuthBearerRefresh: headerAuthBearerRefresh\n    };\n}]);\n\napp.factory('FB', function(isCordova, $window, $facebook) {\n\n    if (isCordova) {\n        if ($window.facebookConnectPlugin) {\n            return $window.facebookConnectPlugin;\n        } else {\n            return $facebook;\n        }\n    } else {\n        return $facebook;\n    }\n});\n\napp.factory('UXService', ['$mdDialog', '$mdToast', 'Auth', '$q', '$document',\n    function($mdDialog, $mdToast, Auth, $q, $document) {\n\n        var signinModal = function(ev) {\n            var d = $q.defer();\n            $mdDialog.show({\n                    controller: 'UXModalLoginCtrl',\n                    templateUrl: 'partials/app/ux.signin.modal.html',\n                    parent: document.getElementsByClassName(\"dialog-holder\"),\n                    targetEvent: ev,\n                    clickOutsideToClose: true\n                })\n                .then(function(res) {\n                    d.resolve(res);\n                }, function() {\n                    d.reject();\n                });\n\n            return d.promise;\n        };\n\n        var alert = function(ev, text) {\n            // Appending dialog to document.body to cover sidenav in docs app\n            // Modal dialogs should fully cover application\n            // to prevent interaction outside of dialog\n            $mdDialog.show(\n                $mdDialog.alert()\n                .parent(angular.element(document.querySelector('body')))\n                .clickOutsideToClose(true)\n                .title(text)\n                //.content(text)\n                .ariaLabel(text)\n                .ok('OK')\n                .targetEvent(ev)\n            );\n        };\n\n        var toast = function(text) {\n            $mdToast.show(\n                $mdToast.simple()\n                .content(text)\n                .position('top left')\n                .parent($document[0].querySelector('body'))\n                .hideDelay(7000)\n            );\n\n        };\n\n        var UXLoginFB = function() {\n            Auth.signinFB().then(function() {\n                $mdDialog.hide(true);\n            }, function() {\n                d = \"Do nothing\";\n            });\n        };\n\n        var UXSubmitLogin = function(loginDetails) {\n            Auth.signin(loginDetails).then(function(r) {\n                $mdDialog.hide(true);\n            }, function(err) {\n                console.log(err);\n                //console.log($scope.loginDetails);\n            });\n        };\n\n\n\n        return {\n\n            signinModal: signinModal,\n            alert: alert,\n            toast: toast,\n            UXLoginFB: UXLoginFB,\n            UXSubmitLogin: UXSubmitLogin\n\n        };\n    }\n]);\n\napp.factory('Auth',\n    function($localStorage, Restangular, $q, $state, FB, isCordova, NotificationsService, TokenService, Pusher) {\n        var user = {\n            authenticated: false,\n            id: null,\n            hash_id: null,\n            name: \"Guest\",\n            firstName: \"Guest\",\n            lastName: \"Guest\",\n            sex: null,\n            location: null,\n            email: null,\n            avatar: null,\n            profile: null\n        };\n\n        Restangular.setFullResponse(true);\n\n        var refreshProfile = function() {\n\n            var d = $q.defer();\n            if (TokenService.token().hash_id && TokenService.token().exp > Date\n                .now() / 1000) {\n\n                Restangular.one('users', TokenService.token().hash_id).get({\n                    profile: true\n                }).then(\n                    function(r) {\n                        buildAuthProfile(r.data);\n                        Pusher.headerAuthBearerRefresh();\n\n                        NotificationsService.reInitPusher();\n\n                        d.resolve(true);\n                    },\n                    function(r) {\n                        if (r.status == 404) {\n                            resetProfile();\n                            //console.log(\"user not found\");\n                            logout();\n                        }\n                        d.resolve(false);\n\n                    });\n            } else {\n                //console.log(Date.now() / 1000);\n                //console.log(getClaimsFromToken().exp);\n                //delete $localStorage.token;\n                resetProfile();\n            }\n\n            return d.promise;\n        };\n\n        var buildAuthProfile = function(u) {\n            //console.log(u);\n            user.authenticated = true;\n            user.id = u.id;\n            user.hash_id = u.hash_id;\n            user.name = u.first_name + ' ' + u.last_name;\n            user.firstName = u.first_name;\n            user.lastName = u.last_name;\n            user.username = u.username;\n            user.location = u.location;\n            user.email = u.email;\n            user.avatar = u.avatar;\n            user.profile = u.profile;\n        };\n\n        var saveToken = function(token) {\n\n            $localStorage.token = token;\n            user.token = token;\n        };\n\n        var signup = function(newUser) {\n            var d = $q.defer();\n\n            Restangular.service('signup').post(newUser).then(function(r) {\n                //console.log(r);\n                saveToken(r.data.token);\n                refreshProfile(); //Refresh session data here\n                //$scope.refreshProfile();\n                $state.go('web.app.dashboard.centered.home');\n                d.resolve(r.data.token);\n            }, function() {\n                d.reject();\n            });\n\n            return d.promise;\n        };\n\n        var signin = function(l) {\n            var d = $q.defer();\n\n            Restangular.service('authenticate').post(l).then(function(r) {\n                //console.log(r);\n                saveToken(r.data.token);\n                refreshProfile(); //Refresh session data here\n                //$scope.refreshProfile();\n                $state.go('web.app.dashboard.centered.home');\n                d.resolve(r.data.token);\n            }, function() {\n                d.reject();\n            });\n\n            return d.promise;\n        };\n\n        var signinFB = function() {\n            //console.log(\"loginctrl\");\n            var d = $q.defer();\n\n            var doFbLogin = function(fb_response) {\n                //console.log('called');\n                var d = $q.defer();\n                r = fb_response;\n                if (r.status === 'connected') {\n                    json = {\n                        \"fb_access_token\": r.authResponse.accessToken\n                    };\n                    Restangular.service('fb-token').post(json).then(function(r) {\n                        saveToken(r.data.token);\n                        refreshProfile(); //Refresh session data here\n                        //console.log(r);\n                        d.resolve(r);\n                    }, function(r) {\n                        d.reject(r);\n                    });\n                } else {\n                    //console.log('reject');\n                    d.reject();\n\n                }\n                return d.promise;\n            };\n\n            FB.login(['public_profile', 'email']).then(function(r) {\n                //console.log(r);\n                doFbLogin(r).then(function() {\n                    d.resolve();\n                }, function(r) {\n                    d.reject(r);\n                });\n            }, function() {\n                d.reject();\n            });\n\n            return d.promise;\n        };\n\n        var logout = function() {\n            NotificationsService.unsubscribe();\n            tokenClaims = {};\n            delete $localStorage.token;\n            refreshProfile();\n            $state.go('web.app.login');\n        };\n\n        var resetProfile = function() {\n            user.authenticated = false;\n            user.id = null;\n            user.hash_id = null;\n            user.name = \"Guest\";\n            user.firstName = \"Guest\";\n            user.lastName = \"Guest\";\n            user.sex = null;\n            user.location = null;\n            user.email = null;\n            user.avatar = null;\n        };\n\n        return {\n            signup: signup,\n            signin: signin,\n            signinFB: signinFB,\n            logout: logout,\n            refreshProfile: refreshProfile,\n            resetProfile: resetProfile,\n            userProfile: user,\n        };\n    }\n);\n\napp.factory('Me', ['Auth', 'Restangular', '$q', 'TokenService', function(Auth, Restangular, $q, TokenService) {\n\n    var uid = TokenService.token().sub;\n    //console.log(uid);\n\n    var me = Restangular.one('users', uid);\n\n    var sendPost = function(o) {\n        return Restangular.all('posts').post({\n            \"post\": o.post,\n            \"anonymous\": o.anonymous,\n            \"categories\": o.categories,\n            \"images\": o.images\n        });\n    };\n\n    return {\n        id: uid,\n        me: me,\n        authenticated: Auth.userProfile.authenticated,\n        favorites: me.all('favorites'),\n        profile: Auth.userProfile,\n        sendPost: sendPost\n\n    };\n}]);\n\napp.factory('PostService', function(Restangular, UXService, Pusher, $q, $timeout, $rootScope) {\n\n    var pubStreamPosts = {\n        data: [],\n        status: 0\n    };\n\n    var postsCat = {\n        data: [],\n        status: 0\n    };\n\n    var post = {\n        data: {},\n        status: 0\n    };\n\n    var loadPosts = function() {\n        pubStreamPosts.status = 1;\n        Restangular.all('posts').getList().then(function(r) {\n            pubStreamPosts.data = r.data;\n            pubStreamPosts.status = 0;\n        }, function(err) {\n            pubStreamPosts.status = 2;\n            UXService.toast(\"Something's wrong\");\n        });\n    };\n\n    var smartLoad = function() {\n        if (pubStreamPosts.data.length > 0) {\n            pubStreamPosts.status = 1;\n            after = pubStreamPosts.data[0].id;\n            Restangular.all('posts').getList({\n                after: after\n            }).then(function(r) {\n                posts = r.data;\n                for (var i = 0; i < posts.length; i++) {\n                    pubStreamPosts.data.unshift(posts[i]);\n                }\n                pubStreamPosts.status = 0;\n            });\n        } else {\n            loadPosts();\n        }\n    };\n\n    var loadCategorized = function(category) {\n        var param = null;\n\n        if (category) {\n            load({\n                category: category\n            });\n        } else {\n            load({});\n        }\n\n        function load(param) {\n            postsCat.status = 1;\n\n            Restangular.all('posts').getList(param).then(function(r) {\n                postsCat.data = r.data;\n                postsCat.status = 0;\n            }, function(err) {\n                postsCat.status = 2;\n                UXService.toast(\"Something's wrong\");\n            });\n        }\n    };\n\n    smartLoad();\n\n    pStream = Pusher.pusher.subscribe('posts-stream');\n    pStream.bind('new_post', function(post) {\n        pubStreamPosts.data.unshift(post);\n        if (!$rootScope.$$phase) {\n            $rootScope.$digest();\n        }\n    });\n    pStream.bind('pusher:subscription_succeeded', function() {\n        smartLoad();\n    });\n\n    return {\n        stream: pubStreamPosts,\n        categorized: postsCat,\n        loadCategorized: loadCategorized\n    };\n\n});\n\napp.factory('MessageService', function($rootScope, Auth, Restangular, UXService, $q, $timeout) {\n    var messages = {\n        data: [],\n        status: 0\n    };\n\n    var loadMessages = (function() {\n        messages.status = 1;\n\n        Restangular.one('me').all('messages').getList().then(\n            function(r) {\n                var chats = r.data;\n\n                var getOtherUserFromSubs = function(subs) {\n                    var count = subs.length;\n\n                    for (var i = 0; i < count; i++) {\n                        if (subs[i].user_id != Auth.userProfile.id) {\n                            return subs[i].user;\n                        }\n                    }\n                };\n\n                var count = r.data.length;\n                for (var i = 0; i < count; i++) {\n                    chats[i].otherUser = getOtherUserFromSubs(r.data[i].subs);\n                }\n\n                messages.data = r.data;\n                messages.status = 0;\n\n            },\n            function(err) {\n                messages.status = 0;\n\n                $timeout(function() {\n                    loadMessages();\n                }, 10000);\n            });\n    })();\n\n    return {\n        messages: messages\n    };\n});\n\napp.factory('CommentService', ['Restangular', '$q', function(Restangular, $q) {\n\n    var posts = Restangular.all('comments');\n\n    var comment = function(id) {\n        return Restangular.one('comments', id);\n    };\n\n    return {\n        comment: comment\n    };\n\n}]);\n\napp.factory('SocialService', ['FB', 'Auth', function(FB, Auth) {\n\n\n    return {\n\n    };\n}]);\n\napp.factory('PChannels', function(TokenService, Pusher) {\n\n    var notif_channel = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n\n    var notifications_subscribe = function() {\n        //var channel = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n        //notifications = channel;\n        notif_channel.subscribe('private-notifications-' + TokenService.token().hash_id);\n    };\n\n    var notifications = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n\n    return {\n        notifications: notifications,\n        notifications_subscribe: notifications_subscribe,\n        notifications_unsubscribe: function() {\n            return Pusher.pusher.unsubscribe('private-notifications-' + TokenService.token().hash_id);\n        }\n    };\n});\n\napp.factory('NotificationsService', function(TokenService, Pusher, $state, $stateParams, $rootScope, Restangular) {\n\n    var n_chanell = null;\n\n    var m_notif = [];\n    var notifs = [];\n    var f_requests = [];\n\n    var getIndexById = function(arr, obj) {\n        var count = arr.length;\n        for (var i = 0; i < count; i++) {\n            if (arr[i].id == obj.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n\n    var checkIfCurrentChat = function(chat) {\n        if ($state.current.name == \"web.app.dashboard.message\") {\n            var count = chat.users.length;\n\n            for (i = 0; i < count; i++) {\n                if (chat.users[i].hash_id == $stateParams.user_id || chat.users[i].username == $stateParams.user_id) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    };\n\n    var initPusher = function() {\n        if (!TokenService.token().hash_id)\n            return;\n\n        var n = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n        n_chanell = n;\n        n.bind('new_message', function(data) {\n            if (!checkIfCurrentChat(data)) {\n                var idx = getIndexById(m_notif, data);\n                if (idx == -1) {\n                    m_notif.push(data);\n                    if (!$rootScope.$$phase) {\n                        $rootScope.$digest();\n                    }\n                }\n            }\n        });\n\n        n.bind('pusher:subscription_succeeded', function(status) {\n            Restangular.one('me').all('messages').all('unread').getList().then(\n                function(r) {\n                    var count = r.data.length;\n                    m_notif.splice(0, r.data.length); //Clear the array first\n                    for (var i = 0; i < count; i++) {\n                        //console.log(i, count);\n                        //var idx = getIndexById(m_notif, r.data[i]);\n                        //if(idx == -1){\n                        m_notif.push(r.data[i]); //repopulate the array since its from the server\n                        //}\n                    }\n\n                    if (!$rootScope.$$phase) {\n                        $rootScope.$digest();\n                    }\n\n                }\n            );\n            Restangular.one('me').all('notifications').getList().then(\n                function(r) {\n                    var count = r.data.length;\n                    notifs.splice(0, r.data.length); //Clear the array first\n                    for (var i = 0; i < count; i++) {\n                        notifs.push(r.data[i]); //repopulate the array since its from the server\n                    }\n\n                    if (!$rootScope.$$phase) {\n                        $rootScope.$digest();\n                    }\n\n                }\n            );\n            Restangular.one('me').all('friend_requests').getList().then(\n                function(r) {\n                    var count = r.data.length;\n                    f_requests.splice(0, r.data.length); //Clear the array first\n                    for (var i = 0; i < count; i++) {\n                        f_requests.push(r.data[i]); //repopulate the array since its from the server\n                    }\n\n                    if (!$rootScope.$$phase) {\n                        $rootScope.$digest();\n                    }\n\n                }\n            );\n        });\n\n        n.bind('pusher:subscription_error', function(status) {\n            if (status == 408 || status == 503) {\n                // retry?\n            }\n        });\n    };\n\n    var clearNotifications = function(chat_id) {\n\n        Restangular.one('me').one('messages', chat_id).one('read').patch();\n\n        var idx = getIndexById(m_notif, chat_id);\n        if (idx >= 0) {\n            m_notif.splice(idx, 1);\n        }\n    };\n\n    var unsubscribe = function() {\n        n_chanell.unsubscribe('private-notifications-' + TokenService.token().hash_id);\n    };\n\n    initPusher();\n\n    return {\n        MessageNotifications: m_notif,\n        Notifications: notifs,\n        FriendRequestNotifications: f_requests,\n        clearNotifications: clearNotifications,\n        unsubscribe: unsubscribe,\n        reInitPusher: initPusher\n    };\n});\n\napp.factory('UtilityService', function() {\n\n    var findHighestID = function(arr) {\n        var count = arr.length;\n        if (!count) {\n            return 0;\n        }\n\n        return arr[count - 1].id;\n        //console.log(arr, count);\n    };\n\n    var findHighestTimestamp = function(arr) {\n        var count = arr.length;\n        return arr[count - 1].created_at;\n    };\n\n    return {\n        findHighestID: findHighestID,\n        findHighestTimestamp: findHighestTimestamp\n    };\n});\n\napp.factory('FriendshipService', function(Restangular) {\n\n    var acceptRequest = function(userID) {\n        return Restangular.one('me').all('friend_requests').post({\n            user_id: userID\n        });\n    };\n\n    var deleteRelationship = function(userID) {\n        return Restangular.one('me').one('friend_requests', userID).remove();\n    };\n\n\n    return {\n        acceptRequest: acceptRequest,\n        deleteRelationship: deleteRelationship\n    };\n});\n\napp.factory('EmojioneService', function() {\n    var emojione = window.emojione;\n    //emojione.imagePathPNG = 'bower_components/emojione/assets/png/';\n    emojione.imageType = 'png';\n    emojione.sprites = true;\n    emojione.ascii = true;\n\n    return {\n        emojione: emojione\n    };\n});\n","(function(){\n    'use strict';\n\n    app.directive('leftSidenav', [function() {\n\n        return {\n            restrict: 'A',\n            transclude: true,\n            replace: true,\n            templateUrl: 'partials/app/left-sidenav.html'\n        };\n    }]);\n\n    app.directive('rightSidenav', [function() {\n        return {\n            restrict: 'A',\n            transclude: true,\n            replace: true,\n            templateUrl: 'partials/app/right-sidenav.html'\n        };\n    }]);\n\n    app.directive('searchbox', [function() {\n        return {\n            restrict: 'A',\n            transclude: true,\n            replace: true,\n            templateUrl: 'partials/app/searchbox.html'\n        };\n    }]);\n\n    app.directive('appToolbar', [function() {\n        return {\n            restrict: 'A',\n            transclude: true,\n            replace: true,\n            templateUrl: 'partials/app/app-toolbar.html'\n        };\n    }]);\n\n    app.directive('appToolbarNoLogin', [function() {\n        return {\n            restrict: 'A',\n            transclude: true,\n            replace: true,\n            templateUrl: 'partials/app/app-toolbar-no-login.html'\n        };\n    }]);\n\n    app.directive('testifyPosts', ['Restangular', function(Restangular) {\n        return {\n            restrict: 'A',\n            transclude: true,\n            replace: true,\n            templateUrl: 'partials/templates/Post/posts.html',\n            scope: {\n                posts: '=testifyPosts',\n                status: '=status'\n            },\n            controller: function($scope) {\n                this.SDeletePost = function(post_id) {\n                    Restangular.one('posts', post_id).remove().then(function(r) {\n                        var i = $scope.posts.map(function(x) {\n                                return x.id;\n                            })\n                            .indexOf(post_id);\n                        $scope.posts.splice(i, 1);\n                    });\n                };\n                $scope.noPosts = false;\n            }\n        };\n    }]);\n\n    app.directive('testifyPost', function(Restangular, CommentService, Auth, UXService, FB, $cordovaFacebook, appUrl, $filter, EmojioneService, isCordova) {\n        return {\n            restrict: 'A',\n            require: \"^?testifyPosts\",\n            scope: {\n                post: '=testifyPost'\n            },\n            templateUrl: 'partials/templates/Post/post.html',\n            link: function(scope, element, attrs, SuperTPostsCtrl) {\n                scope.user = Auth.userProfile;\n                scope.CommentsUI = {\n                    loading: false,\n                    retryButton: false\n                };\n\n                var actions = {\n                    'App\\\\Tap': ['tapped into', 'this post'],\n                    'App\\\\Favorite': ['favorited', 'this post'],\n                    'App\\\\Amen': ['said amen', 'to this post'],\n                    'App\\\\Comment': ['commented', 'on this post'],\n                    'App\\\\Post': ['posted', 'on his wall'],\n                };\n\n                if (scope.post.user_ref_activities) {\n                    if (scope.post.user_ref_activities.length > 0) {\n                        interpretation = '';\n                        i = 0;\n                        var action;\n                        var ref_activities = scope.post.user_ref_activities;\n                        l = scope.post.user_ref_activities.length;\n\n                        if (l == 1) {\n                            a_t = ref_activities[0].action_type;\n                            interpretation += ' ' +\n                                actions[a_t][0] +\n                                ' ' + actions[a_t][1];\n                        } else if (l == 2) {\n\n                            for (action in ref_activities) {\n                                i++;\n                                a_t = ref_activities[action].action_type;\n\n                                if (i == l - 1) {\n                                    interpretation += ' ' + actions[a_t][0];\n                                }\n\n                                if (i == l) {\n                                    interpretation += ' and ' + actions[a_t][0] + ' ' + actions[a_t][1];\n                                }\n                            }\n                        } else if (l > 2) {\n                            for (action in ref_activities) {\n                                i++;\n                                a_t = ref_activities[action].action_type;\n                                if (i == l - (l - 1)) {\n                                    interpretation += ' ' + actions[a_t][0];\n                                } else if (i <= l - 1) {\n                                    interpretation += ', ' + actions[a_t][0];\n                                } else if (l >= i || i > 3) {\n                                    interpretation += ' and ' + actions[a_t][0] + ' ' + actions[a_t][1];\n                                }\n                            }\n                        }\n\n                        scope.interpretation = interpretation;\n                    }\n\n                }\n\n                scope.showMore = false;\n                var less, more;\n                var postWordsCount = scope.post.text.split(' ').length;\n                more = EmojioneService.emojione.shortnameToImage(scope.post.text);\n                if(postWordsCount > 60){\n                  var all_array = scope.post.text.split(' ');\n                  less = all_array.slice(0, 59).join(' ') + '&hellip;';\n                  less = EmojioneService.emojione.shortnameToImage(less);\n                  scope.optimizedText = less;\n                  scope.post_truncate = true;\n                }else{\n                  scope.optimizedText = more;\n                }\n\n                scope.toggleMore = function () {\n                  if(scope.showMore){\n                    scope.optimizedText = less;\n                  }else{\n                    scope.optimizedText = more;\n                  }\n                  scope.showMore = !scope.showMore;\n                };\n\n\n                var originatorEv;\n                scope.openMenu = function($mdOpenMenu, ev) {\n                    originatorEv = ev;\n                    $mdOpenMenu(ev);\n                };\n\n                if(scope.post.prayer){\n                  scope.amens_count = $filter('socialCounter')(scope.post.amens_count);\n                }\n                scope.taps_count = $filter('socialCounter')(scope.post.taps_count);\n                scope.comments_count = $filter('socialCounter')(scope.post.comments_count);\n\n                scope.showCommentBox = false;\n                scope.openCommentBox = function() {\n                    //console.log(scope.post.post_id);\n                    scope.CommentsUI.loading = true;\n                    scope.CommentsUI.retryButton = false;\n                    Restangular.one('posts', scope.post.id).getList('comments').then(function(r) {\n                        //console.log(r);\n                        scope.post.comments = r.data;\n                        scope.CommentsUI.loading = false;\n                    }, function(r) {\n                        scope.CommentsUI.retryButton = true;\n                        scope.CommentsUI.loading = false;\n                    });\n\n                    scope.showCommentBox = true;\n                };\n\n                scope.addComment = function(ev) {\n                    var doCommentPost = function() {\n                        //console.log(Date());\n                        if (scope.commentBox) {\n                            Restangular.one('posts', scope.post.id).post('comments', {\n                                text: scope.commentBox\n                            }).then(function(r) {\n                                scope.post.comments_count++;\n                                scope.comments_count = $filter('socialCounter')(scope.post.comments_count);\n                                scope.post.comments.unshift(r.data);\n                                scope.commentBox = \"\";\n                            }, function(r){\n                                UXService.toast('Sorry, couldn\\'t post your comment check your network and try again ');\n                            });\n                        }\n                    };\n                    if (Auth.userProfile.authenticated) {\n                        doCommentPost();\n                    } else {\n                        UXService.signinModal(ev).then(function() {\n                            doCommentPost();\n                        }, function() {\n                            UXService.toast('Sorry, we couldn\\'t sign you check your network and try again');\n                        });\n                    }\n                };\n\n                scope.deleteComment = function(comment_id) {\n                    var comment = CommentService.comment(comment_id);\n                    comment.remove().then(function(r) {\n                        //console.log(r);\n                        var i = scope.post.comments.map(function(x) {\n                                return x.id;\n                            })\n                            .indexOf(comment_id);\n                        //console.log($scope);\n                        //array.splice(removeIndex, 1);\n                        scope.post.comments.splice(i, 1);\n                        scope.post.comments_count--;\n                        scope.comments_count = $filter('socialCounter')(scope.post.comments_count);\n\n                        //scope.post = \"\";\n\n                    });\n                };\n\n                scope.toggleFavorite = function(ev) {\n                    //console.log(scope.post.post_id)\n                    var doFavorite = function() {\n                        if (scope.post.favorited) {\n                            scope.post.favorited = false;\n                            scope.post.favorites_count--;\n                            Restangular.one('posts', scope.post.id).one('favorites').remove().then(function(r) {\n                                //console.log(r);\n                                scope.post.favorited = r.data.status;\n                                scope.post.favorites_count = r.data.count;\n                            });\n                        } else {\n                            scope.post.favorited = true;\n                            scope.post.favorites_count++;\n                            Restangular.one('posts', scope.post.id).one('favorites').post().then(function(r) {\n                                //console.log(\"created\");\n                                scope.post.favorited = r.data.status;\n                                scope.post.favorites_count = r.data.count;\n                            });\n                        }\n                    };\n                    if (Auth.userProfile.authenticated) {\n                        doFavorite();\n                    } else {\n                        UXService.signinModal(ev).then(function() {\n                            doFavorite();\n                        });\n\n                    }\n                    //console.log(scope.post);\n                };\n\n                scope.toggleTap = function(ev) {\n                    //console.log(scope.post.post_id)\n                    var doTap = function() {\n                        if (scope.post.tapped_into) {\n                            scope.post.tapped_into = false;\n                            scope.post.taps_count--;\n                            Restangular.one('posts', scope.post.id).one('taps').remove().then(function(r) {\n                                //console.log(r);\n                                scope.post.tapped_into = r.data.status;\n                                scope.post.taps_count = r.data.count;\n                                scope.taps_count = $filter('socialCounter')(scope.post.taps_count);\n                            });\n                        } else {\n                            scope.post.tapped_into = true;\n                            scope.post.taps_count++;\n                            Restangular.one('posts', scope.post.id).one('taps').post().then(function(r) {\n                                //console.log(\"created\");\n                                scope.post.tapped_into = r.data.status;\n                                scope.post.taps_count = r.data.count;\n                                scope.taps_count = $filter('socialCounter')(scope.post.taps_count);\n                            });\n                        }\n                    };\n\n                    if (Auth.userProfile.authenticated) {\n                        doTap();\n                    } else {\n                        UXService.signinModal(ev).then(function() {\n                            doTap();\n                        });\n                    }\n                    //console.log(scope.post);\n                };\n\n                scope.sayAmen = function(ev) {\n                    var doSayAmen = function() {\n\n                        if(scope.post.amen === true){\n                            UXService.toast(\"You have already said Amen to this post\");\n                            return ;\n                        }\n\n                        scope.post.amen = true;\n                        scope.post.amens_count++;\n                        Restangular.one('posts', scope.post.id).one('amens').post().then(function(r) {\n                            scope.post.amen = r.data.status;\n                            scope.post.amens_count = r.data.count;\n                            scope.amens_count = $filter('socialCounter')(scope.post.amens_count);\n                        });\n\n                    };\n                    if (Auth.userProfile.authenticated) {\n                        doSayAmen();\n                    } else {\n                        UXService.signinModal(ev).then(function() {\n                            doSayAmen();\n                        });\n\n                    }\n                };\n\n                scope.shareToFb = function() {\n                  var options = {\n                    method: 'feed',\n                    link: appUrl,\n                    picture: appUrl + '/dist/img/testify-fb-share-pic.png',\n                    name: 'Testify',\n                    caption: 'Sharing God\\'s goodness',\n                    description: scope.post.text + ' (Tesfify is a community for sharing your testimonies and engaging with other people\\'s testimonies)'\n                  };\n                  if(isCordova){\n                    $cordovaFacebook.showDialog(options)\n                      .then(function(success) {\n\n                      }, function (error) {});\n                  }else{\n                    FB.ui(options, function(response) {});\n                  }\n\n                };\n\n                scope.deletePost = function() {\n                    //scope.post = null;\n                    SuperTPostsCtrl.SDeletePost(scope.post.id);\n\n                };\n            }\n        };\n    });\n\n    app.directive('myIcon', ['$timeout', function($timeout) {\n        return {\n            restrict: 'E',\n            scope: {\n                icon: \"@\"\n            },\n            replace: true,\n            link: function(scope, e, attrs) {\n                //scope.icon = scope.icon;\n            },\n            template: \"<i class='mdi mdi-{{::icon}}'></i>\"\n        };\n    }]);\n\n    app.directive('testifyComposer', function($timeout) {\n        return {\n            restrict: 'A',\n            templateUrl: 'partials/app/testifyComposer.html',\n            link: function(scope, elem, attrs) {\n\n\n            }\n            //controller: 'TComposerCtrl'\n        };\n    });\n})();\n"]}