{"version":3,"sources":["app.js","controllers/appCtrl.js","controllers/controllers.js","directives/directives.js","filters/filters.js","services/services.js"],"names":["app","angular","module","document","URL","indexOf","constant","config","$mdThemingProvider","primaryPalette","extendPalette","contrastDefaultColor","contrastDarkColors","contrastLightColors","500","50","100","300","400","accentPalette","200","600","700","definePalette","theme","default","hue-1","hue-2","hue-3","warnPalette","$compileProvider","$logProvider","$animateProvider","debugEnabled","debugInfoEnabled","$httpProvider","RestangularProvider","$facebookProvider","apiBase","setAppId","setBaseUrl","setFullResponse","interceptors","push","$q","$location","$localStorage","$rootScope","Auth","request","headers","token","Authorization","response","t","replace","responseError","status","data","error","resetProfile","path","console","log","reject","run","$cordovaSplashscreen","$cordovaKeyboard","$cordovaStatusbar","window","addEventListener","FastClick","body","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","style","styleHex","hideAccessoryBar","hide","$stateProvider","$urlRouterProvider","$locationProvider","appBase","state","abstract","templateUrl","url","controller","template","resolve","messagingUser","Restangular","$stateParams","defer","one","user_id","get","then","r","promise","profile","views","","@web.app.dashboard.centered.user","@web.app.dashboard","otherwise","html5Mode","enabled","requireBase","$scope","$mdSidenav","$mdMedia","$state","AppService","Me","$filter","Pusher","NotificationsService","TokenService","$timeout","location","user","userProfile","composingPost","tokHashId","hash_id","ui","showSearch","showSideNav","toggleNav","which","toggle","close","toggleSearchBox","getCategoriesWithCount","cats","l","length","i","count","categories","originatorEv","openMenu","$mdOpenMenu","ev","logout","redirect","go","menu","link","title","icon","condition","click","menuAuth","action","getSearchResultIcon","type","searchIcons","tag","searchRepo","query","search","getList","q","plain","notifications","messages","MessageNotifications","friend_requests","FriendRequestNotifications","general","Notifications","refreshProfile","authenticated","PostService","UXService","$document","posts","stream","current","name","home","loadCategorized","cat","categorized","FB","fb_button","getLoginStatus","api","fb_logged_in","fb_name","loginFB","signinFB","toast","UXLoginFB","UXSubmitLogin","loginDetails","submitLogin","signin","err","$mdDialog","refresh","newUser","signupFb","login","fields","show","alert","parent","element","querySelector","clickOutsideToClose","ariaLabel","ok","submitForm","signupForm","$valid","signup","me","user_profile","activities","loading","favorites","taps","loadUserProfile","loadUserActivities","all","loadUserFavorites","loadUserTaps","sendFriendRequest","post","load","Upload","username","saveAccountInfo","obj","first_name","last_name","section_account","saveAboutInfo","favorite_book","favorite_verse","favorite_parable","denomination","section_about_me","uploadAvatar","file","uploading","upload","dataUrltoBlob","avatar","picFile","dataUrl","result","errorMsg","evt","progress","parseInt","loaded","total","changePassword","password","newPassword","newPassword1","resp","MessageService","chats","UtilityService","inputMessage","chat_id","push_new_message","message","$$phase","$digest","$","animate","scrollTop","scrollHeight","clearNotifications","subscription_succeeded","smartLoad","findHighestID","after","chatChannel","pm","pusher","subscribe","bind","sendMessage","trim","socket_id","connection","$on","event","toState","toParams","fromState","fromParams","unsubscribe","$mdToast","EmojioneService","selectedCategories","files","newPost","creating","emojionearea","emojioneArea","autoHideFilters","useSprite","placeholder","container","hideSource","on","$apply","getCategories","toggleCatPopup","showSelectCatPopup","catsClick","category","idx","splice","catsExists","removePicture","uploadImages","finished","doUpload","complete","image_id","failed","Math","min","forEach","composePost","emojione","toShort","getText","anonymous","$viewValue","createPost","o","sendPost","p","a","images","unshift","setText","id_arr","FriendshipService","types","App\\Post","App\\Tap","App\\Amen","App\\Favorite","App\\Comment","profiles","notifs","aNotif","content","action_type","acceptRequest","deleteRelationship","cancel","answer","res","actives","filePostIn","directive","restrict","transclude","scope","this","SDeletePost","post_id","remove","map","x","noPosts","CommentService","$cordovaFacebook","appUrl","isCordova","require","attrs","SuperTPostsCtrl","CommentsUI","retryButton","actions","user_ref_activities","interpretation","ref_activities","a_t","showMore","less","more","postWordsCount","text","split","shortnameToImage","all_array","slice","join","optimizedText","post_truncate","toggleMore","prayer","amens_count","taps_count","comments_count","showCommentBox","openCommentBox","comments","addComment","doCommentPost","commentBox","signinModal","deleteComment","comment_id","comment","toggleFavorite","doFavorite","favorited","favorites_count","toggleTap","doTap","tapped_into","sayAmen","doSayAmen","amen","shareToFb","options","method","picture","caption","description","showDialog","success","deletePost","e","elem","filter","num","out","round","factory","cordova","urlBase64Decode","str","output","atob","getClaimsFromToken","claims","encoded","JSON","parse","rawToken","service","getPosts","makeCall","encrypted","authEndpoint","auth","headerAuthBearerRefresh","$window","$facebook","facebookConnectPlugin","getElementsByClassName","targetEvent","simple","position","hideDelay","firstName","lastName","sex","email","exp","Date","now","buildAuthProfile","reInitPusher","u","saveToken","doFbLogin","fb_response","json","fb_access_token","authResponse","accessToken","tokenClaims","uid","sub","pubStreamPosts","postsCat","param","loadMessages","getOtherUserFromSubs","subs","otherUser","notif_channel","notifications_subscribe","notifications_unsubscribe","n_chanell","m_notif","f_requests","getIndexById","arr","checkIfCurrentChat","chat","users","initPusher","n","patch","findHighestTimestamp","created_at","userID","imageType","sprites"],"mappings":"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","file":"app.js","sourcesContent":["// \"use strict\";\nvar app = angular.module('testify', [\n  'ngMaterial',\n  'chieffancypants.loadingBar',\n  'ngAnimate',\n  'ngMessages',\n  'angularMoment',\n  'ui.router',\n  'ngStorage',\n  'restangular',\n  'ngFacebook',\n  'ngFileUpload',\n  'ngImgCrop',\n  'ngTextTruncate',\n  'ngSanitize',\n  'ngCordova'\n]);\n\nif ( document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1 ) {\n  app.constant('apiBase', \"https://testify-staging.herokuapp.com/api/v1\");\n  app.constant('appBase', \"/\");\n  app.constant('appUrl', \"https://testify-staging.herokuapp.com\");\n} else {\n  app.constant('appUrl', \"https://testify-staging.herokuapp.com\");\n  app.constant('appBase', \"/\");\n  app.constant('apiBase', \"api/v1\");\n}\n\napp.config(function($mdThemingProvider) {\n  var primaryPalette = $mdThemingProvider.extendPalette('blue', {\n    'contrastDefaultColor': 'light',\n    'contrastDarkColors': ['300'],\n    'contrastLightColors': ['100', '500'],\n    '500': '6AA3C8',\n    '50': '1C3456',\n    '100': '5DADE0',\n    '300': 'FAFAFA',\n    '400': 'F4F4F4'\n  });\n  var accentPalette = $mdThemingProvider.extendPalette('green', {\n\n    'contrastDefaultColor': 'light',\n    'contrastDarkColors': ['200', '300'],\n    'contrastLightColors': ['500'],\n    '500': '97B6CA',\n    '50': '1C3456',\n    '100': '5DADE0',\n    '200': 'e74c3c',\n    '300': 'FFFFFF',\n    '400': 'F4F4F4',\n    '600': '27ae60',\n    '700': '77777E'\n  });\n\n  $mdThemingProvider.definePalette('primary', primaryPalette);\n  $mdThemingProvider.definePalette('accent', accentPalette);\n  //console.log($mdThemingProvider.theme('default'));\n  $mdThemingProvider.theme('default')\n    .primaryPalette('primary', {\n      'default': '500',\n      'hue-1': '50',\n      'hue-2': '100',\n      'hue-3': '300'\n    })\n    .accentPalette('accent', {\n      'default': '200',\n      'hue-1': '600',\n      'hue-2': '700'\n    })\n    .warnPalette('red');\n\n});\n\napp.config(['$compileProvider', '$logProvider', '$animateProvider', function ($compileProvider, $logProvider, $animateProvider) {\n  $logProvider.debugEnabled(false);\n  $compileProvider.debugInfoEnabled(false);\n  //$animateProvider.classNameFilter( /\\banimated\\b/ );\n}]);\n\napp.config(function( $httpProvider, RestangularProvider, $facebookProvider,\n  apiBase) {\n  $facebookProvider.setAppId(180042792329807);\n  RestangularProvider.setBaseUrl(apiBase);\n  RestangularProvider.setFullResponse(true);\n\n  $httpProvider.interceptors.push(['$q', '$location', '$localStorage',\n    function($q, $location, $localStorage, $rootScope, Auth) {\n      return {\n        'request': function(config) {\n          config.headers = config.headers || {};\n          if ($localStorage.token) {\n            config.headers.Authorization = 'Bearer ' + $localStorage.token;\n          }\n          return config;\n        },\n        'response': function(response) {\n          var t = response.headers('Authorization');\n          if (t) {\n            t.replace('Bearer ', '');\n            $localStorage.token = t;\n            //console.log(t);\n          }\n\n          return response;\n        },\n        'responseError': function(response) {\n          if (response.status === 401 || response.status === 400 ||\n            response.status === 403) {\n            if (response.data.error == 'token_expired') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            } else if (response.data.error == 'token_invalid') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            } else if (response.data.error == 'Bad Authorization') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            } else if (response.data.error == 'token_not_provided') {\n              delete $localStorage.token;\n              Auth.resetProfile();\n              $location.path('/signin');\n            }\n\n\n\n            console.log(\"Unauthorized or forbidden\");\n\n          }\n          return $q.reject(response);\n        }\n      };\n    }\n  ]);\n});\n\napp.run(function($cordovaSplashscreen, $cordovaKeyboard, $cordovaStatusbar) {\n  window.addEventListener('load', function() {\n    new FastClick(document.body);\n  }, false);\n\n  // Load the facebook SDK asynchronously\n  (function(d, s, id){\n    var js, fjs = d.getElementsByTagName(s)[0];\n    if (d.getElementById(id)) {return;}\n    js = d.createElement(s); js.id = id;\n    js.src = \"//connect.facebook.net/en_US/sdk.js\";\n    fjs.parentNode.insertBefore(js, fjs);\n  }(document, 'script', 'facebook-jssdk'));\n\n  if(document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1){\n    document.addEventListener(\"deviceready\", function () {\n      $cordovaStatusbar.style(1);\n      $cordovaStatusbar.styleHex('#819CAD');\n      $cordovaKeyboard.hideAccessoryBar(true);\n      $cordovaSplashscreen.hide();\n\n    }, false);\n  }\n\n});\n\n\napp.config(function($stateProvider, $urlRouterProvider, $locationProvider,\n  appBase) {\n  $stateProvider\n    .state('web', {\n      //url: appBase,\n      abstract: true,\n      templateUrl: 'views/web.html'\n    }).state('web.app', {\n      abstract: true,\n      url: appBase,\n      templateUrl: 'views/web.app.html'\n    }).state('web.app.login', {\n      url: 'login',\n      templateUrl: 'views/web.app.login.html',\n    }).state('web.app.signup', {\n      url: 'signup',\n      controller: 'LoginCtrl',\n      templateUrl: 'views/web.app.signup.html'\n    }).state('web.app.logout', {\n      url: 'logout',\n      controller: 'LogoutCtrl',\n      template: \" \"\n    }).state('web.app.landing', {\n      url: '',\n      templateUrl: 'views/web.app.landing.html',\n    }).state('web.app.forgot', {\n      url: 'forgot',\n      templateUrl: 'views/web.app.forgot-password.html',\n    }).state('web.app.dashboard', {\n      abstract: true,\n      url: '',\n      templateUrl: 'views/web.app.dashboard.html',\n    }).state('web.app.dashboard.centered', {\n      abstract: true,\n      url: '',\n      templateUrl: 'views/web.app.dashboard.centered.html',\n    }).state('web.app.dashboard.centered.home', {\n      url: 'home',\n      templateUrl: 'views/web.app.dashboard.centered.home.html'\n    }).state('web.app.dashboard.centered.notifications', {\n      url: 'notifications',\n      templateUrl: 'views/web.app.dashboard.notifications.html'\n    }).state('web.app.dashboard.messages', {\n      url: 'messages',\n      templateUrl: 'views/web.app.dashboard.messages.html'\n    }).state('web.app.dashboard.message', {\n      url: 'messages/:user_id',\n      templateUrl: 'views/web.app.dashboard.message.html',\n      controller: 'MessageCtrl',\n      resolve: {\n        messagingUser: function(Restangular, $stateParams, $q){\n          var d = $q.defer();\n          Restangular.one('users', $stateParams.user_id).get().then(\n            function(r) {\n              d.resolve(r.data);\n            });\n          return d.promise;\n        }\n      }\n    }).state('web.app.dashboard.post', {\n      url: 'posts/:hash_id',\n      templateUrl: 'views/web.app.dashboard.post.html'\n    }).state('web.app.dashboard.centered.posts', {\n      url: 'posts?cat',\n      templateUrl: 'views/web.app.dashboard.centered.home.html'\n    }).state('web.app.dashboard.centered.user', {\n      url: 'user/:id',\n      resolve: {\n        profile: function($stateParams, Restangular) {\n          return Restangular.one('users', $stateParams.id).get();\n        }\n      },\n      views: {\n        '': {\n          templateUrl: \"views/web.app.dashboard.centered.profile.html\",\n          controller: 'ProfileCtrl',\n        },\n        '@web.app.dashboard.centered.user': {\n          templateUrl: 'views/web.app.dashboard.profile.activities.html',\n        }\n      }\n    }).state('web.app.dashboard.centered.user.activities', {\n      url: '/activities',\n      templateUrl: 'views/web.app.dashboard.profile.activities.html',\n    }).state('web.app.dashboard.centered.user.favorites', {\n      url: '/favorites',\n      templateUrl: 'views/web.app.dashboard.profile.favorites.html',\n    }).state('web.app.dashboard.centered.user.taps', {\n      url: '/taps',\n      templateUrl: 'views/web.app.dashboard.profile.taps.html',\n    }).state('web.app.dashboard.centered.user.edit', {\n      url: '/edit',\n      views: {\n        '@web.app.dashboard': {\n          templateUrl: 'views/web.app.dashboard.profile.edit.html'\n\n        }\n      }\n    });\n\n  $urlRouterProvider.otherwise(appBase + \"home\");\n\n  if ( document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1 ) {\n\n  } else {\n    $locationProvider.html5Mode({\n      enabled: true,\n      requireBase: false\n    });\n  }\n\n});\n","app.controller('AppCtrl', function($rootScope, $scope, $mdSidenav, $mdMedia,\n  $location, $state, $q, AppService, Auth, Me, appBase, $filter, Pusher, $stateParams, NotificationsService, TokenService, $timeout) {\n  $scope.location = $location;\n  $scope.user = Auth.userProfile;\n  $scope.composingPost = false;\n  $scope.tokHashId = TokenService.token().hash_id;\n  //$state.go('web.app.login');\n\n  $scope.ui = {\n    showSearch: false,\n    showSideNav: $state,\n    toggleNav: function (which) {\n      if(which === 'left'){\n        $mdSidenav(which).toggle();\n        $mdSidenav('right').close();\n      }else{\n        $mdSidenav(which).toggle();\n        $mdSidenav('left').close();\n      }\n      //console.log(which);\n    },\n    toggleSearchBox: function() {\n      $scope.ui.showSearch = !$scope.ui.showSearch;\n    }\n  };\n  //console.log($state);\n  //$scope.ui.showSideNav = $state.current.data.showSideNav;\n  //console.log($scope.tokHashId);\n\n\n  AppService.getCategoriesWithCount().then(function(cats) {\n    var l = cats.data.length;\n    for(var i = 0; i < l; i++){\n      cats.data[i].count = $filter('socialCounter')(cats.data[i].count);\n    }\n    $scope.categories = cats.data;\n  });\n\n\n  var originatorEv;\n  $scope.openMenu = function($mdOpenMenu, ev) {\n    originatorEv = ev;\n    $mdOpenMenu(ev);\n    //console.log(ev)\n  };\n\n  $scope.logout = function() {\n    Auth.logout();\n    //Me.callInit();\n    //console.log($scope.user);\n  };\n\n  $scope.redirect = function(state) {\n    $state.go(state);\n  };\n\n  $scope.menu = [{\n    link: '',\n    state: 'web.app.dashboard.centered.home',\n    title: 'Feeds',\n    icon: 'home',\n    condition: true,\n    click: ''\n  }];\n\n  $scope.menuAuth = [{\n    link: 'profile',\n    state: \"web.app.dashboard.centered.user({id: user.username || user.hash_id})\",\n    title: 'Profile',\n    icon: 'account',\n    condition: 'user.authenticated',\n    action: null\n  }, {\n    link: '',\n    state: 'web.app.dashboard.messages',\n    title: 'Messages',\n    icon: 'message-text-outline',\n    condition: 'user.authenticated',\n    click: ''\n  }, {\n    link: '',\n    state: \"web.app.dashboard.centered.user.favorites({id: user.username || user.hash_id})\",\n    title: 'Favourites',\n    icon: 'star',\n    condition: 'user.authenticated',\n    action: null\n  }, {\n    link: '',\n    state: \"web.app.dashboard.centered.user.edit({id: user.username || user.hash_id})\",\n    title: 'Preferences',\n    icon: 'settings',\n    condition: 'user.authenticated',\n    action: null\n  }];\n\n  $scope.getSearchResultIcon = function(type) {\n    //console.log(icon[type]);\n    return icon[type];\n  };\n\n  $scope.searchIcons = {\n    \"tag\": \"pound\",\n    \"user\": \"at\"\n  };\n\n  $scope.searchRepo = function(query) {\n    var d = $q.defer();\n    AppService.search.getList({\n      q: query\n    }).then(function(response) {\n      d.resolve(response.data.plain());\n      //console.log(response.data.plain());\n      //return result;\n    }, function() {\n      d.reject();\n    });\n\n    return d.promise;\n  };\n\n  $scope.app = {\n    notifications: {\n      messages: NotificationsService.MessageNotifications,\n      friend_requests: NotificationsService.FriendRequestNotifications,\n      general: NotificationsService.Notifications\n    },\n    messages: {\n      notifications: NotificationsService.MessageNotifications\n    }\n  };\n\n\n\n});\n","app.controller('LandingCtrl', ['Auth', '$state', function(Auth, $state) {\n    Auth.refreshProfile().then(function() {\n        if (Auth.userProfile.authenticated === true) {\n            $state.go('web.app.dashboard.centered.home');\n        }\n    });\n\n\n}]);\n\napp.controller('PostsCtrl',\n    function(AppService, PostService, Me, $scope, $state, $stateParams, Restangular,\n        UXService, $document) {\n\n        $scope.posts = PostService.stream;\n\n        if ($state.current.name == \"web.app.dashboard.post\") {\n            $scope.home.status = 1;\n\n            Restangular.one('posts', $stateParams.hash_id).get().then(\n                function(r) {\n                    $scope.home.posts = [r.data];\n                    $scope.home.status = 0;\n                }\n            );\n        }\n\n        if ($state.current.name == \"web.app.dashboard.centered.posts\") {\n            PostService.loadCategorized($stateParams.cat);\n\n            $scope.posts = PostService.categorized;\n        }\n\n    });\n\napp.controller('LoginCtrl', ['$scope', 'UXService', 'FB', '$q', '$state',\n    'Auth', 'Me', 'appBase',\n    function($scope, UXService, FB, $q, $state, Auth, Me, appBase) {\n\n        if (Auth.userProfile.authenticated === true) {\n            $state.go('web.app.dashboard.centered.home');\n        }\n\n        $scope.fb_button = \"Login with Facebook\";\n\n        FB.getLoginStatus(function(r) {\n            //console.log(r);\n            if (r.status === 'connected') {\n                //console.log(r);\n                FB.api('/me', function(r) {\n                    $scope.fb_logged_in = true;\n                    $scope.fb_name = r.name;\n                    $scope.fb_button = \"Continue as \" + $scope.fb_name;\n                });\n                //console.log(r);\n            } else {\n                //console.log(\"false;\");\n                $scope.fb_logged_in = false;\n                $scope.fb_name = \"null\";\n                $scope.fb_button = \"Login with Facebook\";\n            }\n        });\n\n        $scope.loginFB = function() {\n            Auth.signinFB().then(function() {\n                $state.go('web.app.dashboard.centered.home');\n            }, function(r) {\n                UXService.toast(r.data.error);\n            });\n        };\n\n        $scope.UXLoginFB = function() {\n            UXService.UXLoginFB();\n        };\n\n        $scope.UXSubmitLogin = function() {\n            UXService.UXSubmitLogin($scope.loginDetails);\n        };\n\n        var refresh = function() {\n            FB.api(\"/me\", {\n                fields: 'id,name,email,access_token'\n            }).then(\n                function(response) {\n                    $scope.welcomeMsg = \"Welcome \" + response.name;\n                    console.log(response);\n                    //console.log(JSON.stringify(response));\n                },\n                function(err) {\n                    $scope.welcomeMsg = \"Please log in\";\n                });\n        };\n\n        $scope.submitLogin = function() {\n            Auth.signin($scope.loginDetails).then(function(r) {\n                //console.log($scope.user);\n                $state.go('web.app.dashboard.centered.home');\n                //Me.callInit();\n                //Success Login\n            }, function(err) {\n                UXService.toast('Wrong username or password');\n            });\n        };\n\n    }\n]);\n\napp.controller('SignupCtrl', ['$scope', 'FB', 'Auth', '$location',\n    '$mdDialog', '$state',\n    function($scope, FB, Auth, $location, $mdDialog, $state) {\n        var refresh;\n\n        $scope.newUser = {};\n        $scope.signupFb = function() {\n            FB.login().then(function() {\n                refresh();\n            });\n        };\n\n        refresh = function() {\n            FB.api(\"/me\", {\n                fields: 'id,first_name,last_name,email'\n            }).then(\n                function(response) {\n                    FB.logout();\n                    //$scope.welcomeMsg = \"Welcome \" + response.name;\n                    //console.log(response);\n                    //console.log(JSON.stringify(response));\n                    //Auth.BuildSession(name, id, lastname for appctrl scope);\n                    //$location.path('/');\n                },\n                function(err) {\n                    $mdDialog.show(\n                        $mdDialog.alert()\n                        .parent(angular.element(document.querySelector('body')))\n                        .clickOutsideToClose(true)\n                        .title('Login failed!')\n                        //.content('Login failed')\n                        .ariaLabel('Failed login')\n                        .ok('close')\n                        //.targetEvent(ev)\n                    );\n\n                    //$scope.welcomeMsg = \"Please log in\";\n                });\n        };\n\n        $scope.submitForm = function() {\n            //console.log($scope.newUser);\n            //console.log($scope.signupForm.$valid);\n            if ($scope.signupForm.$valid) {\n                Auth.signup($scope.newUser).then(\n                    function(r) {\n\n                        $state.go('web.app.dashboard.centered.home');\n                        //console.log(r);\n                    },\n                    function(r) {\n                        //console.log(r);\n                    });\n            }\n        };\n\n    }\n]);\n\napp.controller('LogoutCtrl', ['$scope', 'Auth', 'Me', function($scope, Auth, Me) {\n    Auth.logout();\n    //$scope.logout();\n    console.log(\"mayama\");\n}]);\n\napp.controller('ProfileCtrl', ['Restangular', '$scope', '$stateParams',\n    '$state', 'Auth',\n    function(Restangular, $scope, $stateParams, $state, Auth) {\n        //console.log(profile);\n        $scope.me = Auth.userProfile;\n        var user_profile = Restangular.one('users', $stateParams.id);\n\n        $scope.user = {\n            profile: {},\n            activities: {\n                posts: [],\n                loading: true\n            },\n            favorites: {\n                posts: [],\n                loading: true\n            },\n            taps: {\n                posts: [],\n                loading: true\n            }\n        };\n\n        $scope.loadUserProfile = function() {\n            Restangular.one('users', $stateParams.id).get({\n                profile: true\n            }).then(function(r) {\n                $scope.user_profile = r.data;\n            });\n        };\n\n        $scope.loadUserActivities = function() {\n            $scope.user.activities.loading = true;\n            user_profile.all('activities').getList().then(function(r) {\n                $scope.user.activities.posts = r.data;\n                $scope.user.activities.loading = false;\n            });\n        };\n\n        $scope.loadUserFavorites = function() {\n            $scope.user.favorites.loading = true;\n\n            user_profile.all('favorites').getList().then(function(r) {\n                $scope.user.favorites.posts = r.data;\n                $scope.user.favorites.loading = false;\n\n            });\n        };\n\n        $scope.loadUserTaps = function() {\n            $scope.user.taps.loading = true;\n\n            user_profile.all('taps').getList().then(function(r) {\n                $scope.user.taps.posts = r.data;\n                $scope.user.taps.loading = false;\n\n            });\n        };\n\n        $scope.sendFriendRequest = function(id) {\n            Restangular.one('me').all('friends').post({\n                user_id: id\n            });\n\n        };\n\n        var load = function() {\n            $scope.loadUserProfile();\n\n            switch ($state.current.name) {\n                case 'web.app.dashboard.user.favorites':\n                    $scope.loadUserFavorites();\n                    break;\n                case 'web.app.dashboard.user.taps':\n                    $scope.loadUserTaps();\n                    break;\n                case 'web.app.dashboard.user.activities':\n                    $scope.loadUserActivities();\n                    break;\n                default:\n                    $scope.loadUserActivities();\n            }\n\n        };\n\n        load();\n\n    }\n]);\n\napp.controller('ProfileEditCtrl', ['Restangular', '$scope', '$stateParams',\n    '$state', 'Upload', 'Auth', 'UXService', 'apiBase',\n    function(Restangular, $scope, $stateParams, $state, Upload, Auth,\n        UXService, apiBase) {\n        //console.log(profile);\n        Restangular.one('me').get({\n            'profile': true\n        }).then(\n            function(r) {\n                $scope.user_profile = r.data;\n            }\n        );\n        $scope.user = Auth.userProfile;\n\n        if (!(Auth.userProfile.hash_id == $stateParams.id || Auth.userProfile.username ==\n                $stateParams.id)) {\n            console.log($stateParams);\n            $state.go('web.app.dashboard.centered.home');\n        }\n\n        $scope.saveAccountInfo = function(obj) {\n            Restangular.one('me').post(\n                'profile', obj).then(function(r) {\n                Auth.userProfile.first_name = obj.first_name;\n                Auth.userProfile.last_name = obj.last_name;\n                Auth.userProfile.username = obj.username;\n\n                $scope.section_account = false;\n            });\n\n        };\n\n        $scope.saveAboutInfo = function(obj) {\n            Restangular.one('me').post(\n                'profile', obj);\n            Auth.userProfile.location = obj.location;\n            if (Auth.userProfile.profile === null) {\n                Auth.userProfile.profile = {};\n            }\n            Auth.userProfile.profile.favorite_book = obj.favorite_book;\n            Auth.userProfile.profile.favorite_verse = obj.favorite_verse;\n            Auth.userProfile.profile.favorite_parable = obj.favorite_parable;\n            Auth.userProfile.profile.denomination = obj.denomination;\n\n            $scope.section_about_me = false;\n        };\n\n        $scope.uploadAvatar = function(file) {\n            $scope.uploading = true;\n\n            Upload.upload({\n                url: apiBase + '/me/profile/avatar',\n                data: {\n                    file: Upload.dataUrltoBlob(file)\n                }\n            }).then(function(r) {\n                Auth.userProfile.avatar = r.data.url;\n                UXService.toast('Successfully updated your display picture');\n\n            }, function() {\n                //console.log(file);\n                UXService.toast('Changing display picture wasn\\'t successful');\n            }).finally(function() {\n                $scope.uploading = false;\n                $scope.picFile = '';\n            });\n        };\n\n        $scope.upload = function(dataUrl) {\n            console.log(9);\n            Upload.upload({\n                url: 'https://angular-file-upload-cors-srv.appspot.com/upload',\n                data: {\n                    file: Upload.dataUrltoBlob(dataUrl)\n                },\n            }).then(function(response) {\n                $timeout(function() {\n                    $scope.result = response.data;\n                });\n            }, function(response) {\n                if (response.status > 0) $scope.errorMsg = response.status +\n                    ': ' + response.data;\n            }, function(evt) {\n                $scope.progress = parseInt(100.0 * evt.loaded / evt.total);\n            });\n        };\n\n        $scope.changePassword = function() {\n            if ($scope.password.newPassword &&\n                $scope.password.newPassword1 && $scope.password.newPassword === $scope.password.newPassword1) {\n                Restangular.one('me').post('password',\n                    $scope.password).then(function(resp) {\n                    if (resp.status == 202) {\n                        UXService.toast('Successfully changed password');\n                    }\n                }, function(resp) {\n                    UXService.toast('Something\\'s wrong');\n                });\n            } else {\n                UXService.toast('Please repeat the password');\n            }\n        };\n\n    }\n]);\n\napp.controller('MessagesCtrl', function($scope, $state, $stateParams, Restangular, Auth, Pusher, MessageService) {\n\n    $scope.chats = MessageService.messages;\n\n});\n\napp.controller('MessageCtrl', ['$scope', '$rootScope', 'messagingUser', 'Restangular', 'Auth', '$stateParams', '$state', 'Pusher', 'NotificationsService', 'UtilityService', function($scope, $rootScope, messagingUser, Restangular, Auth, $stateParams, $state, Pusher, NotificationsService, UtilityService) {\n    $scope.messages = [];\n    $scope.inputMessage = '';\n    $scope.messagingUser = messagingUser;\n    var chat_channel = \"\";\n    var chat_id = null; //will be set after call to server in restangular promise\n\n    if (!$stateParams.user_id) {\n        $state.go('web.app.dashboard.centered.home');\n    }\n\n    var push_new_message = function(message) {\n        $scope.messages.push(message);\n\n        if (!$scope.$$phase) {\n            $scope.$digest();\n        }\n\n        $(\"#messages-container\").animate({\n            scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n        }, 500);\n\n        NotificationsService.clearNotifications(chat_id); //TO-DO::: MAKE THIS A SERVER CALL TO CLEAR NOTIFICATION ON SERVER SIDE\n    };\n\n    var subscription_succeeded = function(message) {\n        //$scope.messages.push(message);\n        smartLoad($scope.messages);\n    };\n\n    var smartLoad = function(messages) {\n        var id = UtilityService.findHighestID(messages);\n        //console.log(id);\n\n        Restangular.all('me').all('messages').one($stateParams.user_id).get({\n            after: id\n        }).then(\n            function(r) {\n                //console.log($stateParams.user_id);\n                var count = r.data.length;\n                if (count) {\n                    for (var i = 0; i < count; i++) {\n                        $scope.messages.push(r.data[i]);\n                    }\n                    NotificationsService.clearNotifications(chat_id);\n                }\n\n                $(\"#messages-container\").animate({\n                    scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n                }, 1);\n\n            },\n            function(r) {\n\n            });\n\n    };\n\n    Restangular.all('me').all('messages').one($stateParams.user_id).getList().then(\n        function(r) {\n            //console.log(r.headers('X-CHAT-ID'));\n            chat_id = r.headers('X-CHAT-ID');\n            chatChannel = 'private-message-' + chat_id;\n            $scope.messages = r.data;\n            if (r.length) {\n                NotificationsService.clearNotifications(chat_id);\n            }\n            var pm = Pusher.pusher.subscribe(chatChannel);\n\n            pm.bind('new_message', push_new_message);\n            pm.bind('pusher:subscription_succeeded', subscription_succeeded);\n\n            $(\"#messages-container\").animate({\n                scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n            }, 1);\n\n        },\n        function(r) {\n\n        });\n\n    $scope.sendMessage = function() {\n        if ($scope.inputMessage.trim()) {\n            Restangular.all('users').one($stateParams.user_id).all('messages').post({\n                message: $scope.inputMessage,\n                socket_id: Pusher.pusher.connection.socket_id\n            }).then(function(r) {\n                $scope.messages.push(r.data);\n                $scope.inputMessage = '';\n                $(\"#messages-container\").animate({\n                    scrollTop: $(\"#messages-container\")[0].scrollHeight + 500\n                }, 1);\n            }, function(r) {\n\n            });\n        } else {\n            //Do nothing!!!;\n        }\n\n    };\n\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {\n        Pusher.pusher.unsubscribe(chatChannel);\n    });\n\n\n\n}]);\n\napp.controller('TComposerCtrl', ['$scope', 'UXService', 'AppService',\n    '$mdToast', 'Me', 'Upload', 'apiBase', '$timeout', '$document', 'EmojioneService', '$q',\n    function($scope, UXService, AppService, $mdToast, Me, Upload,\n        apiBase, $timeout, $document, EmojioneService, $q) {\n        $scope.selectedCategories = [];\n        $scope.files = [];\n        $scope.newPost = {\n            creating: false\n        };\n\n        $timeout(function() {\n            emojionearea = $('#tComposerInput').emojioneArea({\n                template: \"<editor/><filters/><tabs/>\",\n                autoHideFilters: true,\n                useSprite: true,\n                placeholder: \"Share your testimony...\",\n                container: null,\n                hideSource: true,\n\n            });\n            $scope.emojionearea = emojionearea[0].emojioneArea;\n            //console.log($scope.emojionearea);\n        }, 1);\n\n        $timeout(function() {\n            angular.element(document.querySelector('.emojionearea-editor')).on(\n                'focus',\n                function() {\n                    $scope.composingPost = true;\n                    if (!$scope.$$phase) {\n                        $scope.$apply();\n                    }\n                });\n        }, 1050);\n\n        AppService.getCategories().then(function(cats) {\n            $scope.categories = cats.data;\n\n            var length = $scope.categories.length;\n\n            for (var i = 0; i < length; i++) {\n                if ($scope.categories[i].name == 'General') {\n                    $scope.selectedCategories.push($scope.categories[i]);\n                    break;\n                }\n            }\n        });\n\n        $scope.toggleCatPopup = function() {\n\n            $scope.showSelectCatPopup = !$scope.showSelectCatPopup;\n        };\n\n        $scope.catsClick = function(category) {\n            var idx = $scope.selectedCategories.indexOf(category);\n            if (idx > -1) $scope.selectedCategories.splice(idx, 1);\n            else $scope.selectedCategories.push(category);\n        };\n\n        $scope.catsExists = function(category) {\n            if (category.name == 'General' && $scope.categories.length === 0) {\n                return true;\n            } else {\n                return $scope.selectedCategories.indexOf(category) > -1;\n\n            }\n        };\n\n        var isUploadFinished = function() {\n            finished = true;\n\n            angular.forEach($scope.files, function(file, key) {\n                if (file.complete !== true) {\n                    finished = false;\n                }\n\n            });\n            return finished;\n        };\n\n        $scope.removePicture = function(i) {\n\n            $scope.files.splice(i, 1);\n        };\n\n        var uploadImages = function(files) {\n            var d = $q.defer();\n            var finished = [];\n\n            $scope.files = files;\n\n            var doUpload = function(file) {\n                file.file = file;\n                file.upload = Upload.upload({\n                    url: apiBase + '/images',\n                    data: {\n                        file: file\n                    }\n                });\n\n                file.upload.then(function(response) {\n                    file.complete = true;\n                    file.result = response.data;\n                    //console.log(response);\n                    finished.push(response.data.image_id);\n\n                    if (files.length == finished.length) {\n                        d.resolve(finished);\n                    }\n                }, function(response) {\n                    file.failed = true;\n                    if (files.length == finished.length) {\n                        d.resolve(finished);\n                    }\n                }, function(evt) {\n                    file.progress = Math.min(100, parseInt(100.0 *\n                        evt.loaded / evt.total));\n                });\n            };\n\n            if (files && files.length) {\n                angular.forEach(files, function(file) {\n                    doUpload(file);\n                });\n\n\n            }\n            return d.promise;\n\n        };\n\n        $scope.composePost = function(ev) {\n            //post = \"\";\n            //console.log($scope);\n            //post = EmojioneService.emojione.toShort($scope.post);\n            post = EmojioneService.emojione.toShort($scope.emojionearea.getText());\n            anonymous = $scope.anonymous;\n\n            if (!post) {\n                post = \" \";\n            }\n\n            if (typeof anonymous === \"undefined\") {\n\n                anonymous = 0;\n            } else if (anonymous.$viewValue === false || anonymous === false) {\n\n                anonymous = 0;\n            } else {\n\n                anonymous = 1;\n            }\n\n            var createPost = function(o) {\n                //console.log(Me.sendPost);\n                $scope.newPost.creating = true;\n\n                var cats = [];\n                var count = $scope.selectedCategories.length;\n                for (var i = 0; i < count; i++) {\n                    cats.push($scope.selectedCategories[i].id);\n                }\n\n\n                Me.sendPost({\n                    post: o.p,\n                    anonymous: o.a,\n                    categories: cats,\n                    images: o.i\n                }).then(function(r) {\n                    $scope.newPost.creating = false;\n\n                    if (r.status === 201) {\n                        $scope.home.posts.unshift(r.data);\n                        //console.log(r.data);\n                    }\n\n                    $scope.emojionearea.setText(\"\");\n                    $scope.post = \"\";\n                    $scope.composingPost = false;\n                    $scope.files = [];\n                }, function(r) {\n                    $scope.newPost.creating = false;\n                });\n            };\n\n            if ($scope.files.length) {\n                uploadImages($scope.files).then(\n                    function(id_arr) {\n                        //console.log(id_arr);\n                        createPost({\n                            p: post.trim(),\n                            a: anonymous,\n                            i: id_arr\n                        });\n                    });\n            } else {\n                if (post.trim()) {\n                    createPost({\n                        p: post.trim(),\n                        a: anonymous,\n                        i: []\n                    });\n                } else {\n                    UXService.toast(\"Your post has no content!\");\n                }\n\n            }\n        };\n    }\n]);\n\napp.controller('NotificationsController', function($scope, Restangular, NotificationsService, FriendshipService) {\n    var types = {\n        'App\\\\Post': 'created a post',\n        'App\\\\Tap': 'tapped on a post',\n        'App\\\\Amen': 'said amen to a post',\n        'App\\\\Favorite': 'favorited a post',\n        'App\\\\Comment': 'commented on a post',\n    };\n\n    Restangular.one('me').all('friend_requests').getList().then(function(r) {\n        $scope.friend_requests = r.data;\n    });\n    Restangular.one('me').all('notifications').getList({\n        \"profiles\": true\n    }).then(function(r) {\n        //$scope.notifications = r.data;\n        $scope.notifications = [];\n\n        notifs = r.data;\n\n        for (var i = 0; i < notifs.length; i++) {\n            aNotif = {\n                content: types[notifs[i].action_type],\n                user: notifs[i].user\n            };\n\n            $scope.notifications.push(aNotif);\n        }\n\n\n    });\n\n    $scope.acceptRequest = FriendshipService.acceptRequest;\n    $scope.deleteRelationship = FriendshipService.deleteRelationship;\n\n});\n\napp.controller('UXModalLoginCtrl', ['$scope', '$mdDialog', function($scope,\n    $mdDialog) {\n    $scope.hide = function() {\n        $mdDialog.hide();\n    };\n    $scope.cancel = function() {\n        $mdDialog.cancel();\n    };\n    $scope.answer = function(answer) {\n        $mdDialog.hide(answer);\n    };\n}]);\n\napp.controller('UXModalPostCategorizeCtrl', ['$scope', '$mdDialog',\n    'AppService', 'selectedCategories',\n    function($scope, $mdDialog, AppService, selectedCategories) {\n\n        AppService.getCategories().then(function(res) {\n            $scope.categories = res.data;\n            console.log($scope.actives);\n        });\n        $scope.hide = function() {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function() {\n            $mdDialog.cancel();\n        };\n        $scope.filePostIn = function(id) {\n            console.log($scope.selectedCategories);\n\n            $mdDialog.hide(id);\n        };\n    }\n]);\n","app.directive('leftSidenav', [function() {\r\n\r\n    return {\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/app/left-sidenav.html'\r\n    };\r\n}]);\r\n\r\napp.directive('rightSidenav', [function() {\r\n    return {\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/app/right-sidenav.html'\r\n    };\r\n}]);\r\n\r\napp.directive('searchbox', [function() {\r\n    return {\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/app/searchbox.html'\r\n    };\r\n}]);\r\n\r\napp.directive('appToolbar', [function() {\r\n    return {\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/app/app-toolbar.html'\r\n    };\r\n}]);\r\n\r\napp.directive('appToolbarNoLogin', [function() {\r\n    return {\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/app/app-toolbar-no-login.html'\r\n    };\r\n}]);\r\n\r\napp.directive('testifyPosts', ['PostService', function(PostService) {\r\n    return {\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/templates/Post/posts.html',\r\n        scope: {\r\n            posts: '=testifyPosts',\r\n            status: '=status'\r\n        },\r\n        controller: function($scope) {\r\n            //console.log($scope.posts);\r\n\r\n            this.SDeletePost = function(post_id) {\r\n                PostService.post(post_id).remove().then(function(r) {\r\n                    var i = $scope.posts.map(function(x) {\r\n                            return x.id;\r\n                        })\r\n                        .indexOf(post_id);\r\n                    //console.log($scope);\r\n                    //array.splice(removeIndex, 1);\r\n                    $scope.posts.splice(i, 1);\r\n                    //scope.post = \"\";\r\n                });\r\n\r\n            };\r\n\r\n            $scope.noPosts = false;\r\n\r\n        }\r\n    };\r\n}]);\r\n\r\napp.directive('testifyPost', ['PostService', 'CommentService', 'Auth', 'UXService', 'FB', '$cordovaFacebook', 'appUrl', '$filter', 'EmojioneService', 'isCordova', function(PostService, CommentService, Auth, UXService, FB, $cordovaFacebook, appUrl, $filter, EmojioneService, isCordova) {\r\n    return {\r\n        restrict: 'A',\r\n        require: \"^?testifyPosts\",\r\n        scope: {\r\n            post: '=testifyPost'\r\n        },\r\n        templateUrl: 'partials/templates/Post/post.html',\r\n        link: function(scope, element, attrs, SuperTPostsCtrl) {\r\n            scope.user = Auth.userProfile;\r\n            scope.CommentsUI = {\r\n                loading: false,\r\n                retryButton: false\r\n            };\r\n\r\n            var actions = {\r\n                'App\\\\Tap': ['tapped into', 'this post'],\r\n                'App\\\\Favorite': ['favorited', 'this post'],\r\n                'App\\\\Amen': ['said amen', 'to this post'],\r\n                'App\\\\Comment': ['commented', 'on this post'],\r\n                'App\\\\Post': ['posted', 'on his wall'],\r\n            };\r\n\r\n            if (scope.post.user_ref_activities) {\r\n                if (scope.post.user_ref_activities.length > 0) {\r\n                    interpretation = '';\r\n                    i = 0;\r\n                    var action;\r\n                    var ref_activities = scope.post.user_ref_activities;\r\n                    l = scope.post.user_ref_activities.length;\r\n\r\n                    if (l == 1) {\r\n                        a_t = ref_activities[0].action_type;\r\n                        interpretation += ' ' +\r\n                            actions[a_t][0] +\r\n                            ' ' + actions[a_t][1];\r\n                    } else if (l == 2) {\r\n\r\n                        for (action in ref_activities) {\r\n                            i++;\r\n                            a_t = ref_activities[action].action_type;\r\n\r\n                            if (i == l - 1) {\r\n                                interpretation += ' ' + actions[a_t][0];\r\n                            }\r\n\r\n                            if (i == l) {\r\n                                interpretation += ' and ' + actions[a_t][0] + ' ' + actions[a_t][1];\r\n                            }\r\n                        }\r\n                    } else if (l > 2) {\r\n                        for (action in ref_activities) {\r\n                            i++;\r\n                            a_t = ref_activities[action].action_type;\r\n                            if (i == l - (l - 1)) {\r\n                                interpretation += ' ' + actions[a_t][0];\r\n                            } else if (i <= l - 1) {\r\n                                interpretation += ', ' + actions[a_t][0];\r\n                            } else if (l >= i) {\r\n                                interpretation += ' and ' + actions[a_t][0] + ' ' + actions[a_t][1];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    scope.interpretation = interpretation;\r\n                }\r\n\r\n            }\r\n\r\n            scope.showMore = false;\r\n            var less, more;\r\n            var postWordsCount = scope.post.text.split(' ').length;\r\n            more = EmojioneService.emojione.shortnameToImage(scope.post.text);\r\n            if(postWordsCount > 60){\r\n              var all_array = scope.post.text.split(' ');\r\n              less = all_array.slice(0, 59).join(' ') + '&hellip;';\r\n              less = EmojioneService.emojione.shortnameToImage(less);\r\n              scope.optimizedText = less;\r\n              scope.post_truncate = true;\r\n            }else{\r\n              scope.optimizedText = more;\r\n            }\r\n\r\n            scope.toggleMore = function () {\r\n              if(scope.showMore){\r\n                scope.optimizedText = less;\r\n              }else{\r\n                scope.optimizedText = more;\r\n              }\r\n              scope.showMore = !scope.showMore;\r\n            };\r\n\r\n\r\n            var originatorEv;\r\n            scope.openMenu = function($mdOpenMenu, ev) {\r\n                originatorEv = ev;\r\n                $mdOpenMenu(ev);\r\n            };\r\n\r\n            if(scope.post.prayer){\r\n              scope.amens_count = $filter('socialCounter')(scope.post.amens_count);\r\n            }\r\n            scope.taps_count = $filter('socialCounter')(scope.post.taps_count);\r\n            scope.comments_count = $filter('socialCounter')(scope.post.comments_count);\r\n\r\n            scope.showCommentBox = false;\r\n            scope.openCommentBox = function() {\r\n                //console.log(scope.post.post_id);\r\n                scope.CommentsUI.loading = true;\r\n                scope.CommentsUI.retryButton = false;\r\n                PostService.post(scope.post.id).getList('comments').then(function(r) {\r\n                    //console.log(r);\r\n                    scope.post.comments = r.data;\r\n                    scope.CommentsUI.loading = false;\r\n                }, function(r) {\r\n                    scope.CommentsUI.retryButton = true;\r\n                    scope.CommentsUI.loading = false;\r\n                });\r\n\r\n                scope.showCommentBox = true;\r\n            };\r\n\r\n            scope.addComment = function(ev) {\r\n                var doCommentPost = function() {\r\n                    //console.log(Date());\r\n                    if (scope.commentBox) {\r\n                        PostService.post(scope.post.id).post('comments', {\r\n                            text: scope.commentBox\r\n                        }).then(function(r) {\r\n                            scope.post.comments_count++;\r\n                            scope.comments_count = $filter('socialCounter')(scope.post.comments_count);\r\n                            scope.post.comments.unshift(r.data);\r\n                            scope.commentBox = \"\";\r\n                        }, function(r){\r\n                            UXService.toast('Sorry, couldn\\'t post your comment check your network and try again ');\r\n                        });\r\n                    }\r\n                };\r\n                if (Auth.userProfile.authenticated) {\r\n                    doCommentPost();\r\n                } else {\r\n                    UXService.signinModal(ev).then(function() {\r\n                        doCommentPost();\r\n                    }, function() {\r\n                        UXService.toast('Sorry, we couldn\\'t sign you check your network and try again');\r\n                    });\r\n                }\r\n            };\r\n\r\n            scope.deleteComment = function(comment_id) {\r\n                var comment = CommentService.comment(comment_id);\r\n                comment.remove().then(function(r) {\r\n                    //console.log(r);\r\n                    var i = scope.post.comments.map(function(x) {\r\n                            return x.id;\r\n                        })\r\n                        .indexOf(comment_id);\r\n                    //console.log($scope);\r\n                    //array.splice(removeIndex, 1);\r\n                    scope.post.comments.splice(i, 1);\r\n                    scope.post.comments_count--;\r\n                    scope.comments_count = $filter('socialCounter')(scope.post.comments_count);\r\n\r\n                    //scope.post = \"\";\r\n\r\n                });\r\n            };\r\n\r\n            scope.toggleFavorite = function(ev) {\r\n                //console.log(scope.post.post_id)\r\n                var doFavorite = function() {\r\n                    if (scope.post.favorited) {\r\n                        scope.post.favorited = false;\r\n                        scope.post.favorites_count--;\r\n                        PostService.post(scope.post.id).one('favorites').remove().then(function(r) {\r\n                            //console.log(r);\r\n                            scope.post.favorited = r.data.status;\r\n                            scope.post.favorites_count = r.data.count;\r\n                        });\r\n                    } else {\r\n                        scope.post.favorited = true;\r\n                        scope.post.favorites_count++;\r\n                        PostService.post(scope.post.id).one('favorites').post().then(function(r) {\r\n                            //console.log(\"created\");\r\n                            scope.post.favorited = r.data.status;\r\n                            scope.post.favorites_count = r.data.count;\r\n                        });\r\n                    }\r\n                };\r\n                if (Auth.userProfile.authenticated) {\r\n                    doFavorite();\r\n                } else {\r\n                    UXService.signinModal(ev).then(function() {\r\n                        doFavorite();\r\n                    });\r\n\r\n                }\r\n                //console.log(scope.post);\r\n            };\r\n\r\n            scope.toggleTap = function(ev) {\r\n                //console.log(scope.post.post_id)\r\n                var doTap = function() {\r\n                    if (scope.post.tapped_into) {\r\n                        scope.post.tapped_into = false;\r\n                        scope.post.taps_count--;\r\n                        PostService.post(scope.post.id).one('taps').remove().then(function(r) {\r\n                            //console.log(r);\r\n                            scope.post.tapped_into = r.data.status;\r\n                            scope.post.taps_count = r.data.count;\r\n                            scope.taps_count = $filter('socialCounter')(scope.post.taps_count);\r\n                        });\r\n                    } else {\r\n                        scope.post.tapped_into = true;\r\n                        scope.post.taps_count++;\r\n                        PostService.post(scope.post.id).one('taps').post().then(function(r) {\r\n                            //console.log(\"created\");\r\n                            scope.post.tapped_into = r.data.status;\r\n                            scope.post.taps_count = r.data.count;\r\n                            scope.taps_count = $filter('socialCounter')(scope.post.taps_count);\r\n                        });\r\n                    }\r\n                };\r\n\r\n                if (Auth.userProfile.authenticated) {\r\n                    doTap();\r\n                } else {\r\n                    UXService.signinModal(ev).then(function() {\r\n                        doTap();\r\n                    });\r\n                }\r\n                //console.log(scope.post);\r\n            };\r\n\r\n            scope.sayAmen = function(ev) {\r\n                var doSayAmen = function() {\r\n\r\n                    if(scope.post.amen === true){\r\n                        UXService.toast(\"You have already said Amen to this post\");\r\n                        return ;\r\n                    }\r\n\r\n                    scope.post.amen = true;\r\n                    scope.post.amens_count++;\r\n                    PostService.post(scope.post.id).one('amens').post().then(function(r) {\r\n                        scope.post.amen = r.data.status;\r\n                        scope.post.amens_count = r.data.count;\r\n                        scope.amens_count = $filter('socialCounter')(scope.post.amens_count);\r\n                    });\r\n\r\n                };\r\n                if (Auth.userProfile.authenticated) {\r\n                    doSayAmen();\r\n                } else {\r\n                    UXService.signinModal(ev).then(function() {\r\n                        doSayAmen();\r\n                    });\r\n\r\n                }\r\n            };\r\n\r\n            scope.shareToFb = function() {\r\n              var options = {\r\n                method: 'feed',\r\n                link: appUrl,\r\n                picture: appUrl + '/dist/img/testify-fb-share-pic.png',\r\n                name: 'Testify',\r\n                caption: 'Sharing God\\'s goodness',\r\n                description: scope.post.text + ' (Tesfify is a community for sharing your testimonies and engaging with other people\\'s testimonies)'\r\n              };\r\n              if(isCordova){\r\n                $cordovaFacebook.showDialog(options)\r\n                  .then(function(success) {\r\n\r\n                  }, function (error) {});\r\n              }else{\r\n                FB.ui(options, function(response) {});\r\n              }\r\n\r\n            };\r\n\r\n            scope.deletePost = function() {\r\n                //scope.post = null;\r\n                SuperTPostsCtrl.SDeletePost(scope.post.id);\r\n\r\n            };\r\n        }\r\n    };\r\n}]);\r\n\r\napp.directive('myIcon', ['$timeout', function($timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            icon: \"@\"\r\n        },\r\n        replace: true,\r\n        link: function(scope, e, attrs) {\r\n            //scope.icon = scope.icon;\r\n        },\r\n        template: \"<i class='mdi mdi-{{::icon}}'></i>\"\r\n    };\r\n}]);\r\n\r\napp.directive('testifyComposer', function($timeout) {\r\n    return {\r\n        restrict: 'A',\r\n        templateUrl: 'partials/app/testifyComposer.html',\r\n        link: function(scope, elem, attrs) {\r\n\r\n\r\n        }\r\n        //controller: 'TComposerCtrl'\r\n    };\r\n});\r\n","app.filter('socialCounter', function() {\r\n    return function(num) {\r\n        out = num;\r\n        if (num) {\r\n            if (num >= 999 && num < 999999) {\r\n                out = Math.round(num / 100) / 10 + \"K\";\r\n            } else if (num >= 999999 && num < 999999999) {\r\n                out = Math.round(num / 100000) / 10 + \"M\";\r\n            } else if (num >= 999999999) {\r\n                out = Math.round(num / 100000000) / 10 + \"B\";\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n});\r\n","app.factory('isCordova', [function(){\n  var cordova = document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1;\n  return cordova;\n}]);\n\napp.factory('TokenService', function($localStorage){\n\n  function urlBase64Decode(str) {\n    var output = str.replace('-', '+').replace('_', '/');\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += '==';\n        break;\n      case 3:\n        output += '=';\n        break;\n      default:\n        throw 'Illegal base64url string!';\n    }\n    return window.atob(output);\n  }\n\n  var getClaimsFromToken = function() {\n    var token = $localStorage.token;\n    var claims = {};\n\n    //console.log(token);\n    if (typeof token !== 'undefined') {\n      var encoded = token.split('.')[1];\n      claims = JSON.parse(urlBase64Decode(encoded));\n    }\n\n    return claims;\n  };\n\n  var rawToken = function(){\n    return $localStorage.token;\n  };\n\n  return {\n    token: getClaimsFromToken,\n    rawToken: rawToken\n  };\n});\n\napp.factory('AppService', ['Restangular', 'Auth', 'Me', '$q', '$timeout', function(Restangular,\n  Auth, Me, $q, $timeout) {\n\n  var app = {\n    posts: []\n  };\n\n  Auth.refreshProfile().then(function(r) {\n    //Me.callInit();\n    //console.log(\"letsee\");\n  });\n  //console.log(\"appService\");\n\n  var search = Restangular.service('search');\n\n  var getPosts = Restangular.all('posts');\n\n  var getCategories = function(){\n    var d = $q.defer();\n\n    (function makeCall(){\n      Restangular.all('categories').getList().then(function(r){\n        d.resolve(r);\n      }, function(){\n        $timeout(function () {\n          makeCall();\n        }, 10000);\n      });\n    })();\n\n    return d.promise;\n  };\n\n  var getCategoriesWithCount = function(){\n    var d = $q.defer();\n\n    (function makeCall(){\n      Restangular.all('categories').getList({count: true}).then(function(r){\n        d.resolve(r);\n      }, function(){\n        $timeout(function () {\n          makeCall();\n        }, 10000);\n      });\n    })();\n\n    return d.promise;\n  };\n\n\n  return {\n    app: app,\n    search: search,\n    getPosts: getPosts,\n    getCategories: getCategories,\n    getCategoriesWithCount: getCategoriesWithCount\n\n  };\n}]);\n\napp.factory('Pusher', ['TokenService', 'isCordova', 'apiBase', function(TokenService, isCordova, apiBase){\n\n  Pusher.log = function(message) {\n    if (window.console && window.console.log) {\n      window.console.log(message);\n    }\n  };\n\n  var pusher = new Pusher('b5fa9d11972af2e0b8d1', {\n    encrypted: true,\n    authEndpoint: apiBase + '/pusher/auth',\n    auth: {\n      headers: {\n        'Authorization': 'Bearer ' + TokenService.rawToken()\n      }\n    }\n  });\n\n  var headerAuthBearerRefresh = function () {\n    pusher.config.auth.headers.Authorization = 'Bearer ' + TokenService.rawToken();\n  };\n\n  return {\n    pusher: pusher,\n    headerAuthBearerRefresh: headerAuthBearerRefresh\n  };\n}]);\n\napp.factory('FB', function (isCordova, $window, $facebook) {\n\n  if(isCordova){\n    if($window.facebookConnectPlugin){\n      return $window.facebookConnectPlugin;\n    }else {\n      return $facebook;\n    }\n  }else {\n    return $facebook;\n  }\n});\n\napp.factory('UXService', ['$mdDialog', '$mdToast', 'Auth', '$q', '$document',\n  function($mdDialog, $mdToast, Auth, $q, $document) {\n\n    var signinModal = function(ev) {\n      var d = $q.defer();\n      $mdDialog.show({\n          controller: 'UXModalLoginCtrl',\n          templateUrl: 'partials/app/ux.signin.modal.html',\n          parent: document.getElementsByClassName(\"dialog-holder\"),\n          targetEvent: ev,\n          clickOutsideToClose: true\n        })\n        .then(function(res) {\n          d.resolve(res);\n        }, function() {\n          d.reject();\n        });\n\n      return d.promise;\n    };\n\n    var alert = function(ev, text) {\n      // Appending dialog to document.body to cover sidenav in docs app\n      // Modal dialogs should fully cover application\n      // to prevent interaction outside of dialog\n      $mdDialog.show(\n        $mdDialog.alert()\n        .parent(angular.element(document.querySelector('body')))\n        .clickOutsideToClose(true)\n        .title(text)\n        //.content(text)\n        .ariaLabel(text)\n        .ok('OK')\n        .targetEvent(ev)\n      );\n    };\n\n    var toast = function(text) {\n      $mdToast.show(\n        $mdToast.simple()\n        .content(text)\n        .position('top left')\n        .parent($document[0].querySelector('body'))\n        .hideDelay(7000)\n      );\n\n    };\n\n    var UXLoginFB = function() {\n      Auth.signinFB().then(function() {\n        $mdDialog.hide(true);\n      }, function() {\n        d = \"Do nothing\";\n      });\n    };\n\n    var UXSubmitLogin = function(loginDetails) {\n      Auth.signin(loginDetails).then(function(r) {\n        $mdDialog.hide(true);\n      }, function(err) {\n        console.log(err);\n        //console.log($scope.loginDetails);\n      });\n    };\n\n\n\n    return {\n\n      signinModal: signinModal,\n      alert: alert,\n      toast: toast,\n      UXLoginFB: UXLoginFB,\n      UXSubmitLogin: UXSubmitLogin\n\n    };\n  }\n]);\n\napp.factory('Auth',\n  function($localStorage, Restangular, $q, $state, FB, isCordova, NotificationsService, TokenService, Pusher) {\n    var user = {\n      authenticated: false,\n      id: null,\n      hash_id: null,\n      name: \"Guest\",\n      firstName: \"Guest\",\n      lastName: \"Guest\",\n      sex: null,\n      location: null,\n      email: null,\n      avatar: null,\n      profile: null\n    };\n\n    Restangular.setFullResponse(true);\n\n    var refreshProfile = function() {\n\n      var d = $q.defer();\n      if (TokenService.token().hash_id && TokenService.token().exp > Date\n        .now() / 1000) {\n\n        Restangular.one('users', TokenService.token().hash_id).get({\n          profile: true\n        }).then(\n          function(r) {\n            buildAuthProfile(r.data);\n            Pusher.headerAuthBearerRefresh();\n\n            NotificationsService.reInitPusher();\n\n            d.resolve(true);\n          },\n          function(r) {\n            if (r.status == 404) {\n              resetProfile();\n              //console.log(\"user not found\");\n              logout();\n            }\n            d.resolve(false);\n\n          });\n      } else {\n        //console.log(Date.now() / 1000);\n        //console.log(getClaimsFromToken().exp);\n        //delete $localStorage.token;\n        resetProfile();\n      }\n\n      return d.promise;\n    };\n\n    var buildAuthProfile = function(u) {\n      //console.log(u);\n      user.authenticated = true;\n      user.id = u.id;\n      user.hash_id = u.hash_id;\n      user.name = u.first_name + ' ' + u.last_name;\n      user.firstName = u.first_name;\n      user.lastName = u.last_name;\n      user.username = u.username;\n      user.location = u.location;\n      user.email = u.email;\n      user.avatar = u.avatar;\n      user.profile = u.profile;\n    };\n\n    var saveToken = function(token) {\n\n      $localStorage.token = token;\n      user.token = token;\n    };\n\n    var signup = function(newUser) {\n      var d = $q.defer();\n\n      Restangular.service('signup').post(newUser).then(function(r) {\n        //console.log(r);\n        saveToken(r.data.token);\n        refreshProfile(); //Refresh session data here\n        //$scope.refreshProfile();\n        $state.go('web.app.dashboard.centered.home');\n        d.resolve(r.data.token);\n      }, function() {\n        d.reject();\n      });\n\n      return d.promise;\n    };\n\n    var signin = function(l) {\n      var d = $q.defer();\n\n      Restangular.service('authenticate').post(l).then(function(r) {\n        //console.log(r);\n        saveToken(r.data.token);\n        refreshProfile(); //Refresh session data here\n        //$scope.refreshProfile();\n        $state.go('web.app.dashboard.centered.home');\n        d.resolve(r.data.token);\n      }, function() {\n        d.reject();\n      });\n\n      return d.promise;\n    };\n\n    var signinFB = function() {\n      //console.log(\"loginctrl\");\n      var d = $q.defer();\n\n      var doFbLogin = function(fb_response) {\n        //console.log('called');\n        var d = $q.defer();\n        r = fb_response;\n        if (r.status === 'connected') {\n          json = {\n            \"fb_access_token\": r.authResponse.accessToken\n          };\n          Restangular.service('fb-token').post(json).then(function(r) {\n            saveToken(r.data.token);\n            refreshProfile(); //Refresh session data here\n            //console.log(r);\n            d.resolve(r);\n          }, function(r) {\n            d.reject(r);\n          });\n        } else {\n          //console.log('reject');\n          d.reject();\n\n        }\n        return d.promise;\n      };\n\n      FB.login(['public_profile', 'email']).then(function(r) {\n        //console.log(r);\n        doFbLogin(r).then(function() {\n          d.resolve();\n        }, function(r) {\n          d.reject(r);\n        });\n      }, function(){\n        d.reject();\n      });\n\n      return d.promise;\n    };\n\n    var logout = function() {\n      NotificationsService.unsubscribe();\n      tokenClaims = {};\n      delete $localStorage.token;\n      refreshProfile();\n      $state.go('web.app.login');\n    };\n\n    var resetProfile = function() {\n      user.authenticated = false;\n      user.id = null;\n      user.hash_id = null;\n      user.name = \"Guest\";\n      user.firstName = \"Guest\";\n      user.lastName = \"Guest\";\n      user.sex = null;\n      user.location = null;\n      user.email = null;\n      user.avatar = null;\n    };\n\n    return {\n      signup: signup,\n      signin: signin,\n      signinFB: signinFB,\n      logout: logout,\n      refreshProfile: refreshProfile,\n      resetProfile: resetProfile,\n      userProfile: user,\n    };\n  }\n);\n\napp.factory('Me', ['Auth', 'Restangular', '$q', 'TokenService', function(Auth, Restangular, $q, TokenService) {\n\n  var uid = TokenService.token().sub;\n  //console.log(uid);\n\n  var me = Restangular.one('users', uid);\n\n  var sendPost = function(o) {\n    return Restangular.all('posts').post({\n      \"post\": o.post,\n      \"anonymous\": o.anonymous,\n      \"categories\": o.categories,\n      \"images\": o.images\n    });\n  };\n\n  return {\n    id: uid,\n    me: me,\n    authenticated: Auth.userProfile.authenticated,\n    favorites: me.all('favorites'),\n    profile: Auth.userProfile,\n    sendPost: sendPost\n\n  };\n}]);\n\napp.factory('PostService', function(Restangular, UXService, $q, $timeout) {\n\n    var pubStreamPosts = {\n      data: [],\n      status: 0\n    };\n\n    var postsCat = {\n      data: [],\n      status: 0\n    };\n\n    var post = {\n        data: {},\n        status: false\n    };\n\n    var loadPosts = (function() {\n        pubStreamPosts.status = 1;\n        Restangular.all('posts').getList().then(function(r) {\n          pubStreamPosts.data = r.data;\n          pubStreamPosts.status = 0;\n        }, function(err) {\n          pubStreamPosts.status = 2;\n          UXService.toast(\"Something's wrong\");\n        });\n    })();\n\n    var loadCategorized = function(category) {\n      var param = null;\n\n      if (category) {\n        load({\n          category: category\n        });\n      } else {\n        load({});\n      }\n\n      function load(param) {\n            postsCat.status = 1;\n\n            Restangular.all('posts').getList(param).then(function(r) {\n                    postsCat.data = r.data;\n                    postsCat.status = 0;\n                }, function(err) {\n                    postsCat.status = 2;\n                    UXService.toast(\"Something's wrong\");\n                });\n        }\n    };\n\n    return {\n        stream: pubStreamPosts,\n        categorized: postsCat,\n        loadCategorized: loadCategorized\n    };\n\n});\n\napp.factory('MessageService', function($rootScope, Auth, Restangular, UXService, $q, $timeout){\n    var messages = {\n        data: []\n    };\n\n    var loadMessages = (function() {\n        Restangular.one('me').all('messages').getList().then(\n          function(r) {\n            var chats = r.data;\n\n            var getOtherUserFromSubs = function(subs){\n              var count  = subs.length;\n\n              for(var i = 0; i < count; i++){\n                if(subs[i].user_id != Auth.userProfile.id){\n                  return subs[i].user;\n                }\n              }\n            };\n\n            var count = r.data.length;\n            for(var i = 0; i < count; i++){\n              chats[i].otherUser = getOtherUserFromSubs(r.data[i].subs);\n            }\n\n            messages.data = r.data;\n\n        },function(err) {\n              $timeout(function(){\n                  loadMessages();\n              }, 10000);\n          });\n    })();\n\n    return {\n        messages: messages\n    };\n});\n\napp.factory('CommentService', ['Restangular', '$q', function(Restangular, $q) {\n\n  var posts = Restangular.all('comments');\n\n  var comment = function(id) {\n    return Restangular.one('comments', id);\n  };\n\n  return {\n    comment: comment\n  };\n\n}]);\n\napp.factory('SocialService', ['FB', 'Auth', function(FB, Auth) {\n\n\n  return {\n\n  };\n}]);\n\napp.factory('PChannels', function(TokenService, Pusher){\n\n  var notif_channel = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n\n  var notifications_subscribe = function(){\n    //var channel = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n    //notifications = channel;\n    notif_channel.subscribe('private-notifications-' + TokenService.token().hash_id);\n  };\n\n  var notifications = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n\n  return {\n    notifications: notifications,\n    notifications_subscribe: notifications_subscribe,\n    notifications_unsubscribe: function (){\n      return Pusher.pusher.unsubscribe('private-notifications-' + TokenService.token().hash_id);\n    }\n  };\n});\n\napp.factory('NotificationsService', function(TokenService, Pusher, $state, $stateParams, $rootScope, Restangular){\n\n  var n_chanell = null;\n\n  var m_notif = [];\n  var notifs = [];\n  var f_requests = [];\n\n  var getIndexById = function(arr, obj){\n    var count = arr.length;\n    for(var i = 0; i < count; i++){\n      if(arr[i].id == obj.id){\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  var checkIfCurrentChat = function(chat){\n    if($state.current.name == \"web.app.dashboard.message\"){\n        var count = chat.users.length;\n\n        for(i = 0; i < count; i++){\n          if(chat.users[i].hash_id == $stateParams.user_id || chat.users[i].username == $stateParams.user_id){\n            return true;\n          }\n        }\n        return false;\n      }\n    };\n\n  var initPusher = function(){\n    if(!TokenService.token().hash_id)\n      return;\n\n    var n = Pusher.pusher.subscribe('private-notifications-' + TokenService.token().hash_id);\n    n_chanell = n;\n    n.bind('new_message', function(data) {\n      if(!checkIfCurrentChat(data)){\n        var idx = getIndexById(m_notif, data);\n        if(idx == -1){\n          m_notif.push(data);\n          if(!$rootScope.$$phase){\n            $rootScope.$digest();\n          }\n        }\n      }\n    });\n\n    n.bind('pusher:subscription_succeeded', function(status) {\n      Restangular.one('me').all('messages').all('unread').getList().then(\n        function(r){\n          var count = r.data.length;\n          m_notif.splice(0, r.data.length);//Clear the array first\n          for(var i = 0; i < count; i++){\n            //console.log(i, count);\n            //var idx = getIndexById(m_notif, r.data[i]);\n            //if(idx == -1){\n              m_notif.push(r.data[i]);//repopulate the array since its from the server\n            //}\n          }\n\n          if(!$rootScope.$$phase){\n            $rootScope.$digest();\n          }\n\n        }\n      );\n      Restangular.one('me').all('notifications').getList().then(\n        function(r){\n          var count = r.data.length;\n          notifs.splice(0, r.data.length);//Clear the array first\n          for(var i = 0; i < count; i++){\n              notifs.push(r.data[i]);//repopulate the array since its from the server\n          }\n\n          if(!$rootScope.$$phase){\n            $rootScope.$digest();\n          }\n\n        }\n      );\n      Restangular.one('me').all('friend_requests').getList().then(\n        function(r){\n          var count = r.data.length;\n          f_requests.splice(0, r.data.length);//Clear the array first\n          for(var i = 0; i < count; i++){\n              f_requests.push(r.data[i]);//repopulate the array since its from the server\n          }\n\n          if(!$rootScope.$$phase){\n            $rootScope.$digest();\n          }\n\n        }\n      );\n    });\n\n    n.bind('pusher:subscription_error', function(status) {\n      if(status == 408 || status == 503){\n        // retry?\n      }\n    });\n  };\n\n  var clearNotifications = function(chat_id){\n\n    Restangular.one('me').one('messages', chat_id).one('read').patch();\n\n    var idx = getIndexById(m_notif, chat_id);\n    if(idx >= 0){\n      m_notif.splice(idx, 1);\n    }\n  };\n\n  var unsubscribe = function (){\n    n_chanell.unsubscribe('private-notifications-' + TokenService.token().hash_id);\n  };\n\n  initPusher();\n\n  return {\n    MessageNotifications: m_notif,\n    Notifications: notifs,\n    FriendRequestNotifications: f_requests,\n    clearNotifications: clearNotifications,\n    unsubscribe: unsubscribe,\n    reInitPusher: initPusher\n  };\n});\n\napp.factory('UtilityService', function(){\n\n  var findHighestID = function(arr){\n    var count = arr.length;\n    //console.log(arr, count);\n    return arr[count - 1].id;\n  };\n\n  var findHighestTimestamp = function(arr){\n    var count = arr.length;\n    return arr[count - 1].created_at;\n  };\n\n  return {\n    findHighestID: findHighestID,\n    findHighestTimestamp: findHighestTimestamp\n  };\n});\n\napp.factory('FriendshipService', function(Restangular){\n\n    var acceptRequest = function(userID){\n        Restangular.one('me').all('friend_requests').post({\n            user_id: userID\n        });\n    };\n\n    var deleteRelationship = function(userID){\n        Restangular.one('me').one('friend_requests', userID).remove();\n    };\n\n\n    return {\n        acceptRequest: acceptRequest,\n        deleteRelationship: deleteRelationship\n    };\n});\n\napp.factory('EmojioneService', function(){\n    var emojione = window.emojione;\n\n    //emojione.imagePathPNG = 'bower_components/emojione/assets/png/';\n    emojione.imageType = 'png';\n    emojione.sprites = true;\n\n    return {\n        emojione: emojione\n    };\n});\n"],"sourceRoot":"/source/"}